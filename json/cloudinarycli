{
    "info": {
        "author": "Brian Luk",
        "author_email": "brian@cloudinary.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3 :: Only"
        ],
        "description": "# Cloudinary CLI\n\n## Features\n\nThis command line interface is fully and (almost: see Caveats) seamlessly integrated with Cloudinary's Upload, Search, and Admin APIs via the pycloudinary SDK.\n\nAdditional features include:\n\n- Code generation\n- Directory uploading\n- Listing files\n\n## Requirements\n\nPython 3.x\n\n## Getting started\n\nSet your CLOUDINARY_URL environment variable by adding `export CLOUDINARY_URL=<YOUR_CLOUDINARY_URL>` to your terminal config file.\n\n```\necho \"export CLOUDINARY_URL=YOUR_CLOUDINARY_URL\" >> ~/.profile\n```\n\nTo install this package, run:\n\n```\npip3 install cloudinary-cli\n```\n\n## Quickstart\n\n#### 5 commands to help you get started:\n\n- `cld --help` lists the available functions\n- `cld upload --help` lists options for uploading\n- `cld admin -ls` lists functions available in the Admin API\n- `cld uploader -ls` lists functions available in the Upload API\n- `cld search --help` Search API parameters\n\n## Docs\n\nMost of the functionality (functions to call, parameters, options) is dependent on [Cloudinary's official documentation](https://cloudinary.com/documentation/image_upload_api_reference).\n\n### Upload\n\n`cld upload <resource_type> <options>`\n\nExample:\n```\ncld upload https://res.cloudinary.com/demo/image/upload/sample -t w_500,e_vectorize,ar_1 -pid nice_flowers\n```\n\n![](http://res.cloudinary.com/brianl/image/upload/docs/docs_upload.gif)\n\n```\nUsage: cld upload [OPTIONS] IMGSTRING\n\nOptions:\n  -pid, --public_id\n  -type, --_type\n  -up, --upload_preset\n  -t, --transformation       A raw transformation\n                             (eg. f_auto,q_auto,w_500,e_vectorize)\n  -e, --eager                An eager transformation or an array of eager\n                             transformations\n  -o, --options              Options to use (eg. -o\n                             option1=value1&option2=value2)\n  -open, --open              Opens the image in a new window\n  --help                     Show this message and exit.\n```\n\n### Upload API bindings\n\n`cld uploader <method> <args> <kwargs>`\n\nExample:\n```\ncld uploader upload http://res.cloudinary.com/demo/image/upload/sample public_id=flowers\ncld uploader rename flowers secret_flowers to_type=private\n```\n\n![](http://res.cloudinary.com/brianl/image/upload/docs/docs_uploader.gif)\n\n### Search API bindings\n\n`cld search <lucene query string>`\n\nExample:\n```\ncld search cat AND tags:kitten -f context -f tags -n 10\n```\n\n![](http://res.cloudinary.com/brianl/image/upload/docs/docs_search.gif)\n\n### Admin API bindings\n\n`cld admin <method> <args> <kwargs>`\n\nExample:\n```\ncld admin resources max_results=10 prefix=sample\n```\n\n![](http://res.cloudinary.com/brianl/image/upload/docs/docs_admin.gif)\n\n### Additional features\n\n#### Listing all files\n\n`cld ls <field(s) to return and/or resource queries>`\n\nBasic usage:\n`cld ls`\n\nThe following statements are equivalent:\n\n```\ncld ls public_id url type=private resource_type=image\ncld ls type=private resource_type=image public_id url\ncld ls type=private public_id url resource_type=image\n```\n\n![](http://res.cloudinary.com/brianl/image/upload/docs/docs_ls.gif)\n\n\n#### Uploading a local directory\n\nUpload a local directory and preserve the folder structure.\n\n`cld upload_dir <directory_name>`\n\nExample:\n\n```\ncld upload_dir ~/Desktop/my_directory -v -f my_local_folder\n```\n\n![](http://res.cloudinary.com/brianl/image/upload/docs/docs_upload_dir.gif)\n\n\n#### Code Sample Generation\n\n`cld make <language> <name of template>`\n\neg. \nThe following statements are equivalent:\n```\ncld make html upload widget\ncld make upload_widget html\ncld make upload widget\n```\n\nFor language-specific templates, include the language in the command\n\neg.\n`cld make python upload` or `cld make upload python`\n\n### Caveats\n\n- Passing a parameter or option as a list or object must be encapsulated in single quotes, and strings within in double quotes.\n    - '[\"this\",\"will\",\"be\",\"read\",\"as\",\"a\",\"list\"]'\n    - '{\"an\":\"object\",\"or\":\"dict\"}'\n\n\n- Passing a string that can be evaluated as an object, list, or boolean will be evaluated as such, so please refrain from such naming conventions in your public_id, upload_preset, or named transformation:\n    - 'True'\n    - 'true'\n    - '[\"public\",\"ids\",\"looking\",\"like\",\"lists\",\"wont\",\"work\"]'\n    - '{\"not\":\"okay\"}'",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/brian-cloudinary/cloudinary-cli",
        "keywords": "cloudinary cli pycloudinary image video digital asset management command line interface transformation friendly easy flexible",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "cloudinarycli",
        "package_url": "https://pypi.org/project/cloudinarycli/",
        "platform": "",
        "project_url": "https://pypi.org/project/cloudinarycli/",
        "project_urls": {
            "Homepage": "https://github.com/brian-cloudinary/cloudinary-cli"
        },
        "release_url": "https://pypi.org/project/cloudinarycli/0.1.7/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "A command line interface for Cloudinary with full API support",
        "version": "0.1.7"
    },
    "last_serial": 4812942,
    "releases": {
        "0.1.7": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "69bfb3cf4dd7da0e27c51dbeeceb68f4",
                    "sha256": "c790d0e261a29aa683560e8ff250cab9060709132f464a966e444d09b4cf9a0c"
                },
                "downloads": -1,
                "filename": "cloudinarycli-0.1.7.tar.gz",
                "has_sig": false,
                "md5_digest": "69bfb3cf4dd7da0e27c51dbeeceb68f4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10448,
                "upload_time": "2019-02-12T21:37:13",
                "url": "https://files.pythonhosted.org/packages/db/e3/3e8a7e169f5c44712751f92119072bc111f83a432434ba29751651e6931f/cloudinarycli-0.1.7.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "69bfb3cf4dd7da0e27c51dbeeceb68f4",
                "sha256": "c790d0e261a29aa683560e8ff250cab9060709132f464a966e444d09b4cf9a0c"
            },
            "downloads": -1,
            "filename": "cloudinarycli-0.1.7.tar.gz",
            "has_sig": false,
            "md5_digest": "69bfb3cf4dd7da0e27c51dbeeceb68f4",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 10448,
            "upload_time": "2019-02-12T21:37:13",
            "url": "https://files.pythonhosted.org/packages/db/e3/3e8a7e169f5c44712751f92119072bc111f83a432434ba29751651e6931f/cloudinarycli-0.1.7.tar.gz"
        }
    ]
}