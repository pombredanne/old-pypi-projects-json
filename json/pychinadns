{
    "info": {
        "author": "faicker.mo",
        "author_email": "faicker.mo@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 5 - Production/Stable",
            "Intended Audience :: System Administrators",
            "License :: OSI Approved :: MIT License",
            "Operating System :: MacOS :: MacOS X",
            "Operating System :: Microsoft :: Windows",
            "Operating System :: POSIX",
            "Programming Language :: Python :: 2",
            "Programming Language :: Python :: 2.6",
            "Programming Language :: Python :: 2.7",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.3",
            "Programming Language :: Python :: 3.4",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Topic :: Internet :: Name Service (DNS)",
            "Topic :: System :: Networking"
        ],
        "description": "[![Build Status](https://travis-ci.org/faicker/pychinadns.svg?branch=master)](https://travis-ci.org/faicker/pychinadns)\n[![Coverage Status](https://coveralls.io/repos/github/faicker/pychinadns/badge.svg?branch=master)](https://coveralls.io/github/faicker/pychinadns?branch=master)\n\n# pychinadns\n\nA DNS recursive resolve server to avoid result being poisoned and friendly to CDN. It will qeury dns servers at the same time.\nYou must config at least two dns servers. One is local and the other is foreign which is not poisoned(tunnel through VPN or use OpenDNS 443/5353 port, dnscrypt-proxy is recommended).\n\nUse the response as follows,\n\n```\nFirst filter poisoned ip with blocked iplist with -b argument.\nSecond,\n                           | result is local | result is foreign\n     local dns server      |    A            |   B\n     foreign dns server    |    C            |   D\n\nFrom the matrix, we get the result as follows,\nAC: use local dns server result\nAD: use local dns server result\nBC: not possible. use foreign dns server result\nBD: use foreign dns server result\n```\n\n## Install\n\n```bash\n$ pip install pychinadns\n```\n\n## Usage\n\n```bash\n$ pychinadns -r chinadns -u 223.5.5.5:53,208.67.222.222:5353 -l debug -f /usr/etc/pychinadns/chnroute.txt -b /usr/etc/pychinadns/iplist.txt\n```\nor\n\n```bash\n$ pychinadns -r chinadns -u 223.5.5.5:53,8.8.8.8:53 -l debug -f /usr/etc/pychinadns/chnroute.txt -b /usr/etc/pychinadns/iplist.txt\n```\n\n## Configure\n\n```bash\n$ pychinadns -r chinadns -h\nusage: chinadns.py [-h] [-r HANDLER] [-p PORT] [-u UPSTREAM] [-t TIMEOUT]\n                   [-l LOGLEVEL] [-m MODE] -f CHNROUTE -b BLACKLIST\n                   [--rfc1918] [--cache]\n\noptional arguments:\n  -h, --help\n  -r HANDLER, --handler HANDLER\n                        Specify handler class, chinadns|quickest (default:\n                        None)\n  -p PORT, --port PORT  Specify listen port or ip (default: 127.0.0.1:5353)\n  -u UPSTREAM, --upstream UPSTREAM\n                        Specify multiple upstream dns servers (default:\n                        223.5.5.5:53,8.8.8.8:53)\n  -t TIMEOUT, --timeout TIMEOUT\n                        Specify upstream timeout (default: 1.0)\n  -l LOGLEVEL, --log-level LOGLEVEL\n                        Specify log level, debug|info|warning|error (default:\n                        info)\n  -m MODE, --mode MODE  Specify io loop mode, select|epoll (default: select)\n  -f CHNROUTE, --chnroute CHNROUTE\n                        Specify chnroute file (default: None)\n  -b BLACKLIST, --blacklist BLACKLIST\n                        Specify ip blacklist file (default: None)\n  --rfc1918             Specify if rfc1918 ip is local (default: False)\n  --cache               Specify if cache is enabled (default: False)\n```\n\n## Acknowledgements\n\n+ @clowwindy: the author of the [ChinaDNS](https://github.com/shadowsocks/ChinaDNS)\n\n## License\n\nThis project is under the MIT license. See the [LICENSE](LICENSE) file for the full license text.",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/faicker/pychinadns",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "pychinadns",
        "package_url": "https://pypi.org/project/pychinadns/",
        "platform": "unix",
        "project_url": "https://pypi.org/project/pychinadns/",
        "project_urls": {
            "Homepage": "https://github.com/faicker/pychinadns"
        },
        "release_url": "https://pypi.org/project/pychinadns/0.9/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "A non-poisonous and CDN-friendly Recursive DNS Resolver",
        "version": "0.9"
    },
    "last_serial": 4481248,
    "releases": {
        "0.5": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32f2b0e365ba7f3cb0dec2d178b9b292",
                    "sha256": "7d3fc33a29fe89586c55981d4371e79c025068728a43a6f6d06113bf496132f5"
                },
                "downloads": -1,
                "filename": "pychinadns-0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "32f2b0e365ba7f3cb0dec2d178b9b292",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 71690,
                "upload_time": "2017-04-16T04:46:20",
                "url": "https://files.pythonhosted.org/packages/2b/64/92a48e150f85251d28afab56b268c59d7ebf2ad9e992b6e71e535cac267c/pychinadns-0.5.tar.gz"
            }
        ],
        "0.6": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1b49d552729729d4acf41bc903c4a225",
                    "sha256": "52cf6b822d9f05a3f4620d1dfcc8508a13fff886f25b312490980dc0b57d77f5"
                },
                "downloads": -1,
                "filename": "pychinadns-0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "1b49d552729729d4acf41bc903c4a225",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 71784,
                "upload_time": "2017-04-16T06:29:38",
                "url": "https://files.pythonhosted.org/packages/2c/e4/7b92623c38d202e414c560b8caa34f36b339526cd42db45ae328b9cff8d3/pychinadns-0.6.tar.gz"
            }
        ],
        "0.7": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "546f6d2ba94ddf56e8c2c75ddd629b13",
                    "sha256": "809bd590d7b85e6b306417d93d7dc1d7735463dfd744c3c8d5ec53efb0b9ae93"
                },
                "downloads": -1,
                "filename": "pychinadns-0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "546f6d2ba94ddf56e8c2c75ddd629b13",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 77324,
                "upload_time": "2017-11-19T09:37:20",
                "url": "https://files.pythonhosted.org/packages/2a/9d/6ab297fead8a4edc13cfaf3bba1d097675176b1be21393faafdee9ee9c74/pychinadns-0.7.tar.gz"
            }
        ],
        "0.9": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c25ddb408ce206669bbeda06f6221408",
                    "sha256": "572a9760448b9a0f1eaab275a9dc87796122987bb33965acec91fedd193616a8"
                },
                "downloads": -1,
                "filename": "pychinadns-0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "c25ddb408ce206669bbeda06f6221408",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 79211,
                "upload_time": "2018-11-13T10:28:25",
                "url": "https://files.pythonhosted.org/packages/56/84/b8e1a0c765e22406f21fa74c411917a6c9c42d9b67fab60cc85feaa978b2/pychinadns-0.9.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "c25ddb408ce206669bbeda06f6221408",
                "sha256": "572a9760448b9a0f1eaab275a9dc87796122987bb33965acec91fedd193616a8"
            },
            "downloads": -1,
            "filename": "pychinadns-0.9.tar.gz",
            "has_sig": false,
            "md5_digest": "c25ddb408ce206669bbeda06f6221408",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 79211,
            "upload_time": "2018-11-13T10:28:25",
            "url": "https://files.pythonhosted.org/packages/56/84/b8e1a0c765e22406f21fa74c411917a6c9c42d9b67fab60cc85feaa978b2/pychinadns-0.9.tar.gz"
        }
    ]
}