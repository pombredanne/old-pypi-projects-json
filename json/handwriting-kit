{
    "info": {
        "author": "Aditya Dutt",
        "author_email": "aditya.dutt@ufl.edu",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 4 - Beta",
            "Intended Audience :: Developers",
            "Intended Audience :: Education",
            "Intended Audience :: Science/Research",
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 2.7",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.4",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Topic :: Scientific/Engineering",
            "Topic :: Scientific/Engineering :: Artificial Intelligence",
            "Topic :: Scientific/Engineering :: Image Recognition",
            "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "description": "`handwriting-kit v0.0.1 on PyPi` `MIT license` `Beta`\n\n## HandwritingKit\nA python package to do segmentation of cursive handwritten words.<br/><br/>\nHandwritingKit is an efficient and simple python package to do segmentation cursive handwritten words. <br />\nRecognizing cursive handwriting words is a difficult task. Firstly, it is very important to segment the word into possible characters. Often a single character is also oversegmented into multiple parts to make sure no character is still left connected to each other. These segments are called primitives. Later, several combinations of these segments are formed with each other using a dynamic programming algorithm. Then each combination is matched against lexicons to find the best possible match.</br>\n\nThis algorithm firstly cleans the word image by eliminating noise and underlines. If the word is written in a slanted fashion then slant correction is also done. After that connected component analysis is done and a segmentation algorithm is followed. The algorithm is mentioned in the report [here](https://github.com/AdityaDutt/HandwritingSegmentation/blob/master/Report/CompleteHandwritingReport.pdf).\n\n## Dependencies\n1. Numpy 1.15.4++\n1. Opencv-python 4.1++\n1. Scipy 1.2.0++\n1. Matplotlib 3.0.2++\n1. Imutils 0.5.3++\n1. Scikit_image 0.14.1++\n\n## Introduction\nThe following functions are supported:\n- ``generatePrimitives`` generates primitives(segments) of the binary input word image\n- ``generateUnions`` generates unions of the segments. You can generate union any number of consecutive segments\n\n## Installation\n    pip install handwriting-kit\n\n__________________________________________________________________________________________________________________________________________________________\n\n## Usage\n\n### Function: generatePrimitives(Im)\nIt splits the word image into segments.\n#### Parameters: \n             Im: ndarray\n                 Im is a binary input image.\n#### Returns: \n             Primitives: list of ndarrays\n                         Primitives are list of segments. Each segment is a part of the original image.\n#### \n             Indices: list of lists\n                      The first two positions of list contains the row and column size of original image. At the rest of the positions there is address of each foreground pixel corresponding to each segment. It is only useful when the segments needs to be joined together.\n\n### Function: generateUnions(Primitives, start_index, end_index, Indices)\nIt merges primitives in a given range(from starting index to ending index).\n#### Parameters: \n             Primitives: list of ndarrays\n                         Primitives are generated by the function generatePrimitives function.\n             start_index: int\n                    The index from where you want segments to start getting merged.\n             end_index: int\n                  The index till where you want segments to get merged.\n             Indices: list of lists\n                      Indices are generated by generatePrimitives function.\n\n#### Returns: \n             Union: 2D numpy array\n                    Union is a 2D array (image) after merging primitives from start_index to end_index.\n\n#### \n             Indices: list of lists\n                      Indices contains the address of each foreground pixel corresponding to each segment. It is useful when the segments needs to be joined together.\n\n__________________________________________________________________________________________________________________________________________________________\n\n## Examples\n\n```python\nfrom HandwritingKit.segmentation import generatePrimtives\nimport cv2\nIm = cv2.imread(filename)\nPrimitives, Indices = generatePrimitives(Im)\nUnion1 = generateUnions(Primitives, 0, 6, Indices)\nUnion2 = generateUnions(Primitives, 0, 13, Indices)\n```\nInput Image: ![alt ](https://raw.githubusercontent.com/AdityaDutt/HandwritingSegmentation/master/BB0034.png)<br /><br />\nPrimitives: ![alt ](https://raw.githubusercontent.com/AdityaDutt/HandwritingSegmentation/master/Primitives1.png)<br /><br />\nIndex of unions start from 0.\nUnions from index 0 to 6, Union1: ![alt ](https://raw.githubusercontent.com/AdityaDutt/HandwritingSegmentation/master/Union1.png)<br /><br />\nThere are 14 primitives. Unions from index 0 to 13, Union2: ![alt ](https://raw.githubusercontent.com/AdityaDutt/HandwritingSegmentation/master/Union2.png)<br /><br />\n\nNotice that the image is also cleaned. All the noise near the bottom of image has been removed.<br/>\n\n## Flowchart of algorithm\n![alt ](https://raw.githubusercontent.com/AdityaDutt/HandwritingSegmentation/master/Flowchart.png)<br /><br />\n\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## Author\nAditya Dutt - https://github.com/AdityaDutt - https://www.linkedin.com/in/adityadutt12/ - https://faculty.eng.ufl.edu/computing-for-life/people/\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "",
        "keywords": "python off-line english cursive handwriting handwritten-words character segmentation lexicon-based image recognition image-processing pypi",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "handwriting-kit",
        "package_url": "https://pypi.org/project/handwriting-kit/",
        "platform": "",
        "project_url": "https://pypi.org/project/handwriting-kit/",
        "project_urls": null,
        "release_url": "https://pypi.org/project/handwriting-kit/0.0.1/",
        "requires_dist": null,
        "requires_python": ">=3.7.0",
        "summary": "A python library to do segmentation of cursive handwritten words",
        "version": "0.0.1"
    },
    "last_serial": 6325726,
    "releases": {
        "0.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "aec5825722a9c9378190c0352a92c70e",
                    "sha256": "581997ad515bdc2634657640b6727ea4e07b15afb2f1d1a1390a0b5a671d7ecc"
                },
                "downloads": -1,
                "filename": "handwriting-kit-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "aec5825722a9c9378190c0352a92c70e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7.0",
                "size": 25569,
                "upload_time": "2019-12-18T13:41:26",
                "upload_time_iso_8601": "2019-12-18T13:41:26.130477Z",
                "url": "https://files.pythonhosted.org/packages/fc/a6/1c33d63ff9eb2597302a3e0ac3c7dc3c364470ed7baa006fa4bdc4a46b0e/handwriting-kit-0.0.1.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "aec5825722a9c9378190c0352a92c70e",
                "sha256": "581997ad515bdc2634657640b6727ea4e07b15afb2f1d1a1390a0b5a671d7ecc"
            },
            "downloads": -1,
            "filename": "handwriting-kit-0.0.1.tar.gz",
            "has_sig": false,
            "md5_digest": "aec5825722a9c9378190c0352a92c70e",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": ">=3.7.0",
            "size": 25569,
            "upload_time": "2019-12-18T13:41:26",
            "upload_time_iso_8601": "2019-12-18T13:41:26.130477Z",
            "url": "https://files.pythonhosted.org/packages/fc/a6/1c33d63ff9eb2597302a3e0ac3c7dc3c364470ed7baa006fa4bdc4a46b0e/handwriting-kit-0.0.1.tar.gz"
        }
    ]
}