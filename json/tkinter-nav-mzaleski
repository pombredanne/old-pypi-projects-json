{
    "info": {
        "author": "Maximilien Zaleski",
        "author_email": "maximilienzaleski@yahoo.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: Apache Software License",
            "Programming Language :: Python :: 3"
        ],
        "description": "<div align=center>\n  <h1>Tkinter-nav</h1>\n  <h3>Lightweight navigation wrapper for Tkinter.</h3>\n</div>\n\n## Install\n\n```\npip install tkinter-nav\n```\n\n## Usage\n\n### Create Some Pages\n\n```python\nimport tkinter as tk\nimport tkinternav as tknav\n\n\nclass PageOne(tknav.Page):\n\n    def __init__(self, parent):\n        tknav.Page.__init__(self, parent, 'name_of_page')\n\n        # Use as any Frame\n        # Page extends tk.Frame\n        tk.Button(self, ...).pack()\n\n    def page_did_mount(self):\n      ...\n\n    def page_did_unmount(self):\n      ...\n\n\nclass PageTwo(tknav.Page):\n  ...\n\n\nclass PageThree(tknav.Page):\n  ...\n```\n\n### Create your App\n\n```python\n...\n\nclass App(tknav.Wrapper):\n\n  def __init__(self):\n    # Your pages\n    pages = [PageOne, PageTwo]\n\n    tknav.Wrapper.__init__(self, pages)\n\n    # Use as any Tk instance\n    # tknav.Wrapper extends tk.Tk\n    self.geometry('200x200')\n    self.title('My Nav App')\n\n    # Set inital state, not required\n    self.app_state = {'foo': 'bar'}\n\n    # Show page\n    self.show_page('page_one')\n\n\n# Run\nif __main__ == '__main__':\n  App().mainloop()\n```\n\n## Pages\n\n### Navigate Between Pages\n\n* From the **constructor**\n\n```python\nclass PageOne(tknav.Page):\n\n    def __init__(self, parent):\n        ...\n\n        tk.Button(\n          command=lambda: self.navigate('page_two')\n        ).pack()\n```\n\n* From a **handler** function\n\n```python\nclass PageOne(tknav.Page):\n    ...\n\n    def handleClick(self):\n      self.navigate('page_two')\n```\n\n### Mount and Unmount\n\n* **page_did_mount**: When the page is shown\n* **page_did_unmount**: When the page is hidden\n\n> **Note:** You do not have to use them. They will be defined with a <u>pass</u> statement.\n\n```python\nclass SomePage(tknav.Page):\n    ...\n\n    def page_did_mount(self):\n      print('Page did mount')\n\n    def page_did_unmount(self):\n      print('Page did unmount')\n```\n\n> **Note:** If you are familiar with React, they share the same role as ComponentDidMount and ComponentDidUnmount.\n\n### State\n\nYou can set a global state for your app which will enable you to share data between pages.\n\n```python\nclass App(tknav.Nav):\n\n  def __init__(self):\n    ...\n\n    self.app_state = {'foo': 'bar'}\n\nclass PageOne(tknav.Page):\n    ...\n\n    def function(self):\n      # get a value\n      print(self.app_state['foo']) #bar\n\n      # set a new value\n      self.app_state['bar'] = 'foo'\n```\n\nWhen navigate() is called, the local state is merged with the global state.\n\n```python\nclass PageTwo(tknav.Page):\n    ...\n\n    def function(self):\n      print(self.app_state['bar']) #foo\n```\n\n> **Note:** If you are familiar with React, same principle.\n\n### Example\n\nIs this [example](https://github.com/maxzaleski/tkinter-nav/blob/master/example/example.py), we navigated from *page_one* to *page_two* to *page_one* again. The state is printed in page_did_mount() and changed in page_did_unmount().\n\n<img src='https://i.imgur.com/RkfIsT1.png' height=200/>\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/maxzaleski/tkinter-nav",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "tkinter-nav-mzaleski",
        "package_url": "https://pypi.org/project/tkinter-nav-mzaleski/",
        "platform": "",
        "project_url": "https://pypi.org/project/tkinter-nav-mzaleski/",
        "project_urls": {
            "Homepage": "https://github.com/maxzaleski/tkinter-nav"
        },
        "release_url": "https://pypi.org/project/tkinter-nav-mzaleski/0.0.1/",
        "requires_dist": null,
        "requires_python": ">=3.6",
        "summary": "Lightweight navigation wrapper for Tkinter",
        "version": "0.0.1"
    },
    "last_serial": 6130650,
    "releases": {
        "0.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8723ba0053531ab888e05b11b4ad634c",
                    "sha256": "d6f0917061268b15b337018f547a816c5b248a43e3763a73054c38e9a0f33802"
                },
                "downloads": -1,
                "filename": "tkinter_nav_mzaleski-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8723ba0053531ab888e05b11b4ad634c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 8654,
                "upload_time": "2019-11-13T14:55:24",
                "upload_time_iso_8601": "2019-11-13T14:55:24.392891Z",
                "url": "https://files.pythonhosted.org/packages/ad/3c/6ccd3693ba7676418307b948bd2e39428d302b6fb73f8e2c730bb37cf128/tkinter_nav_mzaleski-0.0.1-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cfa2e20afe6b89a3e2480d68bd74c403",
                    "sha256": "cbf1817c26b7e271af5c973b7267743a4480f01571eb38e4ae4c8ee7b18a43b1"
                },
                "downloads": -1,
                "filename": "tkinter-nav-mzaleski-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "cfa2e20afe6b89a3e2480d68bd74c403",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 3672,
                "upload_time": "2019-11-13T14:55:26",
                "upload_time_iso_8601": "2019-11-13T14:55:26.624494Z",
                "url": "https://files.pythonhosted.org/packages/54/c7/61c4cc0f502773b3c68e2ff5c58eef4b8f7ef2009694609d9ef8a8c7a84a/tkinter-nav-mzaleski-0.0.1.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "8723ba0053531ab888e05b11b4ad634c",
                "sha256": "d6f0917061268b15b337018f547a816c5b248a43e3763a73054c38e9a0f33802"
            },
            "downloads": -1,
            "filename": "tkinter_nav_mzaleski-0.0.1-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "8723ba0053531ab888e05b11b4ad634c",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": ">=3.6",
            "size": 8654,
            "upload_time": "2019-11-13T14:55:24",
            "upload_time_iso_8601": "2019-11-13T14:55:24.392891Z",
            "url": "https://files.pythonhosted.org/packages/ad/3c/6ccd3693ba7676418307b948bd2e39428d302b6fb73f8e2c730bb37cf128/tkinter_nav_mzaleski-0.0.1-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "cfa2e20afe6b89a3e2480d68bd74c403",
                "sha256": "cbf1817c26b7e271af5c973b7267743a4480f01571eb38e4ae4c8ee7b18a43b1"
            },
            "downloads": -1,
            "filename": "tkinter-nav-mzaleski-0.0.1.tar.gz",
            "has_sig": false,
            "md5_digest": "cfa2e20afe6b89a3e2480d68bd74c403",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": ">=3.6",
            "size": 3672,
            "upload_time": "2019-11-13T14:55:26",
            "upload_time_iso_8601": "2019-11-13T14:55:26.624494Z",
            "url": "https://files.pythonhosted.org/packages/54/c7/61c4cc0f502773b3c68e2ff5c58eef4b8f7ef2009694609d9ef8a8c7a84a/tkinter-nav-mzaleski-0.0.1.tar.gz"
        }
    ]
}