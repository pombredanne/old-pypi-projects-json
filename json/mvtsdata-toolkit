{
    "info": {
        "author": "Azim Ahmadzadeh, Kankana Sinha",
        "author_email": "aahmadzadeh1@cs.gsu.edu, ksinha1106@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Programming Language :: Python :: 3"
        ],
        "description": "## MVTS Data Toolkit\n### A Toolkit for Pre-processing Multivariate Time Series Data\n\n* **Title:** MVTS Data Toolkit: A Toolkit for Pre-processing Multivariate Time Series Data\n* **Journal:** SoftwareX Journal (Elsevier) -- [*under-review*]\n* **Authors:** Azim Ahmadzadeh [>](https://www.azim-a.com/), Kankana Sinha [>](https://www.linkedin.com/in/kankana-sinha-4b4b13131/), Berkay Aydin [>](https://grid.cs.gsu.edu/~baydin2/), Rafal A. Angryk [>](https://grid.cs.gsu.edu/~rangryk/)\n* **Demo Author:** Azim Ahmadzadeh\n* **Last Modified:** Jan 24, 2020\n\n\n![MVTS_Date_Toolkit Icon](https://bitbucket.org/gsudmlab/mvtsdata_toolkit/raw/c8f7e0edcfd899c93d9356d52b7ed8c6b500de04/__icon/MVTS_Data_Toolkit_icon2.png)\n\n\n**Abstract:** We developed a domain-independent Python package to facilitate the\npreprocessing routines required in preparation of any multi-class, multivariate time\nseries data. It provides a comprehensive set of 48 statistical features for extracting\nthe important characteristics of time series. The feature extraction process is\nautomated in a sequential and parallel fashion, and is supplemented with an extensive\nsummary report about the data. Using other modules, different data normalization\nmethods and imputation are at users' disposal. To cater the class-imbalance issue,\nthat is often intrinsic to real-world datasets, a set of generic but user-friendly,\nsampling methods are also developed.\n\n\n**This package provides:**\n\n*  *Feature Collection:* A collection of 48 statistical features useful for analysis\nof time series,\n*  *Feature Extraction:* An automated feature-extraction process, with both parallel\nand sequential execution capabilities,\n*  *Visualization:* Quick and easy visualization for analysis of the extracted features, \n*  *Data Analysis:* A quick analysis of the mvts data and the extracted features, in\ntabular and illustrative modes,\n*  *Normalization:* A set of data transformation tools for normalization of the\nextracted features,\n*  *Sampling:* A set of generic methods to provide an array of undersampling and\noversampling remedies for balancing the class-imbalance datasets. \n\n\n----\n[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg??style=flat-square&logo=appveyor)](https://opensource.org/licenses/MIT)\n[![PyPI license](https://img.shields.io/badge/PyPI-0.1-orange??style=flat-square&logo=appveyor)](https://pypi.org/project/mvtsdata-toolkit/)\n[![PyPI license](https://img.shields.io/badge/Doc-Sphinx-blue??style=flat-square&logo=appveyor)](http://dmlab.cs.gsu.edu/docs/mvtsdata_toolkit/)\n----\n\n#### Requirements\n*  Python > 3.6\n*  For a list of all required packages, see [requirements.txt](./requirements.txt).\n\n----\n#### Try it online\nClick on the badge below to try the demo provided in the notebook `demo.ipynb`, online:\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/git/https%3A%2F%2Fbitbucket.org%2Fgsudmlab%2Fmvtsdata_toolkit%2Fsrc%2Fmaster/master?filepath=demo.ipynb)\n\n\n----\n#### Install it from PyPI\nYou can install this package, directly from Python Package Index (PyPI), using `pip` as follows:\n\n```pip install mvtsdata-toolkit```\n\n[![PyPI license](https://img.shields.io/badge/PyPI-0.1-orange??style=flat-square&logo=appveyor)](https://pypi.org/project/mvtsdata-toolkit/)\n\n----\n#### See Documentation\nCheck out the documentation of the project here:\n\n[![PyPI license](https://img.shields.io/badge/Doc-Sphinx-blue??style=flat-square&logo=appveyor)](http://dmlab.cs.gsu.edu/docs/mvtsdata_toolkit/)\n\n\n([http://dmlab.cs.gsu.edu/docs/mvtsdata_toolkit/](http://dmlab.cs.gsu.edu/docs/mvtsdata_toolkit/))\n\n\n----\n\n### Data Rules:\n\n#### MVTS Files\n\nIt is assumed that the input dataset is a collection of multivariate time series (mvts), following\nthese assumptions:\n\n1.  Each mvts is stored in a `tab`-delimited, csv file. Each column represents either the time\n series or some metadata such as timestamp. An mvts data with `t`\ntime series and `k` metadata columns, each of length `d`, has a dimension of\n`d * (t + k)`).\n\n2.  File names can also be used to have some metadata encoded using a *tag* followed by\n `[]`, for each piece of info. The *tag* indicates\nwhat that piece of info is about, and the actual information should be stored inside\nthe proceeding square brackets. For instance, `A_id[123]_lab[1].csv` indicates that\nthis mvts is assigned the id `123` and the label `1`. If *tag*s are used, the\n metadata will be extracted and added to the extracted features automatically. To learn more\n  about how the *tag*s can be used see \nthe documentation in [features.feature_extractor.py](./features/feature_extractor.py)\n.\n\n3.  If the embedded values contain paired braces within `[]`, (e.g. for id,\n`id[123[001]]`), then the metadata extractor would still be able to extract the info\ncorrectly, however for unpaired braces (e.g. for id,\n`id[123[001]`) it will raise an exception.\n\n----\n## Main Components:\n*  All statistical features can be found in\n[features.feature_collection](./features/feature_collection.py).\n*  Code for parallel and sequential feature extraction can be found in\n[features.feature_extractor](./features/feature_extractor.py).\n*  Code for parallel and sequential analysis of raw mvts can be found in\n[data_analysis.mvts_data_analysis](./data_analysis/mvts_data_analysis.py). \n*  Code for analysis of the extracted features can be found in\n[data_analysis.extracted_features_analysis](./data_analysis/extracted_features_analysis.py).\n*  Code for data normalization can be found in\n[normalizing.normalizer](./normalizing/normalizer.py).\n*  Code for sampling methods can be found in\n[sampling.sampler](./sampling/sampler.py).\n\n\n----\n\n## Demo\nThe Jupyer notebook [demo](./demo.ipynb) is designed to give a tour of the\nmain functionalities of MVTS Data Toolkit. Users can either click on the\n*binder* badge and run it online, or clone this project and run it on\ntheir local machine.\n\nA dataset of 2000 mvts files can be downloaded within the steps of this\ndemo. \n\n----\n## Example Usage\n\nIn following examples, the string `'/PATH/TO/CONFIG.YML'` points to the\nuser's configuration file.\n\n----\n#### Data Analysis\nThis package allows analysis of both raw mvts data and the extracted\nfeatures.\n\nUsing [mvts_data_analysis](./data_analysis/mvts_data_analysis.py) module\nusers can easily get a glimpse of their raw data.\n\n```python\nfrom data_analysis.mvts_data_analysis import MVTSDataAnalysis\nmda = MVTSDataAnalysis('/PATH/TO/CONFIG.YML')\nmda.compute_summary(first_k=50,\n                    params_name=['TOTUSJH', 'TOTBSQ', 'TOTPOT'])\n```\nThen, `mda.print_stat_of_directory()` gives the size of the data, in total\nand on average, and `mda.summary` returns a dataframe with several\nstatistics on each of the time series. The statistics are `Val-Count`,\n`Null-Count`, `mean`, `min`, `25th` (percentile), `50th` (= median),\n`75th`, and `max`.\n\nFor large datasets, it is recommended to use the parallel version of this\nmethod, as follows:\n```python\nmda.compute_summary_in_parallel(first_k=50,\n                                n_jobs=4,\n                                params_name=['TOTUSJH', 'TOTBSQ', 'TOTPOT'],)\n```\nwhich utilizes 4 processes to extract the summary statistics in parallel.\nWe explained in our paper in more details, about computing the statistics\nin parallel.\n\nUsing [extracted_features_analysis](./data_analysis/extracted_features_analysis.py)\nmodule users can also get some analysis from the extracted features (see Section\nFeature Extraction). Suppose the dataframe of the extracted features is\nloaded as a pandas dataframe into a variable called\n`extracted_features_df`. Then,\n\n```python\nfrom data_analysis.extracted_features_analysis import ExtractedFeaturesAnalysis\nefa = ExtractedFeaturesAnalysis(extracted_features_df, excluded_col=['id'])\nefa.compute_summary()\n```\nthat excludes the column `id` of the extracted features from the analysis.\nAfter the summary is computed, the following methods can be used:\n```python\nefa.get_class_population(label='lab')\nefa.get_missing_values()\nefa.get_five_num_summary()\n```\n\n\n----\n#### Feature Extraction\n\nThis snippet shows how [feature_extractor](./features/feature_extractor.py)\nmodule can be used, for extracting 4 statistics (i.e., *min*, *max*, *median*, and *mean*),\nfrom 3 time series parameteres (i.e., *TOTUSJH*, *TOTBSQ*, and *TOTPOT*).\n\n```python\nfrom features.feature_extractor import FeatureExtractor\n\nfe = FeatureExtractor(path_to_config='/PATH/TO/CONFIG.YML')\nfe.do_extraction(features_name=['get_min', 'get_max', 'get_median', 'get_mean'],\n                 params_name=['TOTUSJH', 'TOTBSQ', 'TOTPOT'], first_k=50)\n```\nNote that user's configuration file must have the path to the raw mvts\nusing the key `PATH_TO_MVTS`.\n\nTo benefit from the parallel execution, do:\n```python\nfe.do_extraction_in_parallel(n_jobs=4,\n                             features_index=[0, 1, 2, 3],\n                             params_index=[0, 1, 2], first_k=50)\n```\nHere, for the sake of providing a richer example, we used `features_index`\nand `params_index` instead of their names. This numeric mapping of features\nand parameters makes it easier to deal with a numerous lengthy names.\nThese lists will be mapped to the list of parameters and features provided\nin the user's configuration file, under the keys `MVTS_PARAMETERS` and\n`STATISTICAL_FEATURES`, respectively.\n\nIn `FeatureExtractor` class, several plotting functionalities are\nimplemented that can be easily used as follows:\n\n```python\nparams = ['TOTUSJH_median', 'TOTUSJH_mean', 'TOTBSQ_median', 'TOTBSQ_mean']\nfe.plot_boxplot(params)\nfe.plot_violinplot(params)\nfe.plot_correlation_heatmap(params)\nfe.plot_covariance_heatmap(params)\nfe.plot_splom(params)\n``` \n\n\n----\n#### Sampling\nAfter the statistical features are extracted from the mvts data, to remedy\nthe class-imbalance issue (if exists) a set of generic sampling methods\nare provided in [sampler](./sampling/sampler.py) module.\n\n```python\nfrom sampling.sampler import Sampler\n\nsampler = Sampler(extracted_features_df, label_col_name='lab')\nsampler.sample(desired_populations={'N': 100, 'Y': 100})\n```\nwhich randomly samples 100 instances of the `N` class and 100 instances\nof the `Y` class. If either of the classes does not have enough samples,\nthen after the entire samples are taken, the remaining needed instances\nwill be sampled with replacement. Depending on the provided populations,\nthis method could be an *undersampling* or an *oversampling* technique.\n\nUsers can use *ratio*s instead of *size* as follows:\n```python\nsampler.sample(desrired_ratios = {'N': 0.50, 'Y': -1})\n```\nwhich means take 50% of `N`-class instances, and *all* of `Y`-class\ninstances.\n\nFor other approaches, see the [/demo](./demo.ipynb).\n\n\n----\n#### Normalizing\nThe extracted features often require normalization. Using\n[normalizer](./normalizing/normalizer.py) module, it can be easily\nnormalized as follows:\n\n```python\nfrom normalizing import normalizer\nnormalizer.zero_one_normalize()\ndf_normalized = normalizer.zero_one_normalize(extracted_features_df)\n``` \nthat again, `extracted_features_df` is assumed to be a pandas dataframe\nof the extracted features.\n\nIn this module, the following four normalizers are provided:\n\n*  zero_one_normalizer()\n*  negativeone_one_normalize()\n*  standardize()\n*  robust_standardize()\n\n\n----\nExtra files:\n*  [bitbucket-pipelines.yml](./bitbucket-pipelines.yml) is a configuration\nfile for pipelining the deployment steps before each release.\n*  [CONSTANTS.py](./CONSTANTS.py) keeps track of the root directory, and\na few other pieces of information that are needed for the demo.\n*  [demo.ipynb](./demo.ipynb) is the demo Jupyter notebook that can walk\nthe interested users through the functionalities this toolkit provides.\n*  [README.md](./README.md) has the content of this very manual.\n*  [requirements.txt](./requirements.txt) keeps track of all dependencies.\n*  [setup.py](./setup.py) is used to generate the binary files needed for\ngenerating the pip-installble version of this package.\n\n----\n#### Citation\n\nCurrently, this package is under review in [SoftwareX journal](https://www.journals.elsevier.com/softwarex). If you are interested in using this, I can share the manuscrip with you. Till it is published, it can be cited as follows:\n\n```\n@article{ahmadzadeh2020mvts,\n  title={MVTS-Data Toolkit: A Python Package for Preprocessing Multivariate Time Series Data}},\n  author={Azim Ahmadzadeh, Kankana Sinha, Berkay Aydin, Rafal A. Angryk},\n  journal={SoftwareX},\n  volume={},\n  pages={},\n  year={under-review},\n  publisher={Elsevier}\n}\n```\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://bitbucket.org/gsudmlab/mvtsdata_toolkit/src/master/",
        "keywords": "",
        "license": "MIT",
        "maintainer": "Azim Ahmadzadeh",
        "maintainer_email": "aahmadzadeh1@cs.gsu.edu",
        "name": "mvtsdata-toolkit",
        "package_url": "https://pypi.org/project/mvtsdata-toolkit/",
        "platform": "",
        "project_url": "https://pypi.org/project/mvtsdata-toolkit/",
        "project_urls": {
            "Homepage": "https://bitbucket.org/gsudmlab/mvtsdata_toolkit/src/master/"
        },
        "release_url": "https://pypi.org/project/mvtsdata-toolkit/0.1.5/",
        "requires_dist": [
            "accumulation-tree (==0.6)",
            "attrs (==19.3.0)",
            "backcall (==0.1.0)",
            "bleach (==3.1.0)",
            "certifi (==2019.9.11)",
            "chardet (==3.0.4)",
            "coverage (==5.0.3)",
            "cycler (==0.10.0)",
            "decorator (==4.4.1)",
            "defusedxml (==0.6.0)",
            "docutils (==0.15.2)",
            "entrypoints (==0.3)",
            "hurry.filesize (==0.9)",
            "idna (==2.8)",
            "importlib-metadata (==0.23)",
            "ipykernel (==5.1.3)",
            "ipython (==7.9.0)",
            "ipython-genutils (==0.2.0)",
            "ipywidgets (==7.5.1)",
            "jedi (==0.15.1)",
            "Jinja2 (==2.10.3)",
            "joblib (==0.13.2)",
            "jsonschema (==3.1.1)",
            "jupyter (==1.0.0)",
            "jupyter-client (==5.3.4)",
            "jupyter-console (==6.0.0)",
            "jupyter-core (==4.6.1)",
            "kiwisolver (==1.1.0)",
            "MarkupSafe (==1.1.1)",
            "matplotlib (==3.1.0)",
            "mistune (==0.8.4)",
            "more-itertools (==7.2.0)",
            "nbconvert (==5.6.1)",
            "nbformat (==4.4.0)",
            "notebook (==6.0.1)",
            "numpy (==1.16.4)",
            "pandas (==0.24.2)",
            "pandocfilters (==1.4.2)",
            "parso (==0.5.1)",
            "pexpect (==4.7.0)",
            "pickleshare (==0.7.5)",
            "pkginfo (==1.5.0.1)",
            "prometheus-client (==0.7.1)",
            "prompt-toolkit (==2.0.10)",
            "ptyprocess (==0.6.0)",
            "Pygments (==2.4.2)",
            "Pympler (==0.7)",
            "pyparsing (==2.4.0)",
            "pyrsistent (==0.15.5)",
            "python-dateutil (==2.8.0)",
            "python-slugify (==4.0.0)",
            "pytz (==2019.1)",
            "pyudorandom (==1.0.0)",
            "PyYAML (==5.1.2)",
            "pyyml (==0.0.2)",
            "pyzmq (==18.1.0)",
            "qtconsole (==4.5.5)",
            "readme-renderer (==24.0)",
            "requests (==2.22.0)",
            "requests-toolbelt (==0.9.1)",
            "scikit-learn (==0.21.2)",
            "scipy (==1.3.0)",
            "seaborn (==0.9.0)",
            "Send2Trash (==1.5.0)",
            "six (==1.12.0)",
            "sklearn (==0.0)",
            "subprocess32 (==3.5.4)",
            "tdigest (==0.5.2.2)",
            "terminado (==0.8.2)",
            "testpath (==0.4.2)",
            "text-unidecode (==1.3)",
            "tornado (==6.0.3)",
            "tqdm (==4.36.1)",
            "traitlets (==4.3.3)",
            "twine (==1.13.0)",
            "urllib3 (==1.24.3)",
            "wcwidth (==0.1.7)",
            "webencodings (==0.5.1)",
            "widgetsnbextension (==3.5.1)",
            "zipp (==0.6.0)"
        ],
        "requires_python": "",
        "summary": "A Toolkit for Multivariate Time Series Data",
        "version": "0.1.5"
    },
    "last_serial": 6534621,
    "releases": {
        "0.1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d2aa5ad2e5f60388ff9e662212c2b253",
                    "sha256": "3e24714b113c8fb79e9f020868bc74eab8eb59404cfb02af03b61f5380c54223"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d2aa5ad2e5f60388ff9e662212c2b253",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 38255,
                "upload_time": "2020-01-22T18:07:51",
                "upload_time_iso_8601": "2020-01-22T18:07:51.429686Z",
                "url": "https://files.pythonhosted.org/packages/4d/c1/55b66ccb557c831ec22204c78b4473dfeb9bd8e434386e43da40b7b5638d/mvtsdata_toolkit-0.1.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b18f7d0d0f6c0891b55b259c3c35ea78",
                    "sha256": "1fab54b3bed4ed5147e522196abba27ccba9ff6700921a4c5adfd6970d479a69"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "b18f7d0d0f6c0891b55b259c3c35ea78",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 36402,
                "upload_time": "2020-01-22T18:07:54",
                "upload_time_iso_8601": "2020-01-22T18:07:54.101378Z",
                "url": "https://files.pythonhosted.org/packages/24/73/052f1363227b322a3bd063852db1316f6df5483e1b9b58d02aad1955713e/mvtsdata_toolkit-0.1.0.tar.gz"
            }
        ],
        "0.1.2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fc8f55d4ebb479d31b4dc9ec43674f90",
                    "sha256": "1e791256559a4ec81d9580de72a635f5feaf3a00a4b6e876011e59df7222e812"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fc8f55d4ebb479d31b4dc9ec43674f90",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 39338,
                "upload_time": "2020-01-23T19:30:32",
                "upload_time_iso_8601": "2020-01-23T19:30:32.851055Z",
                "url": "https://files.pythonhosted.org/packages/07/3b/92cb5046af7fdc07352c396268d896b04d52b56eb622cf59e15e2d265513/mvtsdata_toolkit-0.1.2-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "35ca74fee6ba918527a19192b2e76bc7",
                    "sha256": "b3beb1313d1f33a6f354b37bbd4ff714db9f397e37769f941ec2f6bcb6aa9edd"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "35ca74fee6ba918527a19192b2e76bc7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 37997,
                "upload_time": "2020-01-23T19:30:34",
                "upload_time_iso_8601": "2020-01-23T19:30:34.567255Z",
                "url": "https://files.pythonhosted.org/packages/05/6f/39691def747d246d21d9003cad6f2ab3fb0748c55c6d1d5a6dd72eff1733/mvtsdata_toolkit-0.1.2.tar.gz"
            }
        ],
        "0.1.3": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e28760d707f12a591bdd6359b2df2277",
                    "sha256": "d3db7fd58f121ab624b4bf51c2269a8d6e14ff6ebb4c685da0fb3f045d6760d3"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e28760d707f12a591bdd6359b2df2277",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 39382,
                "upload_time": "2020-01-23T22:16:32",
                "upload_time_iso_8601": "2020-01-23T22:16:32.337031Z",
                "url": "https://files.pythonhosted.org/packages/29/34/855a0cb3d9c7a82d2c1c462b5fefad972b12b3f883ede9f0c1dd2fdecb16/mvtsdata_toolkit-0.1.3-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fa5cef48c1fa9b68224515b927ca4995",
                    "sha256": "81f7cfc7cf27eedaabea15823b2477b0a5bab6db638557567ed82666218894ad"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "fa5cef48c1fa9b68224515b927ca4995",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 38100,
                "upload_time": "2020-01-23T22:16:34",
                "upload_time_iso_8601": "2020-01-23T22:16:34.723082Z",
                "url": "https://files.pythonhosted.org/packages/1f/25/73bda91bdfb1cd634addbcc7da9121d4de2a612bc50ac2456ce55d11881c/mvtsdata_toolkit-0.1.3.tar.gz"
            }
        ],
        "0.1.4": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9b15fe385bf9cf87b432cdbd489b1fd6",
                    "sha256": "2df3ec13724b0ff2df8d637484dfbaf91054a6d247636dcd579bb3b5a3c56152"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9b15fe385bf9cf87b432cdbd489b1fd6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7006,
                "upload_time": "2020-01-24T23:09:14",
                "upload_time_iso_8601": "2020-01-24T23:09:14.789857Z",
                "url": "https://files.pythonhosted.org/packages/ac/4c/f5d752fa556cfbee6955ec12c5867f1659114a3685e10454590daef4bf48/mvtsdata_toolkit-0.1.4-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3c08a476c49e4ac3d7afc4d2bcd0e69f",
                    "sha256": "d309664808b320e4ecb2280ff40984af5f365208aea0237fe6e1036afadc59df"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "3c08a476c49e4ac3d7afc4d2bcd0e69f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8959,
                "upload_time": "2020-01-24T23:09:16",
                "upload_time_iso_8601": "2020-01-24T23:09:16.158375Z",
                "url": "https://files.pythonhosted.org/packages/c5/27/fd75689e9f42678d7dfe4d974b02237092c1606b41f85c2134f2f6aa8108/mvtsdata_toolkit-0.1.4.tar.gz"
            }
        ],
        "0.1.5": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4092e8e5739123ddb521e71c2a8d5cdf",
                    "sha256": "3ff9837eaf7bdd1616f2bd5a5ccab4bc38fad9d5e2e04d032274a1f25e4510f6"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4092e8e5739123ddb521e71c2a8d5cdf",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7005,
                "upload_time": "2020-01-28T21:53:57",
                "upload_time_iso_8601": "2020-01-28T21:53:57.690132Z",
                "url": "https://files.pythonhosted.org/packages/fc/fc/4ee7db3705a9f23bf1421f9caec2f94d756a1f7b00e02325145b206d125d/mvtsdata_toolkit-0.1.5-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e9e71cad9f97a21396b9133f84631758",
                    "sha256": "1e261761321b8a519ec62dde81757e3a6dd763c2c53e247a84792d271aaa1e09"
                },
                "downloads": -1,
                "filename": "mvtsdata_toolkit-0.1.5.tar.gz",
                "has_sig": false,
                "md5_digest": "e9e71cad9f97a21396b9133f84631758",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8953,
                "upload_time": "2020-01-28T21:53:59",
                "upload_time_iso_8601": "2020-01-28T21:53:59.420986Z",
                "url": "https://files.pythonhosted.org/packages/c7/22/9e6895a5c7eb409cb0a5e7b1572f48778618b140972e86634aa6f7a27d27/mvtsdata_toolkit-0.1.5.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "4092e8e5739123ddb521e71c2a8d5cdf",
                "sha256": "3ff9837eaf7bdd1616f2bd5a5ccab4bc38fad9d5e2e04d032274a1f25e4510f6"
            },
            "downloads": -1,
            "filename": "mvtsdata_toolkit-0.1.5-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "4092e8e5739123ddb521e71c2a8d5cdf",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 7005,
            "upload_time": "2020-01-28T21:53:57",
            "upload_time_iso_8601": "2020-01-28T21:53:57.690132Z",
            "url": "https://files.pythonhosted.org/packages/fc/fc/4ee7db3705a9f23bf1421f9caec2f94d756a1f7b00e02325145b206d125d/mvtsdata_toolkit-0.1.5-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "e9e71cad9f97a21396b9133f84631758",
                "sha256": "1e261761321b8a519ec62dde81757e3a6dd763c2c53e247a84792d271aaa1e09"
            },
            "downloads": -1,
            "filename": "mvtsdata_toolkit-0.1.5.tar.gz",
            "has_sig": false,
            "md5_digest": "e9e71cad9f97a21396b9133f84631758",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 8953,
            "upload_time": "2020-01-28T21:53:59",
            "upload_time_iso_8601": "2020-01-28T21:53:59.420986Z",
            "url": "https://files.pythonhosted.org/packages/c7/22/9e6895a5c7eb409cb0a5e7b1572f48778618b140972e86634aa6f7a27d27/mvtsdata_toolkit-0.1.5.tar.gz"
        }
    ]
}