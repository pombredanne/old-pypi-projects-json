{
    "info": {
        "author": "UnifiedThings",
        "author_email": "unifiedthings@protonmail.com",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "vertex\n======\n\nvertex is a framework to build and power your Internet of Things Device. Is is built with a mission to be interoperable with other smart things and devices connected to the internet, and hence is based on open APIs, standards and protocols.\n\nThe theme of interoperability is central to the vision of UnifiedThings because we believe\n\n```\nIoT Device < A Smart and Intelligent IoT Device < A Unified, Interoperable and Connected Network of Intelligent and Smart IoT Devices\n```\n\nvertex is a inspired by (read a partial implementation of) the [W3C Candidate Recommendation of the WoT Thing Description framework](https://www.w3.org/TR/wot-thing-description). It is still under active development and might change based on the accepted recommendation of standards as and when they become concrete. Please note that the W3C draft linked here is a Candidate Recommendation and is still awaiting movement to Proposed Recommendation and an actual Recommendation. During these tentative and experimental steps towards achieving open standardization, we aim to strive to achieve implementation feasibility, proof of concepts for value addition of a interoperable and connected IoT network, and contribute to make these set of standards better. \n\nvertex is supposed to work seamlessly with the UnifiedThings cloudlet (an upcoming edge and fog platform) and the UnifiedThings Cloud Platform.\n\n### Usage Example\n\n```python\n# Let's create a toaster\nimport random\nimport threading\nimport time\nimport asyncio\nfrom vertex import Vertex, ActionExecutor, PropertyReader\n\n# Create a vertex instance on port 9000\nv = Vertex(9000)\n\n# Set the attributes of the thing\nv.set_id(\"123\")\nv.set_type(\"toaster\")\nv.set_title(\"Toaster in the Kitchen\")\nv.set_version(\"1.0\")\n\n# Temperature property reader  \nclass TemperatureReader(PropertyReader):\n\n    def read(self):\n        # Implement actual reading from temperature sensor\n        return random.random() * 100.0\n\n# Power button action executor\nclass PowerButtonExecutor(ActionExecutor):\n\n    def execute(self, input_data):\n        # Implement actual power button call logic\n        return input_data\n\n# Register properties, actions and events\nv.register_property(\"temperature\", \"number\", \"celsius\", TemperatureReader())\nv.register_action(\"power\", \"boolean\", \"boolean\", PowerButtonExecutor())\nv.register_event(\"battery\", \"integer\")\n\n# Fake battery percentage events and emit those events\ndef emit_battery_percentage(loop):\n    asyncio.set_event_loop(loop)\n\n    while True:\n        # Emit actual battery event from the battery listener\n        v.emit_event(\"battery\", random.randint(0, 100))\n        time.sleep(1)\n\nbattery_event_thread = threading.Thread(target=emit_battery_percentage, args=(asyncio.new_event_loop(),))\nbattery_event_thread.start()\n\n# Start vertex\nv.start()\n```\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/unifiedthings/vertex",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "pyvertex",
        "package_url": "https://pypi.org/project/pyvertex/",
        "platform": "",
        "project_url": "https://pypi.org/project/pyvertex/",
        "project_urls": {
            "Homepage": "https://github.com/unifiedthings/vertex"
        },
        "release_url": "https://pypi.org/project/pyvertex/0.1/",
        "requires_dist": [
            "tornado"
        ],
        "requires_python": "",
        "summary": "UnifiedThings Vertex SDK",
        "version": "0.1"
    },
    "last_serial": 6387213,
    "releases": {
        "0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "10d76daf254ab7f8fcab2473d3923a18",
                    "sha256": "809ca83f0dcf55908dec0cfff498f223af19856321580718bf8aa8fc9f87e7dd"
                },
                "downloads": -1,
                "filename": "pyvertex-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "10d76daf254ab7f8fcab2473d3923a18",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12913,
                "upload_time": "2020-01-02T18:20:33",
                "upload_time_iso_8601": "2020-01-02T18:20:33.760957Z",
                "url": "https://files.pythonhosted.org/packages/2e/61/3766586959743c430656b699aa463b505b44c9f9b86b228c2554aa865a31/pyvertex-0.1-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "30d3c770e9f9594a50249c6ff184e707",
                    "sha256": "08136c5d17d91febd20caf81b1fdd2cca5b8347a2d323d802903c18746556863"
                },
                "downloads": -1,
                "filename": "pyvertex-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "30d3c770e9f9594a50249c6ff184e707",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6179,
                "upload_time": "2020-01-02T18:20:35",
                "upload_time_iso_8601": "2020-01-02T18:20:35.927048Z",
                "url": "https://files.pythonhosted.org/packages/20/8e/c3ccb399c961f3affb230c6403a9f813bc73de00237994ca4f2b987302c7/pyvertex-0.1.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "10d76daf254ab7f8fcab2473d3923a18",
                "sha256": "809ca83f0dcf55908dec0cfff498f223af19856321580718bf8aa8fc9f87e7dd"
            },
            "downloads": -1,
            "filename": "pyvertex-0.1-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "10d76daf254ab7f8fcab2473d3923a18",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 12913,
            "upload_time": "2020-01-02T18:20:33",
            "upload_time_iso_8601": "2020-01-02T18:20:33.760957Z",
            "url": "https://files.pythonhosted.org/packages/2e/61/3766586959743c430656b699aa463b505b44c9f9b86b228c2554aa865a31/pyvertex-0.1-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "30d3c770e9f9594a50249c6ff184e707",
                "sha256": "08136c5d17d91febd20caf81b1fdd2cca5b8347a2d323d802903c18746556863"
            },
            "downloads": -1,
            "filename": "pyvertex-0.1.tar.gz",
            "has_sig": false,
            "md5_digest": "30d3c770e9f9594a50249c6ff184e707",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 6179,
            "upload_time": "2020-01-02T18:20:35",
            "upload_time_iso_8601": "2020-01-02T18:20:35.927048Z",
            "url": "https://files.pythonhosted.org/packages/20/8e/c3ccb399c961f3affb230c6403a9f813bc73de00237994ca4f2b987302c7/pyvertex-0.1.tar.gz"
        }
    ]
}