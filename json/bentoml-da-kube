{
    "info": {
        "author": "bentoml.org+DanieliAutomation",
        "author_email": "",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: Apache Software License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7",
            "Programming Language :: Python :: Implementation :: CPython"
        ],
        "description": "[![pypi status](https://img.shields.io/pypi/v/bentoml.svg)](https://pypi.org/project/BentoML)\n[![python versions](https://img.shields.io/pypi/pyversions/bentoml.svg)](https://travis-ci.org/bentoml/BentoML)\n[![Downloads](https://pepy.tech/badge/bentoml)](https://pepy.tech/project/bentoml)\n[![build status](https://travis-ci.org/bentoml/BentoML.svg?branch=master)](https://travis-ci.org/bentoml/BentoML)\n[![Documentation Status](https://readthedocs.org/projects/bentoml/badge/?version=latest)](https://docs.bentoml.org/)\n[![join BentoML Slack](https://badgen.net/badge/Join/BentoML%20Slack/cyan?icon=slack)](https://join.slack.com/t/bentoml/shared_invite/enQtNjcyMTY3MjE4NTgzLTU3ZDc1MWM5MzQxMWQxMzJiNTc1MTJmMzYzMTYwMjQ0OGEwNDFmZDkzYWQxNzgxYWNhNjAxZjk4MzI4OGY1Yjg)\n\n> From ML model to production API endpoint with a few lines of code\n\n[![BentoML](https://raw.githubusercontent.com/bentoml/BentoML/master/docs/source/_static/img/bentoml.png)](https://github.com/bentoml/BentoML)\n\nBentoML makes it easy to __serve and deploy machine learning models__ in the cloud.\n\nIt is an open source framework for building cloud-native model serving services.\nBentoML supports most popular ML training frameworks and deployment platforms, including\nmajor cloud providers and docker/kubernetes.\n\n\u00f0\u0178\u2018\u2030 [Join BentoML Slack community](https://join.slack.com/t/bentoml/shared_invite/enQtNjcyMTY3MjE4NTgzLTU3ZDc1MWM5MzQxMWQxMzJiNTc1MTJmMzYzMTYwMjQ0OGEwNDFmZDkzYWQxNzgxYWNhNjAxZjk4MzI4OGY1Yjg)\n to hear about the latest development updates.\n\n---\n\n- [Getting Started](https://github.com/bentoml/BentoML#getting-started)\n- [Documentation](https://docs.bentoml.org/)\n- [Gallery](https://github.com/bentoml/gallery)\n- [Contributing](https://github.com/bentoml/BentoML#contributing)\n- [Releases](https://github.com/bentoml/BentoML#releases)\n- [License](https://github.com/bentoml/BentoML/blob/master/LICENSE)\n- [Blog](https://medium.com/bentoml)\n\n\n## Getting Started\n\nInstalling BentoML with `pip`:\n```bash\npip install bentoml\n```\n\nCreating a prediction service with BentoML:\n\n```python\nimport bentoml\nfrom bentoml.handlers import DataframeHandler\nfrom bentoml.artifact import SklearnModelArtifact\n\n@bentoml.env(pip_dependencies=[\"scikit-learn\"]) # defining pip/conda dependencies to be packed\n@bentoml.artifacts([SklearnModelArtifact('model')]) # defining required artifacts, typically trained models\nclass IrisClassifier(bentoml.BentoService):\n\n    @bentoml.api(DataframeHandler) # defining prediction service endpoint and expected input format\n    def predict(self, df):\n        # Pre-processing logic and access to trained model artifacts in API function\n        return self.artifacts.model.predict(df)\n```\n\nTrain a classifier model with default Iris dataset and pack the trained model\nwith the BentoService `IrisClassifier` defined above:\n\n```python\nfrom sklearn import svm\nfrom sklearn import datasets\n\nif __name__ == \"__main__\":\n    clf = svm.SVC(gamma='scale')\n    iris = datasets.load_iris()\n    X, y = iris.data, iris.target\n    clf.fit(X, y)\n\n    # Create a iris classifier service\n    iris_classifier_service = IrisClassifier()\n\n    # Pack it with the newly trained model artifact\n    iris_classifier_service.pack('model', clf)\n\n    # Save the prediction service to a BentoService bundle\n    saved_path = iris_classifier_service.save()\n```\nYou've just created a BentoService SavedBundle, it's a versioned file archive that is\nready for production deployment. It contains the BentoService you defined, as well as\nthe packed trained model artifacts, pre-processing code, dependencies and other\nconfigurations in a single file directory.\n\n\nFrom a BentoService SavedBundle, you can start a REST API server by providing the file\npath to the saved bundle:\n```bash\nbentoml serve {saved_path}\n```\n\nThe REST API server provides a simply web UI for you to test and debug. If you are\nrunning this command on your local machine, visit http://127.0.0.1:5000 in your browser\nand try out sending API request to the server. You can also send prediction request\nwith `curl` from command line:\n\n```bash\ncurl -i \\\n  --header \"Content-Type: application/json\" \\\n  --request POST \\\n  --data '[[5.1, 3.5, 1.4, 0.2]]' \\\n  http://localhost:5000/predict\n```\n\nThe BentoService SavedBundle is structured to work as a docker build context, that can\nbe directed used to build a docker image for API server. Simply use it as the docker\nbuild context directory:\n```bash\ndocker build -t my_api_server {saved_path}\n```\n\nYou can also deploy your BentoService directly to cloud services such as AWS Lambda \nwith `bentoml`, and get back a API endpoint hosting your model, that is ready for\nproduction use:\n```\nbentoml deployment create my-iris-classifier --bento IrisClassifier:{VERSION} --platform=aws-lambda\n```\n\nMore detailed code and walkthrough of this example can be found in the [BentoML Quickstart Guide](http://docs.bentoml.org/en/latest/quickstart.html).\n\n## Documentation\n\nFull documentation and API references: [https://docs.bentoml.org/](https://docs.bentoml.org/)\n\n\n## Examples\n\nVisit [bentoml/gallery](https://github.com/bentoml/gallery) repository for more\n examples and tutorials.\n\n#### FastAI\n\n* Pet Image Classification - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/fast-ai/pet-image-classification/fast-ai-pet-image-classification.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/fast-ai/pet-image-classification/fast-ai-pet-image-classification.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/fast-ai/pet-image-classification/fast-ai-pet-image-classification.ipynb)\n* Salary Range Prediction - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/fast-ai/salary-range-prediction/fast-ai-salary-range-prediction.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/fast-ai/salary-range-prediction/fast-ai-salary-range-prediction.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/fast-ai/salary-range-prediction/fast-ai-salary-range-prediction.ipynb)\n\n\n#### Scikit-Learn\n\n* Sentiment Analysis - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/scikit-learn/sentiment-analysis/sklearn-sentiment-analysis.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/scikit-learn/sentiment-analysis/sklearn-sentiment-analysis.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/scikit-learn/sentiment-analysis/sklearn-sentiment-analysis.ipynb)\n\n\n#### PyTorch\n\n* Fashion MNIST - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/pytorch/fashion-mnist/pytorch-fashion-mnist.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/pytorch/fashion-mnist/pytorch-fashion-mnist.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/pytorch/fashion-mnist/pytorch-fashion-mnist.ipynb)\n* CIFAR-10 Image Classification - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/pytorch/cifar10-image-classification/pytorch-cifar10-image-classification.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/pytorch/cifar10-image-classification/pytorch-cifar10-image-classification.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/pytorch/cifar10-image-classification/pytorch-cifar10-image-classification.ipynb)\n\n\n#### Tensorflow Keras\n\n* Fashion MNIST - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/keras/fashion-mnist/keras-fashion-mnist.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/keras/fashion-mnist/keras-fashion-mnist.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/keras/fashion-mnist/keras-fashion-mnist.ipynb)\n* Text Classification - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/keras/text-classification/keras-text-classification.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/keras/text-classification/keras-text-classification.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/keras/text-classification/keras-text-classification.ipynb)\n* Toxic Comment Classifier - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/keras/toxic-comment-classification/keras-toxic-comment-classification.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/keras/toxic-comment-classification/keras-toxic-comment-classification.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/keras/toxic-comment-classification/keras-toxic-comment-classification.ipynb)\n\n#### Tensorflow 2.0\n\n* tf.Function model - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/tensorflow/echo/tensorflow-echo.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/tensorflow/echo/tensorflow-echo.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/tensorflow/echo/tensorflow-echo.ipynb)\n\n\n#### XGBoost\n\n* Titanic Survival Prediction - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/xgboost/titanic-survival-prediction/xgboost-titanic-survival-prediction.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/xgboost/titanic-survival-prediction/xgboost-titanic-survival-prediction.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/xgboost/titanic-survival-prediction/xgboost-titanic-survival-prediction.ipynb)\n* League of Legend win Prediction - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/xgboost/league-of-legend-win-prediction/xgboost-league-of-legend-win-prediction.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/xgboost/league-of-legend-win-prediction/xgboost-league-of-legend-win-prediction.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/xgboost/league-of-legend-win-prediction/xgboost-league-of-legend-win-prediction.ipynb)\n\n#### LightGBM\n\n* Titanic Survival Prediction -  [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/lightbgm/titanic-survival-prediction/lightbgm-titanic-survival-prediction.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/lightbgm/titanic-survival-prediction/lightbgm-titanic-survival-prediction.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/lightbgm/titanic-survival-prediction/lightbgm-titanic-survival-prediction.ipynb)\n\n\n#### H2O\n\n* Loan Default Prediction - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/h2o/loan-prediction/h2o-loan-prediction.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/h2o/loan-prediction/h2o-loan-prediction.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/h2o/loan-prediction/h2o-loan-prediction.ipynb)\n* Prostate Cancer Prediction - [Google Colab](https://colab.research.google.com/github/bentoml/gallery/blob/master/h2o/prostate-cancer-classification/h2o-prostate-cancer-classification.ipynb) | [nbviewer](https://nbviewer.jupyter.org/github/bentoml/gallery/blob/master/h2o/prostate-cancer-classification/h2o-prostate-cancer-classification.ipynb) | [source](https://github.com/bentoml/gallery/blob/master/h2o/prostate-cancer-classification/h2o-prostate-cancer-classification.ipynb)\n\n\n\n### Deployment guides:\n\n* Automated end-to-end deployment workflow with BentoML\n  - [BentoML AWS Lambda Deployment Guide](https://github.com/bentoml/BentoML/blob/master/guides/deployment/deploy-with-serverless)\n  - [BentoML AWS SageMaker Deployment Guide](https://github.com/bentoml/BentoML/blob/master/guides/deployment/deploy-with-sagemaker)\n\n* Clipper Deployment\n  - [BentoML Clipper.ai Deployment Guide](https://github.com/bentoml/BentoML/blob/master/guides/deployment/deploy-with-clipper/bentoml-clipper-deployment-guide.ipynb)\n\n* Mannual Deployment\n  - [BentoML AWS ECS Deployment](https://github.com/bentoml/BentoML/tree/master/guides/deployment/deploy-with-aws-ecs)\n  - [BentoML Google Cloud Run Deployment](https://github.com/bentoml/BentoML/blob/master/guides/deployment/deploy-with-google-cloud-run/deploy-with-google-cloud-run.ipynb)\n  - [BentoML Kubernetes Deployment](https://github.com/bentoml/BentoML/tree/master/guides/deployment/deploy-with-kubernetes)\n\n\n## Contributing\n\nHave questions or feedback? Post a [new github issue](https://github.com/bentoml/BentoML/issues/new/choose)\nor discuss in our Slack channel: [![join BentoML Slack](https://badgen.net/badge/Join/BentoML%20Slack/cyan?icon=slack)](https://join.slack.com/t/bentoml/shared_invite/enQtNjcyMTY3MjE4NTgzLTU3ZDc1MWM5MzQxMWQxMzJiNTc1MTJmMzYzMTYwMjQ0OGEwNDFmZDkzYWQxNzgxYWNhNjAxZjk4MzI4OGY1Yjg)\n\n\nWant to help build BentoML? Check out our\n[contributing guide](https://github.com/bentoml/BentoML/blob/master/CONTRIBUTING.md) and the\n[development guide](https://github.com/bentoml/BentoML/blob/master/DEVELOPMENT.md).\n\n\n## Releases\n\nBentoML is under active development and is evolving rapidly.\nCurrently it is a Beta release, __we may change APIs in future releases__.\n\nRead more about the latest features and changes in BentoML from the [releases page](https://github.com/bentoml/BentoML/releases).\n\n\n\n## Usage Tracking\n\nBentoML by default collects anonymous usage data using [Amplitude](https://amplitude.com).\nIt only collects BentoML library's own actions and parameters, no user or model data will be collected.\n[Here is the code that does it](https://github.com/bentoml/BentoML/blob/master/bentoml/utils/usage_stats.py).\n\nThis helps BentoML team to understand how the community is using this tool and\nwhat to build next. You can easily opt-out of usage tracking by running the following\ncommand:\n\n```bash\n# From terminal:\nbentoml config set usage_tracking=false\n```\n\n```python\n# From python:\nimport bentoml\nbentoml.config().set('core', 'usage_tracking', 'False')\n```\n\n## License\n\n[Apache License 2.0](https://github.com/bentoml/BentoML/blob/master/LICENSE)\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fbentoml%2FBentoML.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fbentoml%2FBentoML?ref=badge_large)\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/bentoml/BentoML",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "BentoML-DA-Kube",
        "package_url": "https://pypi.org/project/BentoML-DA-Kube/",
        "platform": "",
        "project_url": "https://pypi.org/project/BentoML-DA-Kube/",
        "project_urls": {
            "Bug Reports": "https://github.com/bentoml/BentoML/issues",
            "Homepage": "https://github.com/bentoml/BentoML",
            "Slack User Group": "https://bit.ly/2N5IpbB",
            "Source Code": "https://github.com/bentoml/BentoML"
        },
        "release_url": "https://pypi.org/project/BentoML-DA-Kube/0.5.8006/",
        "requires_dist": [
            "ruamel.yaml (>=0.15.0)",
            "numpy",
            "flask",
            "gunicorn",
            "click (>=7.0)",
            "pandas",
            "prometheus-client",
            "python-json-logger",
            "boto3",
            "requests",
            "packaging",
            "docker",
            "configparser",
            "sqlalchemy (>=1.3.0)",
            "protobuf (>=3.6.0)",
            "grpcio",
            "cerberus",
            "tabulate",
            "humanfriendly",
            "alembic",
            "python-dateutil (<2.8.1,>=2.1)",
            "ruamel.yaml (>=0.15.0) ; extra == 'all'",
            "numpy ; extra == 'all'",
            "flask ; extra == 'all'",
            "gunicorn ; extra == 'all'",
            "click (>=7.0) ; extra == 'all'",
            "pandas ; extra == 'all'",
            "prometheus-client ; extra == 'all'",
            "python-json-logger ; extra == 'all'",
            "boto3 ; extra == 'all'",
            "requests ; extra == 'all'",
            "packaging ; extra == 'all'",
            "docker ; extra == 'all'",
            "configparser ; extra == 'all'",
            "sqlalchemy (>=1.3.0) ; extra == 'all'",
            "protobuf (>=3.6.0) ; extra == 'all'",
            "grpcio ; extra == 'all'",
            "cerberus ; extra == 'all'",
            "tabulate ; extra == 'all'",
            "humanfriendly ; extra == 'all'",
            "alembic ; extra == 'all'",
            "python-dateutil (<2.8.1,>=2.1) ; extra == 'all'",
            "tox (>=3.12.1) ; extra == 'all'",
            "tox-conda (>=0.2.0) ; extra == 'all'",
            "flake8 ; extra == 'all'",
            "twine ; extra == 'all'",
            "setuptools ; extra == 'all'",
            "gitpython (>=2.0.2) ; extra == 'all'",
            "grpcio-tools ; extra == 'all'",
            "pylint (>=2.3.1) ; extra == 'all'",
            "black ; extra == 'all'",
            "imageio (>=2.5.0) ; extra == 'all'",
            "torch ; extra == 'all'",
            "torchvision ; extra == 'all'",
            "tensorflow ; extra == 'all'",
            "fastai ; extra == 'all'",
            "matplotlib ; extra == 'all'",
            "xgboost ; extra == 'all'",
            "h2o ; extra == 'all'",
            "aws-sam-cli (==0.33.1) ; extra == 'all'",
            "sphinx ; extra == 'all'",
            "sphinx-click ; extra == 'all'",
            "sphinx-rtd-theme ; extra == 'all'",
            "sphinxcontrib-fulltoc ; extra == 'all'",
            "recommonmark ; extra == 'all'",
            "gunicorn ; extra == 'api_server'",
            "prometheus-client ; extra == 'api_server'",
            "tox (>=3.12.1) ; extra == 'dev'",
            "tox-conda (>=0.2.0) ; extra == 'dev'",
            "flake8 ; extra == 'dev'",
            "twine ; extra == 'dev'",
            "setuptools ; extra == 'dev'",
            "gitpython (>=2.0.2) ; extra == 'dev'",
            "grpcio-tools ; extra == 'dev'",
            "pylint (>=2.3.1) ; extra == 'dev'",
            "black ; extra == 'dev'",
            "sphinx ; extra == 'doc_builder'",
            "sphinx-click ; extra == 'doc_builder'",
            "sphinx-rtd-theme ; extra == 'doc_builder'",
            "sphinxcontrib-fulltoc ; extra == 'doc_builder'",
            "recommonmark ; extra == 'doc_builder'",
            "ruamel.yaml (>=0.15.0) ; extra == 'doc_builder'",
            "numpy ; extra == 'doc_builder'",
            "flask ; extra == 'doc_builder'",
            "gunicorn ; extra == 'doc_builder'",
            "click (>=7.0) ; extra == 'doc_builder'",
            "pandas ; extra == 'doc_builder'",
            "prometheus-client ; extra == 'doc_builder'",
            "python-json-logger ; extra == 'doc_builder'",
            "boto3 ; extra == 'doc_builder'",
            "requests ; extra == 'doc_builder'",
            "packaging ; extra == 'doc_builder'",
            "docker ; extra == 'doc_builder'",
            "configparser ; extra == 'doc_builder'",
            "sqlalchemy (>=1.3.0) ; extra == 'doc_builder'",
            "protobuf (>=3.6.0) ; extra == 'doc_builder'",
            "grpcio ; extra == 'doc_builder'",
            "cerberus ; extra == 'doc_builder'",
            "tabulate ; extra == 'doc_builder'",
            "humanfriendly ; extra == 'doc_builder'",
            "alembic ; extra == 'doc_builder'",
            "python-dateutil (<2.8.1,>=2.1) ; extra == 'doc_builder'",
            "pytest (>=4.1.0) ; extra == 'test'",
            "pytest-cov (>=2.7.1) ; extra == 'test'",
            "mock (>=2.0.0) ; extra == 'test'",
            "coverage (>=4.4) ; extra == 'test'",
            "codecov ; extra == 'test'",
            "moto ; extra == 'test'",
            "numpy ; extra == 'test'",
            "imageio (>=2.5.0) ; extra == 'test'",
            "aws-sam-cli (==0.33.1) ; extra == 'test'"
        ],
        "requires_python": ">=3.4",
        "summary": "A platform for serving and deploying machine learning models in the cloud",
        "version": "0.5.8006"
    },
    "last_serial": 6452164,
    "releases": {
        "0.5.8006": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8dfd25ac10f36ff892adcdb806a18b3",
                    "sha256": "511e3a90715bc9d010fd4287f9ca11611c52c0499c5f2623a159d4b065cde898"
                },
                "downloads": -1,
                "filename": "BentoML_DA_Kube-0.5.8006-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f8dfd25ac10f36ff892adcdb806a18b3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.4",
                "size": 498061,
                "upload_time": "2020-01-14T15:12:11",
                "upload_time_iso_8601": "2020-01-14T15:12:11.278781Z",
                "url": "https://files.pythonhosted.org/packages/85/38/86e51d228e967eaabdfb9c4c09adacb91d1f79b38286fb66bdafef820a62/BentoML_DA_Kube-0.5.8006-py3-none-any.whl"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "f8dfd25ac10f36ff892adcdb806a18b3",
                "sha256": "511e3a90715bc9d010fd4287f9ca11611c52c0499c5f2623a159d4b065cde898"
            },
            "downloads": -1,
            "filename": "BentoML_DA_Kube-0.5.8006-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "f8dfd25ac10f36ff892adcdb806a18b3",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": ">=3.4",
            "size": 498061,
            "upload_time": "2020-01-14T15:12:11",
            "upload_time_iso_8601": "2020-01-14T15:12:11.278781Z",
            "url": "https://files.pythonhosted.org/packages/85/38/86e51d228e967eaabdfb9c4c09adacb91d1f79b38286fb66bdafef820a62/BentoML_DA_Kube-0.5.8006-py3-none-any.whl"
        }
    ]
}