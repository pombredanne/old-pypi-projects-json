{
    "info": {
        "author": "Joakim Myrvoll Johansen",
        "author_email": "joakimmyrvoll@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Environment :: Console",
            "License :: OSI Approved :: MIT License",
            "Natural Language :: English",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 2"
        ],
        "description": "# md-tangle\n\nThis project is a result of wanting config and setup files to be part of a document \nexplaining my setup. I originally used [Org-mode][1] and [org-babel-tangle][2] in \n[Emacs][3] to achieve this. I really like Org-mode and Emacs, but I'm not fond of\nbeing dependent on one editor. This is the reason I wanted a [CLI][4], and a more \nwidely used document [markup language][5].\n\nThis way of programming is called [literate programming][6]. This programming paradigm \nwas introduced by Donald Knuth. The idea is to write a program as an explanation of the\nprogram logic in a natural language interspersed with snippets of traditional source code.\nThe source code can then be generated (\"tangled\") by using some tool.\n\nAs [Markdown][7] is used by most programmers, I saw that language fit for the task.\nMarkdown is a plaintext-ish format popular with programmers. It's simple, easy and \nalready has support for embedding code blocks using ``` or ~~~~, mostly \nfor the purposes of syntax highlighting in documentation.\n\n## Command\nBy adding the command `tangle:<path/filename>`, this tool will tangle tagged code\nblocks to given file. Supports `~` for home directory.\n\nOne can tangle the code block to multiple files by separating the files with chosen separator (default: `,`).\n\nIf the file already exists, the user will be prompted with the option to overwrite,\nunless the `-f`/`--force` flag is added.\n\n### Flags\n\n* `-h`/`--help`: Show help message and exit\n* `-f`/`--force`: Force overwrite of files if the already exists\n* `-v`/`--verbose`: Show output\n* `-s`/`--separator`: Separator for tangle destinations (default=',')\n\n## Usage\n\nTake the following example:\n\n`HelloWorld.md`\n```markdown\n# Some title\nDescribing the following code... bla bla.\n\n~~~~javascript tangle:helloWorld.js\nconsole.log(\"Hello, \");\nconsole.log(\"world\");\n~~~~\n\n## Styling\nAdding header for my css files:\n\n~~~~css tangle:styles/button.css,styles/input.css\n/* Styling for mye awesome app */\n~~~~\n\nBy adding some css ... \n\n~~~~css tangle:styles/button.css\n#button1 {\n    border: none;\n}\n~~~~\n\n~~~~css tangle:styles/input.css\n#button1 {\n    border: none;\n}\n~~~~\n```\n\nBy adding installing `md-tangle` with `pip`, one could simply produce files from this file by\nexecuting:\n\n```bash\n$ md-tangle -v HelloWorld.md \nhelloWorld.js                                      2 lines\nstyles/button.css                                  4 lines\nstyles/input.css                                   4 lines\n$ ls \nhelloWorld.js HelloWorld.md styles\n```\n\n> If one wishes to use Python 2, one could easily install `md-tangle2` instead.\n\n## Documentation\n\nThe [documentation][8] for `md-tangle` is of course written in Markdown, and tangles to the source\ncode.\n\n\n[1]: https://en.wikipedia.org/wiki/Org-mode\n[2]: https://orgmode.org/manual/Extracting-source-code.html\n[3]: https://www.gnu.org/software/emacs/\n[4]: https://en.wikipedia.org/wiki/Command-line_interface\n[5]: https://en.wikipedia.org/wiki/Markup_language\n[6]: https://en.wikipedia.org/wiki/Literate_programming\n[7]: https://en.wikipedia.org/wiki/Markdown\n[8]: https://github.com/joakimmj/md-tangle/blob/master/DOCS.md\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/joakimmj/md-tangle",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "md-tangle2",
        "package_url": "https://pypi.org/project/md-tangle2/",
        "platform": "",
        "project_url": "https://pypi.org/project/md-tangle2/",
        "project_urls": {
            "Homepage": "https://github.com/joakimmj/md-tangle"
        },
        "release_url": "https://pypi.org/project/md-tangle2/1.1.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "Generates ('tangles') source code from Markdown documents (python2)",
        "version": "1.1.0"
    },
    "last_serial": 4919742,
    "releases": {
        "1.0.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f377741e2ff55529f6f3234665ed0b54",
                    "sha256": "1375edf5ddfe580fad75876e057e9a1b579367b733ab3f5c16dc4521b26c9319"
                },
                "downloads": -1,
                "filename": "md_tangle2-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f377741e2ff55529f6f3234665ed0b54",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5708,
                "upload_time": "2019-03-07T22:22:25",
                "url": "https://files.pythonhosted.org/packages/1c/b7/19be4c9509133dd84e998a7187c5e58073d080b02476b15db4001563c635/md_tangle2-1.0.0-py3-none-any.whl"
            }
        ],
        "1.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eced74332a624ef050812bb618baf774",
                    "sha256": "a9a17961b834dd602001555963a670a59f3c98427ac4f44925a1ebdae3c98e0a"
                },
                "downloads": -1,
                "filename": "md_tangle2-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eced74332a624ef050812bb618baf774",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5692,
                "upload_time": "2019-03-09T17:01:29",
                "url": "https://files.pythonhosted.org/packages/f9/06/7a69d802b50a5c4e5d62d8cb11356ba8b4a4763d149ba9f9de7481e45067/md_tangle2-1.0.1-py3-none-any.whl"
            }
        ],
        "1.1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e7f3abc7957a85d2f01edf8dfdea2732",
                    "sha256": "34c9888974fa9a3d4f381653300e19bfddd27bec7763b4893d410607e8923aa6"
                },
                "downloads": -1,
                "filename": "md_tangle2-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e7f3abc7957a85d2f01edf8dfdea2732",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5941,
                "upload_time": "2019-03-09T21:48:37",
                "url": "https://files.pythonhosted.org/packages/8e/aa/4b6eae4a495b9bbfa61ab15ce111a3f2b9ce6927a269750874b9dbbeb41c/md_tangle2-1.1.0-py3-none-any.whl"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "e7f3abc7957a85d2f01edf8dfdea2732",
                "sha256": "34c9888974fa9a3d4f381653300e19bfddd27bec7763b4893d410607e8923aa6"
            },
            "downloads": -1,
            "filename": "md_tangle2-1.1.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "e7f3abc7957a85d2f01edf8dfdea2732",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 5941,
            "upload_time": "2019-03-09T21:48:37",
            "url": "https://files.pythonhosted.org/packages/8e/aa/4b6eae4a495b9bbfa61ab15ce111a3f2b9ce6927a269750874b9dbbeb41c/md_tangle2-1.1.0-py3-none-any.whl"
        }
    ]
}