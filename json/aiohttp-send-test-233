{
    "info": {
        "author": "Trim21",
        "author_email": "trim21me@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 3 - Alpha",
            "Framework :: AsyncIO",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: MIT License",
            "Programming Language :: Python",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7",
            "Topic :: Internet :: WWW/HTTP"
        ],
        "description": "# aiohttp-send\n\n[![Pypi](https://img.shields.io/pypi/v/aiohttp-send.svg)](https://pypi.org/project/aiohttp-send/)\n[![codecov](https://codecov.io/gh/Trim21/aiohttp-send/branch/master/graph/badge.svg)](https://codecov.io/gh/Trim21/aiohttp-send)\n\nSend file in [aiohttp](https://github.com/aio-libs/aiohttp)\n\n## Install \n\nPython 3.6 only now (function arguments type hint does not work in 3.5)\n\n```bash\npip install aiohttp aiohttp-send\n```\n\n## Options\n\n - `max_age` Browser cache max-age in milliseconds. (defaults to `0`)\n - `immutable` Tell the browser the resource is immutable and can be cached indefinitely. (defaults to `False`)\n - `hidden` Allow transfer of hidden files. (defaults to `True`)\n - [`root`](#root-path) Root directory to restrict file access.\n - `index` Name of the index file to serve automatically when visiting the root location. (defaults to `None`)\n - `gzip` Try to serve the gzipped version of a file automatically when `gzip` is supported by a client and if the requested file with `.gz` extension exists. (defaults to `False`).\n - `brotli` Try to serve the brotli version of a file automatically when `brotli` is supported by a client and if the requested file with `.br` extension exists. (defaults to `False`).\n - `format` If not `False` (defaults to `True`), format the path to serve static file servers and not require a trailing slash for directories, so that you can do both `/directory` and `/directory/`.\n - `extensions` Try to match extensions from passed array to search for file when no extension is sufficed in URL. First found is served. (defaults to `False`)\n <!-- - [`set_headers`](#set_headers) Function to set custom headers on response. -->\n\n### Root path\n\nNote that `root` is required, defaults to `''` and will be resolved,\nremoving the leading `/` to make the path relative and this\npath must not contain \"..\", protecting developers from\nconcatenating user input. If you plan on serving files based on\nuser input supply a `root` directory from which to serve from.\n\nFor example to serve files from `./public`:\n\n```py\nasync def index(request: web.Request):\n    return await send(request, request.path, root='./public', format=True)\n\napp.add_routes([\n    web.get('/{tail:.*}', index),\n])\n```\n<!-- \n### set_headers\n\nThe function is called as `fn(res, path, stats)`, where the arguments are:\n* `res`: the response object\n* `path`: the resolved file path that is being sent\n* `stats`: the stats object of the file that is being sent.\n\nYou should only use the `setHeaders` option when you wish to edit the `Cache-Control` or `Last-Modified` headers, because doing it before is useless (it's overwritten by `send`), and doing it after is too late because the headers are already sent.\n\nIf you want to edit any other header, simply set them before calling `send`.\n -->\n\n\n## Example\n\n```python\nfrom aiohttp import web\nfrom aiohttp_send import send\n\napp = web.Application()\n\n\nasync def index(request):\n    return await send(request, 'index.html')\n\n\napp.add_routes([\n    web.get('/', index),\n])\n\nweb.run_app(app, port=8888)\n```\n\n \nThis project comes from [koajs/send](https://github.com/koajs/send).",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/Trim21/aiohttp-send",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "aiohttp-send-test-233",
        "package_url": "https://pypi.org/project/aiohttp-send-test-233/",
        "platform": "",
        "project_url": "https://pypi.org/project/aiohttp-send-test-233/",
        "project_urls": {
            "Homepage": "https://github.com/Trim21/aiohttp-send"
        },
        "release_url": "https://pypi.org/project/aiohttp-send-test-233/0.0.8/",
        "requires_dist": null,
        "requires_python": ">=3.5.3",
        "summary": "Send file in for aiohttp.web (http server for asyncio)",
        "version": "0.0.8"
    },
    "last_serial": 4987446,
    "releases": {
        "0.0.8": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c73cbe0d17dadc6df13a7ca5873b6963",
                    "sha256": "c80535d09424ff73de11c3de2d623dda94b485689ee710c6105434cbe1b7c838"
                },
                "downloads": -1,
                "filename": "aiohttp-send-test-233-0.0.8.tar.gz",
                "has_sig": false,
                "md5_digest": "c73cbe0d17dadc6df13a7ca5873b6963",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5.3",
                "size": 5240,
                "upload_time": "2019-03-26T12:17:11",
                "url": "https://files.pythonhosted.org/packages/ff/06/6d63026f9d615cfa901382dc447ef793028d452bfb441f86a18d12aa7b33/aiohttp-send-test-233-0.0.8.tar.gz"
            }
        ],
        "3.0.0a0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7b49d163a45dce21f704558679ca5da8",
                    "sha256": "f666933b7b740f37cc34920c8526dd0d9d92f294b26b1b5e7ee67d89bfa64d3a"
                },
                "downloads": -1,
                "filename": "aiohttp-send-test-233-3.0.0a0.tar.gz",
                "has_sig": false,
                "md5_digest": "7b49d163a45dce21f704558679ca5da8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 60558,
                "upload_time": "2019-03-26T12:26:51",
                "url": "https://files.pythonhosted.org/packages/aa/5d/1fbe5a100e64cce3c96723a38c0522c852f9997e3871be8e6fa25aae90c4/aiohttp-send-test-233-3.0.0a0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "c73cbe0d17dadc6df13a7ca5873b6963",
                "sha256": "c80535d09424ff73de11c3de2d623dda94b485689ee710c6105434cbe1b7c838"
            },
            "downloads": -1,
            "filename": "aiohttp-send-test-233-0.0.8.tar.gz",
            "has_sig": false,
            "md5_digest": "c73cbe0d17dadc6df13a7ca5873b6963",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": ">=3.5.3",
            "size": 5240,
            "upload_time": "2019-03-26T12:17:11",
            "url": "https://files.pythonhosted.org/packages/ff/06/6d63026f9d615cfa901382dc447ef793028d452bfb441f86a18d12aa7b33/aiohttp-send-test-233-0.0.8.tar.gz"
        }
    ]
}