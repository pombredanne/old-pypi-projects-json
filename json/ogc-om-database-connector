{
    "info": {
        "_pypi_hidden": false,
        "_pypi_ordering": 0,
        "author": "X.Malet",
        "author_email": "maletxa@gmail.com",
        "bugtrack_url": null,
        "cheesecake_code_kwalitee_id": null,
        "cheesecake_documentation_id": null,
        "cheesecake_installability_id": null,
        "classifiers": [],
        "description": "Copyright (c) 2018 Xavier Malet\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nDescription: # database_connector\n        \n        This project bring database capabilities to the `OGC-O&M` database implementation.\n        \n        Dependencies can be found in the `requirements.txt` file. Install them by using the command:\n        \n        - `pip install -r requirements.txt`\n        \n        ## package description\n        \n        ### `data_transfert_objects_interface`\n        \n        this package is used to define data structures called `data transfert objects` or `DTO`. These classes derived from the \n        `AbstractDomainElement` located in `abstract_element.py`. \n        They implement the following methods as a base structure:\n        - `get_element_dict` : return a `dict` corresponding to a database table row. \n        - `get_definition` : return a `dict` corresponding to a database table row plus an entry in the `dict` \n        for each objects that composed the current element.\n        - `make_element_with_entry(entry)` : set an element's attributes with values of the entry.\n        \n        `DTO` classes are used to pass data from the database to the user and vice versa. \n        \n        ### `db_acces_layer`\n        \n        The `db_acces_layer` provides methods to be used by an interface in order to read/write data in the database.\n        Classes present in this package return `SQLAlchemy.RowProxy` in `list` or not.\n        \n        ### `db_interface`\n        \n        The `db_interface` interface package must be the only package accessible from the outside. It use the `db_acces_layer`\n        to construct `DTO` classes from the `data_transfert_objects_interface` package. The `db_interface` package provides\n        methods to construct `DTO` classes for insertion. These `DTO` classes are passed to the `db_acces_layer` that take care \n        of the insertion, primary key and foreign key management, etc. \n        \n        ### `sql_alchemy_table_reflect`\n        \n        This package is used to reflect database tables and get them to the `db_acces_layer`. \n        The purpose of this package is to facilitate CRUD operation by validating the input.\nPlatform: UNKNOWN\nClassifier: Development Status :: 3 - Alpha\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Natural Language :: French\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Topic :: Database\nDescription-Content-Type: text/markdown\n",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": 0,
            "last_month": 0,
            "last_week": 0
        },
        "home_page": "https://github.com/x-malet/database_connector",
        "keywords": "",
        "license": "MIT License",
        "maintainer": "",
        "maintainer_email": "",
        "name": "OGC-OM-database-connector",
        "package_url": "http://pypi.python.org/pypi/OGC-OM-database-connector",
        "platform": "",
        "release_url": "http://pypi.python.org/pypi/OGC-OM-database-connector/1.0",
        "requires_dist": [
            "SQLAlchemy (>=1.1.14)",
            "requests (>=2.18.4)",
            "psycopg2 (>=2.7.3.1)",
            "jdcal (>=1.3)",
            "GeoAlchemy2 (>=0.4.0)"
        ],
        "requires_python": "",
        "summary": "Database connector for O&M om_database in Postgresql",
        "version": "1.0"
    },
    "releases": {
        "1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dbe2bae4099f70fa596a89430a498146",
                    "sha256": "e2c1e91364d8473936041a611971b80b7f35e5e65bee66d244792a863bd61dd2"
                },
                "downloads": 0,
                "filename": "OGC_OM_database_connector-1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dbe2bae4099f70fa596a89430a498146",
                "packagetype": "bdist_wheel",
                "path": "91/8d/c4583a32af1afb1388c25b40a6e5ccfb30bdeb8ac6878d8329f424de77c5/OGC_OM_database_connector-1.0-py3-none-any.whl",
                "python_version": "py3",
                "sha256_digest": "e2c1e91364d8473936041a611971b80b7f35e5e65bee66d244792a863bd61dd2",
                "size": 121189,
                "upload_time": "2018-04-15T18:43:36",
                "url": "https://pypi.python.org/packages/91/8d/c4583a32af1afb1388c25b40a6e5ccfb30bdeb8ac6878d8329f424de77c5/OGC_OM_database_connector-1.0-py3-none-any.whl"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "dbe2bae4099f70fa596a89430a498146",
                "sha256": "e2c1e91364d8473936041a611971b80b7f35e5e65bee66d244792a863bd61dd2"
            },
            "downloads": 0,
            "filename": "OGC_OM_database_connector-1.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "dbe2bae4099f70fa596a89430a498146",
            "packagetype": "bdist_wheel",
            "path": "91/8d/c4583a32af1afb1388c25b40a6e5ccfb30bdeb8ac6878d8329f424de77c5/OGC_OM_database_connector-1.0-py3-none-any.whl",
            "python_version": "py3",
            "sha256_digest": "e2c1e91364d8473936041a611971b80b7f35e5e65bee66d244792a863bd61dd2",
            "size": 121189,
            "upload_time": "2018-04-15T18:43:36",
            "url": "https://pypi.python.org/packages/91/8d/c4583a32af1afb1388c25b40a6e5ccfb30bdeb8ac6878d8329f424de77c5/OGC_OM_database_connector-1.0-py3-none-any.whl"
        }
    ]
}