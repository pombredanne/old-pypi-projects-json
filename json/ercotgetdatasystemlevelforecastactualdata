{
    "info": {
        "author": "",
        "author_email": "",
        "bugtrack_url": null,
        "classifiers": [
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3"
        ],
        "description": "# This package allows you to create System Level Forecast for ERCOT\n\nIt automatically creates all the required tables in the database.\nThis class constructor takes following parameters:\n    \n    start_date: The start date and time for the API. Example 2019-02-07 (%Y-%m-%d)\n\n    end_date: The end date and time for the API. Example 2019-02-07\n \n    log: The Logging class object\n\n    config: The Config class object. Before passing this object make sure all the database\n\n    credentials are already setup using config class object.\n    \n    csv_dir: The directory path where the csv files should be stored\n    \n    database_system: The database system to be used (e.g MySql). The value must be from Config class\n    supported values are\n    Config.MYSQL\n    Config.POSTGRESQL\n    \n    Default value is Config.MYSQL\n    \n\nTo execute the system you can call execute method of the same class.\n\n# EXAMPLE\n\n```\nimport logging\nimport os\nfrom datetime import datetime, timedelta\n\nfrom ERCOTGetDataSystemLevelForecastActualData import ERCOTSystemLevelForecast\nfrom utilsInnowatts import Config, Logging\n\nlog = Logging(print_on_console=True, level=logging.INFO)\nconfig = Config()\nconfig.setup_mysql_configuration(host=os.environ['MYSQL_HOST'],\n                                 port=os.environ['MYSQL_PORT'],\n                                 user=os.environ['MYSQL_USER'],\n                                 password=os.environ['MYSQL_PASSWORD'],\n                                 database=os.environ['MYSQL_DATABASE'],\n                                 )\n# Un comment below line if you want to write to mysql on local docker mysql image\n# config.setup_mysql_configuration(\"mysql-db\", 3306, \"root\", \"data_lake\", \"password\")\n\n# config.setup_postgresql_configuration(host=os.environ['POSTGRESQL_HOST'],\n#                                       port=os.environ['POSTGRESQL_PORT'],\n#                                       user=os.environ['POSTGRESQL_USER'],\n#                                       password=os.environ['POSTGRESQL_PASSWORD'],\n#                                       database=os.environ['POSTGRESQL_DATABASE'],\n#                                       )\n\n\ncsv_dir = \"csv_ercot\"\nend_date = datetime.now()\nstart_date = end_date - timedelta(days=0)  # To get 1 day data start date and end date must be same\nformat_string = \"%Y-%m-%d\"\nercot = ERCOTSystemLevelForecast(start_date=start_date.strftime(format_string),\n                                 end_date=end_date.strftime(format_string), log=log,\n                                 config=config, csv_dir=csv_dir, database_system=Config.MYSQL)\nercot.execute()\n\n```",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "ERCOTGetDataSystemLevelForecastActualData",
        "package_url": "https://pypi.org/project/ERCOTGetDataSystemLevelForecastActualData/",
        "platform": "",
        "project_url": "https://pypi.org/project/ERCOTGetDataSystemLevelForecastActualData/",
        "project_urls": null,
        "release_url": "https://pypi.org/project/ERCOTGetDataSystemLevelForecastActualData/1.0.3/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "This package provide system level forecast for CAISO",
        "version": "1.0.3"
    },
    "last_serial": 5938085,
    "releases": {
        "1.0.3": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5646de4df2a50639ff08038c7d035789",
                    "sha256": "081dc10edc6e9d43a082cb4b92e4097156a8b6c67d5f7b3fe32d7115a4c59fb9"
                },
                "downloads": -1,
                "filename": "ERCOTGetDataSystemLevelForecastActualData-1.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "5646de4df2a50639ff08038c7d035789",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4825,
                "upload_time": "2019-10-07T10:30:47",
                "upload_time_iso_8601": "2019-10-07T10:30:47.809017Z",
                "url": "https://files.pythonhosted.org/packages/dc/82/10d401f142d86068a40ce850dbf6a835083c53bf7201588fe5e30dcee167/ERCOTGetDataSystemLevelForecastActualData-1.0.3.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "5646de4df2a50639ff08038c7d035789",
                "sha256": "081dc10edc6e9d43a082cb4b92e4097156a8b6c67d5f7b3fe32d7115a4c59fb9"
            },
            "downloads": -1,
            "filename": "ERCOTGetDataSystemLevelForecastActualData-1.0.3.tar.gz",
            "has_sig": false,
            "md5_digest": "5646de4df2a50639ff08038c7d035789",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 4825,
            "upload_time": "2019-10-07T10:30:47",
            "upload_time_iso_8601": "2019-10-07T10:30:47.809017Z",
            "url": "https://files.pythonhosted.org/packages/dc/82/10d401f142d86068a40ce850dbf6a835083c53bf7201588fe5e30dcee167/ERCOTGetDataSystemLevelForecastActualData-1.0.3.tar.gz"
        }
    ]
}