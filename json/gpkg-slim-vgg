{
    "info": {
        "author": "Guild AI",
        "author_email": "packages@guild.ai",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "\n\nModels\n######\n\nslim-vgg-11\n###########\n\n*Oxford VGG 11-Layers version A model*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained VGG-11 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a VGG-11 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfreeze\n^^^^^^\n\n*Generate a VGG-11 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and VGG-11 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a VGG-11 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/vgg.py\n- http://arxiv.org/pdf/1409.1556.pdf\n- http://www.robots.ox.ac.uk/~karen/pdf/ILSVRC_2014.pdf\n\nslim-vgg-16\n###########\n\n*Oxford VGG 16-Layers version D model*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained VGG-16 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a VGG-16 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a VGG-16 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a VGG-16 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and VGG-16 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a VGG-16 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/vgg.py\n- http://arxiv.org/pdf/1409.1556.pdf\n- http://www.robots.ox.ac.uk/~karen/pdf/ILSVRC_2014.pdf\n\nslim-vgg-19\n###########\n\n*Oxford VGG 19-Layers version E model*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained VGG-19 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a VGG-19 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a VGG-19 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a VGG-19 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and VGG-19 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a VGG-19 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/vgg.py\n- http://arxiv.org/pdf/1409.1556.pdf\n- http://www.robots.ox.ac.uk/~karen/pdf/ILSVRC_2014.pdf\n\n\n",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/guildai/index/tree/master/slim/vgg",
        "keywords": "vgg images model",
        "license": "Apache 2.0",
        "maintainer": "",
        "maintainer_email": "",
        "name": "gpkg.slim.vgg",
        "package_url": "https://pypi.org/project/gpkg.slim.vgg/",
        "platform": "",
        "project_url": "https://pypi.org/project/gpkg.slim.vgg/",
        "project_urls": {
            "Homepage": "https://github.com/guildai/index/tree/master/slim/vgg"
        },
        "release_url": "https://pypi.org/project/gpkg.slim.vgg/0.4.1/",
        "requires_dist": [
            "gpkg.slim.datasets (>=0.3.1.dev1)",
            "gpkg.slim (>=0.3.1.dev1)"
        ],
        "requires_python": "",
        "summary": "Oxford VGG models (11-Layers verion A, 16-Layers version D, 19-Layers version E)",
        "version": "0.4.1"
    },
    "last_serial": 4105771,
    "releases": {
        "0.3.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2ce0a545214b26524fc7ea66e1e556a9",
                    "sha256": "119d4b45dda8f06ae8510d6dc813fa477b29857f1df579799db5753fedb5ae1b"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.3.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2ce0a545214b26524fc7ea66e1e556a9",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6368,
                "upload_time": "2018-03-12T02:29:02",
                "url": "https://files.pythonhosted.org/packages/e3/cd/af70df0e050703d61bb8099cb150c75cc5448a4aa4f9e48e565aee2ae6c6/gpkg.slim.vgg-0.3.0-py2.py3-none-any.whl"
            }
        ],
        "0.3.0.dev1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6c0e815419e176136a2c07c0da629db9",
                    "sha256": "658098dc1a334655a8e5022dae789bea0f39ba5b932e65d52315f21e52ba20dc"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.3.0.dev1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6c0e815419e176136a2c07c0da629db9",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6056,
                "upload_time": "2018-03-05T00:55:56",
                "url": "https://files.pythonhosted.org/packages/cc/cb/20ea08da11df0024e3eb484a3b152c63ddb18569eed7f9b32543ab440e27/gpkg.slim.vgg-0.3.0.dev1-py2.py3-none-any.whl"
            }
        ],
        "0.3.0.dev2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "339c1065a6b32440ce096799d5fef9a8",
                    "sha256": "05cbcbc30153a34cf92957684bfcccc15012c6f027521837ab873f1f7c83daa8"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.3.0.dev2-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "339c1065a6b32440ce096799d5fef9a8",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6063,
                "upload_time": "2018-03-05T00:59:05",
                "url": "https://files.pythonhosted.org/packages/01/a4/490e5deadefea7aa05b0207f847470ee4b0d7d8ab2a36940b462463695bc/gpkg.slim.vgg-0.3.0.dev2-py2.py3-none-any.whl"
            }
        ],
        "0.3.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f83059ffbc8d27c4308c68824f184d0a",
                    "sha256": "c26acd6a42ef182a3e3940d44340ce5f9ed07beeaf9c9a7296a9b3f2bedd7a99"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.3.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f83059ffbc8d27c4308c68824f184d0a",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6350,
                "upload_time": "2018-03-28T12:20:59",
                "url": "https://files.pythonhosted.org/packages/9b/fd/1429a152c828a7ddaba0e2dd3a2990c4f58052cd4872d7891f1f3052d132/gpkg.slim.vgg-0.3.1-py2.py3-none-any.whl"
            }
        ],
        "0.3.1.dev1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "928b5e43603d877b70517a8d00a7cfa2",
                    "sha256": "4a0d94127f9294f6822b9f452fc1b46965fd83dd5ebabd5ff97a6c71231eaccf"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.3.1.dev1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "928b5e43603d877b70517a8d00a7cfa2",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6442,
                "upload_time": "2018-03-20T14:35:21",
                "url": "https://files.pythonhosted.org/packages/d7/04/148f4b3b69f49a64ea568411a2864baccbc4c93b7199409893fab7211884/gpkg.slim.vgg-0.3.1.dev1-py2.py3-none-any.whl"
            }
        ],
        "0.4.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "17b102db0708252b157ea22d966bd53f",
                    "sha256": "d7041ff52099fc66605a3504d8915736db05ca1a9a88b7751e86a554fc2ac7bd"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.4.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "17b102db0708252b157ea22d966bd53f",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 5030,
                "upload_time": "2018-07-26T17:52:40",
                "url": "https://files.pythonhosted.org/packages/53/e6/8d8130a2040224fb2607000b671d27bbdb20e0409e3d5c5dcd7721262c2e/gpkg.slim.vgg-0.4.0-py2.py3-none-any.whl"
            }
        ],
        "0.4.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "883469c0c211742a74a0ea66f9368b99",
                    "sha256": "1537ed7788829cabcb8a279746c1ea233e488d727f6c4bb4968f593c5b5c875c"
                },
                "downloads": -1,
                "filename": "gpkg.slim.vgg-0.4.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "883469c0c211742a74a0ea66f9368b99",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 5026,
                "upload_time": "2018-07-26T18:06:04",
                "url": "https://files.pythonhosted.org/packages/bf/b9/35d4f127469838dd53dc33d3c83fbfbcb68948f77636f28b0e3022a5284e/gpkg.slim.vgg-0.4.1-py2.py3-none-any.whl"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "883469c0c211742a74a0ea66f9368b99",
                "sha256": "1537ed7788829cabcb8a279746c1ea233e488d727f6c4bb4968f593c5b5c875c"
            },
            "downloads": -1,
            "filename": "gpkg.slim.vgg-0.4.1-py2.py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "883469c0c211742a74a0ea66f9368b99",
            "packagetype": "bdist_wheel",
            "python_version": "py2.py3",
            "requires_python": null,
            "size": 5026,
            "upload_time": "2018-07-26T18:06:04",
            "url": "https://files.pythonhosted.org/packages/bf/b9/35d4f127469838dd53dc33d3c83fbfbcb68948f77636f28b0e3022a5284e/gpkg.slim.vgg-0.4.1-py2.py3-none-any.whl"
        }
    ]
}