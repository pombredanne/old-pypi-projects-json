{
    "info": {
        "author": "TUGRAZ",
        "author_email": "mb_wali@hotmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 5 - Production/Stable",
            "Environment :: Web Environment",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3",
            "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
            "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "description": "# Invenio SAML\n  Module for invenio that provides authentication via Shibboleth.\n\n## Installation\n\n### Requirments\nThe python3-saml module uses ```xmlsec```, which offers Python bindings for the XML Security Library. ```xmlsec``` depends on ```libxml2-dev``` and ```libxmlsec1-dev```. These libraries can be installed via the package manager of your distribution. For Ubuntu use:\n\n```\n$ sudo apt install libxml2-dev libxmlsec1-dev\n```\n\nalso add this script in your ```Dockerfile.base``` just after FROM inveniosoftware/centos7-python:3.6 line.\n\n```\nRUN yum -y install libxml2-devel xmlsec1-devel xmlsec1-openssl-devel libtool-ltdl-devel\n```\n\n### invenio-SAML\n\ninvenio-SAML module can be installed via PyPI:\n\n```\npip install invenio-saml\n```\n\nor the latest development branch directly from GitHub:\n\n```\npip install git+git://github.com/mb-wali/invenio-SAML@master\n```\n\n---\n\n## Configuration\n\n### config.py\n\n[Generate](https://www.samltool.com/self_signed_certs.php) self signed ```sp.crt``` and ```sp.key```. \n\nPath to ```sp.crt``` (X.509 cert) Public cert for ```SERVICE_PROVIDER```. \n```\nSHIBBOLETH_SERVICE_PROVIDER_CERTIFICATE = './docker/shibbolethAuthenticator/sp.crt'\n```\n\nPath to ```sp.key``` (Private key) Private key for ```SERVICE_PROVIDER```.\n```\nSHIBBOLETH_SERVICE_PROVIDER_PRIVATE_KEY = './docker/shibbolethAuthenticator/sp.key'\n```\n\nPath to ```idp.crt``` Public cert for IDP ```IDENTITY_PROVIDER```.\n```\nSHIBBOLETH_IDP_CERT = './docker/shibbolethAuthenticator/idp.crt'\n```\n\nNumber of seconds after which the state token expires\n```\nSHIBBOLETH_STATE_EXPIRES = 300\n```\n\n#### SERVICES_PROVIDER\n```SHIBBOLETH_SERVICES_PROVIDER``` Is your application/Service in this case invenio.\n- ```strict``` MUST be set as ```True```. Otherwise your environment is not secure and will be exposed to attacks.\n- ```debug``` set this ```True``` for debugging purposes.\n- ```entity_id``` is a unique self signed URI, with this the ```IDENTITY_PROVIDERS``` knows which ```SERVICES_PROVIDER``` is asking for identity.\n\nsee example below:\n\n``` \nSHIBBOLETH_SERVICE_PROVIDER = dict(\n    strict=True,\n    debug=True,\n    entity_id='https://mydomain/shibboleth'\n)\n```\n\n#### IDENTITY_PROVIDERS\n```SHIBBOLETH_IDENTITY_PROVIDERS``` Is remote application which we redirect the user to login or to identify.\n- ```idp = dict()``` ```idp``` is your remote_app name, which has these below fields:\n  - ```entity_id``` is a unique URI from your ```IDENTITY_PROVIDERS```.\n  - ```title``` you can give a title for your ```idp``` [OPTIONAL]\n  - ```sso_url``` is the URL to redirect the user. URL for ```IDENTITY_PROVIDERS```.\n  - ```sso__Logout_url``` is the URL to redirect for logout.\n  - ```mappings=dict()``` is the fields/values that ```IDENTITY_PROVIDERS``` sends back after successful identity of user.\n    - ```email```\n    - ```full_name```\n    - ```user_unique_id```\n\nsee example below:\n\n```\nSHIBBOLETH_IDENTITY_PROVIDERS = dict(\n    idp=dict(\n        entity_id='https://identityprovider/idp/shibboleth',\n        title='Mydomain remote app',\n        sso_url='https://identityprovider/idp/profile/SAML2/Redirect/SSO',\n        sso__Logout_url='https://sso.identityprovider.com/slo/Logout',\n        mappings=dict(\n            email='urn:oid:0.9.2342.19200300.100.1.3',\n            full_name='urn:oid:2.5.4.3',\n            user_unique_id='urn:oid:2.16.756.1.2.5.1.1.1',\n        )\n    )\n)\n```\n---\n\n## Blueprints\nAfter successful installation and configurtion.\nyou will be able to navigate to these endpoints.\n\n* Metadata\n\nNavigate to this endpoint to see your xml Metadata.\n  ```\n  https://yourdomanin.com/shibboleth/metadata/<remote_app>\n  ```\n---\n\n* Login\n\nNavigate to this endpoint to redirect the User to login with the SSO\n  ```\n  https://yourdomanin.com/shibboleth/login/<remote_app>\n  ```\n---\n\n* Authorized\n\nThis endpoint is activated when the Identity Provider redirects back to Service Provider.\n\n  ```\n  https://yourdomanin.com/shibboleth/authorized/<remote_app>\n  ```\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "https://github.com/mb-wali/invenio-SAML/archive/0.0.1.tar.gz",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/mb-wali/invenio-SAML",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "invenio-SAML",
        "package_url": "https://pypi.org/project/invenio-SAML/",
        "platform": "",
        "project_url": "https://pypi.org/project/invenio-SAML/",
        "project_urls": {
            "Download": "https://github.com/mb-wali/invenio-SAML/archive/0.0.1.tar.gz",
            "Homepage": "https://github.com/mb-wali/invenio-SAML"
        },
        "release_url": "https://pypi.org/project/invenio-SAML/0.0.1/",
        "requires_dist": [
            "Flask (>=0.11.1)",
            "Flask-Login (>=0.3.2)",
            "Flask-WTF (>=0.13.1)",
            "oauthlib (!=2.0.3,!=2.0.4,!=2.0.5,<3.0.0,>=1.1.2)",
            "python3-saml (>=1.4.0)",
            "requests-oauthlib (<1.2.0,>=0.6.2)",
            "uritools (>=1.0.1)",
            "python-slugify (>=4.0.0)"
        ],
        "requires_python": ">=3.6",
        "summary": "Module for invenio that provides authentication via Shibboleth.",
        "version": "0.0.1"
    },
    "last_serial": 6465411,
    "releases": {
        "0.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1eb5fb396c400a8010cbfb75c799446f",
                    "sha256": "ee2cd380590b5526c52801ad1b01cfc9e97bf70319aada5cd019f736d3390511"
                },
                "downloads": -1,
                "filename": "invenio_SAML-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1eb5fb396c400a8010cbfb75c799446f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 4113,
                "upload_time": "2020-01-16T11:08:40",
                "upload_time_iso_8601": "2020-01-16T11:08:40.016718Z",
                "url": "https://files.pythonhosted.org/packages/36/c7/3568ba757645087223ec75c0ac8203a3617ddccc2fa9868cd365a49e338d/invenio_SAML-0.0.1-py3-none-any.whl"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "1eb5fb396c400a8010cbfb75c799446f",
                "sha256": "ee2cd380590b5526c52801ad1b01cfc9e97bf70319aada5cd019f736d3390511"
            },
            "downloads": -1,
            "filename": "invenio_SAML-0.0.1-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "1eb5fb396c400a8010cbfb75c799446f",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": ">=3.6",
            "size": 4113,
            "upload_time": "2020-01-16T11:08:40",
            "upload_time_iso_8601": "2020-01-16T11:08:40.016718Z",
            "url": "https://files.pythonhosted.org/packages/36/c7/3568ba757645087223ec75c0ac8203a3617ddccc2fa9868cd365a49e338d/invenio_SAML-0.0.1-py3-none-any.whl"
        }
    ]
}