{
    "info": {
        "author": "Hai Victor Habi",
        "author_email": "victoropensource@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3"
        ],
        "description": "[![Build Status](https://travis-ci.com/haihabi/torch_rain.svg?token=eE741jb2R5GqWJWLJhiE&branch=master)](https://travis-ci.com/haihabi/torch_rain)\n# Torch Rain\nLibrary for rain estimation and detection built with pytorch. \nThis library provide an implementations of algorithms for extracting rain-rate using data from commercial microwave links (CMLs). Addinaly this project provide an example dataset with data from two CMLs and implementation of perfomance and robustness metrics.  \n\n# Install\nThe install via pip\n```\npip instal torchrain\n\n```\n\n\n# Projects Structure\n\n1. Wet Dry Classification\n2. Baseline \n3. Power Law \n4. Rain estimation\n5. Metrics\n6. Robustness\n# Dataset\nThis repository includes an example of a dataset with a reference rain gauge.\n# Examples\n \n* Rain estimation using dynamic baseline []\n* Rain estimation using constant baseline []\n* Wet Dry Classification using statistic test []\n\n# Model Zoo\nIn this project we supply a set of trained networks in our [Model Zoo](https://github.com/haihabi/torch_rain/blob/master/model_zoo/model_zoo.md), this networks are trained on our own dataset which is not publicly available.\nThe model contains three types of networks: Wet-dry classification network, one-step network (rain estimation only) and two-step network (rain estimation and wet-dry classification). Moreover, we have provided all of these networks with a various number of RNN cells (1, 2, 3). From more details about network structure and results see the publication list.\n\n\n# Publication\n\nPlease cite one of following paper if you found our model useful. Thanks!\n\n> Habi, Hai Victor and Messer, Hagit. \"Wet-Dry Classification Using LSTM and Commercial Microwave Links\"\n\n```\n@inproceedings{habi2018wet,\n  title={Wet-Dry Classification Using LSTM and Commercial Microwave Links},\n  author={Habi, Hai Victor and Messer, Hagit},\n  booktitle={2018 IEEE 10th Sensor Array and Multichannel Signal Processing Workshop (SAM)},\n  pages={149--153},\n  year={2018},\n  organization={IEEE}\n} \n\n\n```",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/haihabi/torch_rain",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "torchrain",
        "package_url": "https://pypi.org/project/torchrain/",
        "platform": "",
        "project_url": "https://pypi.org/project/torchrain/",
        "project_urls": {
            "Homepage": "https://github.com/haihabi/torch_rain"
        },
        "release_url": "https://pypi.org/project/torchrain/0.1.2/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "TorchRain package",
        "version": "0.1.2"
    },
    "last_serial": 6590406,
    "releases": {
        "0.1.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "669748f76a16acc60fcfaa7ca1dc9ee6",
                    "sha256": "24525f497fe9554689382d99308b15cb64b1e97e52d112d777450cc8b9cfe9b8"
                },
                "downloads": -1,
                "filename": "torchrain-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "669748f76a16acc60fcfaa7ca1dc9ee6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14609,
                "upload_time": "2020-02-07T20:02:12",
                "upload_time_iso_8601": "2020-02-07T20:02:12.849385Z",
                "url": "https://files.pythonhosted.org/packages/33/df/d5ca6a1edadf77ea5353845a437802f656a6ace09083bb14043883e0315b/torchrain-0.1.1.tar.gz"
            }
        ],
        "0.1.2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "41cc09a531fb586c5baf2379df5ffd45",
                    "sha256": "a849f0031ee01f33826eb7d5ec4007511e809c720bd5e4605360ddbee7df1307"
                },
                "downloads": -1,
                "filename": "torchrain-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "41cc09a531fb586c5baf2379df5ffd45",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3067187,
                "upload_time": "2020-02-07T20:08:04",
                "upload_time_iso_8601": "2020-02-07T20:08:04.645177Z",
                "url": "https://files.pythonhosted.org/packages/68/25/ea5026d08f95296ef6b51167b3f263fb91022501a6bda78e98aaf0a655b3/torchrain-0.1.2.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "41cc09a531fb586c5baf2379df5ffd45",
                "sha256": "a849f0031ee01f33826eb7d5ec4007511e809c720bd5e4605360ddbee7df1307"
            },
            "downloads": -1,
            "filename": "torchrain-0.1.2.tar.gz",
            "has_sig": false,
            "md5_digest": "41cc09a531fb586c5baf2379df5ffd45",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 3067187,
            "upload_time": "2020-02-07T20:08:04",
            "upload_time_iso_8601": "2020-02-07T20:08:04.645177Z",
            "url": "https://files.pythonhosted.org/packages/68/25/ea5026d08f95296ef6b51167b3f263fb91022501a6bda78e98aaf0a655b3/torchrain-0.1.2.tar.gz"
        }
    ]
}