{
    "info": {
        "author": "Taylor Perkins",
        "author_email": "taylorperkins.dev@gmail.com",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "## PPoop\n**P**rocedural **P**rogramming for the **O**bject **O**riented **P**rogrammer\n\nFor those of you that love ETL programs, write feature engineering code for your data science model, or really just hate *main()* being longer than 10 lines of code..\nThis package may be for you.\nA typical PPoop-inspired workflow might look like the following::\n\n```python\nfrom ppoop import step, Piper\n\n\nclass ETL(Piper):\n\n    contexts = {\n        'sql_resource': {\n            'context': SQLHandler,\n            'dependencies': [url]\n        }\n    }\n\n    @step(1)\n    def get_data1(self):\n        data1 = get_data_from_resource_1(self.cms['sql_resource'], data1_args)\n        return transform_data1(data1)\n\n    @step(2)\n    def get_data2(self):\n        data2 = self.cms['sql_resource'].get_data_2()\n        return transform_data2(data2)\n\n    @step(3, refs=[1, 2])\n    def merge_datasets(self, ):\n        return merge_function(self.locals['data1'], self.locals['data1'])\n\n\nif __name__ == '__main__':\n    with ETL() as piper:\n        piper.run_steps()\n\n    print('All done!')\n```\n\n### The Pros\n\n* No more main()`.\n  `main()` can get pretty hefty and hard to test.\n  Cutting it out of the scenario removes this problem.\n\n* Handles resource context management.\n  This can be especially helpful when you have multiple resources, but don't want to worry about closing them when\n  exceptions are raised, or the process is finished.\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "http://pypi.python.org/pypi/PPoop/",
        "keywords": "",
        "license": "LICENSE.txt",
        "maintainer": "",
        "maintainer_email": "",
        "name": "PPoop",
        "package_url": "https://pypi.org/project/PPoop/",
        "platform": "",
        "project_url": "https://pypi.org/project/PPoop/",
        "project_urls": {
            "Homepage": "http://pypi.python.org/pypi/PPoop/"
        },
        "release_url": "https://pypi.org/project/PPoop/0.1.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "Procedural Programming for the Object Oriented Programmer.",
        "version": "0.1.0"
    },
    "last_serial": 5825914,
    "releases": {
        "0.1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2064d5e1219957e4787850af52780f67",
                    "sha256": "3d98a7d08c1503738543b32185d53a1e753375ce1c2d484dcf4ad50a42b2283d"
                },
                "downloads": -1,
                "filename": "PPoop-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2064d5e1219957e4787850af52780f67",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5497,
                "upload_time": "2019-09-13T14:16:58",
                "url": "https://files.pythonhosted.org/packages/60/4e/ac54415e9a9dc90d2b7b90763729dedc257f6a00285a97842e3e7692cd3f/PPoop-0.1.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8bab3adc6358968f586e87957033c8c1",
                    "sha256": "be0450844a4d4c600cb2f6810a0697eab0c0c36c5fd2465052b759180f3643e3"
                },
                "downloads": -1,
                "filename": "PPoop-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8bab3adc6358968f586e87957033c8c1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4167,
                "upload_time": "2019-09-13T14:17:00",
                "url": "https://files.pythonhosted.org/packages/89/1d/9cce3bf45bdf6813b5c06dddc807816e17ada4ed3035f5502098b2ca9166/PPoop-0.1.0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "2064d5e1219957e4787850af52780f67",
                "sha256": "3d98a7d08c1503738543b32185d53a1e753375ce1c2d484dcf4ad50a42b2283d"
            },
            "downloads": -1,
            "filename": "PPoop-0.1.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "2064d5e1219957e4787850af52780f67",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 5497,
            "upload_time": "2019-09-13T14:16:58",
            "url": "https://files.pythonhosted.org/packages/60/4e/ac54415e9a9dc90d2b7b90763729dedc257f6a00285a97842e3e7692cd3f/PPoop-0.1.0-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "8bab3adc6358968f586e87957033c8c1",
                "sha256": "be0450844a4d4c600cb2f6810a0697eab0c0c36c5fd2465052b759180f3643e3"
            },
            "downloads": -1,
            "filename": "PPoop-0.1.0.tar.gz",
            "has_sig": false,
            "md5_digest": "8bab3adc6358968f586e87957033c8c1",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 4167,
            "upload_time": "2019-09-13T14:17:00",
            "url": "https://files.pythonhosted.org/packages/89/1d/9cce3bf45bdf6813b5c06dddc807816e17ada4ed3035f5502098b2ca9166/PPoop-0.1.0.tar.gz"
        }
    ]
}