{
    "info": {
        "author": "Sandy Sun",
        "author_email": "sandys@evolvedigitallabs.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3"
        ],
        "description": "# campaign-qa\nBrado Internal Tool to make sure our paid media campaigns follow our campaign naming template.\n\n ![enter image description here](https://brado.net/wp-content/uploads/2019/03/logo-brado-solo-200w.png)\n\n# Steps:\n- Connect to the PostgreSQL database using given credentials and get a list of specific campaign names using **schema** and **table** names\n\n- Use gs2df package to get reference file uploaded on Google Sheets (***Campaign Naming Convention***) and run **campaignnaming-qa script** to check campaign names against rules \n\n- Upload failed campaign naming dataset to a new table (***Failed Campaign Name***) into database \n\n## Rules for Campaign Naming QA\n1. Make sure there are 10 underscores\n\n2. In sections that are not up to the creator (Product & Country), make sure they have the correct information. Ex. Channel needs to contain one of the following: SE, DN, PS, EM, YT, IR, APP.\n\n3. These are \"Non-Paid Social\" Campaigns. They should not contains \"PS\" or any Social Tactic/Engine.\n\n5. **New rules should always be updated into the Google Sheets file before check failed campaign names!**\n\n\n# Installation\n\nInstall the whole package \n```sh\n$ pip install cnqa\n```\n## Functions in package\n* [*conn2db*] - connect to datebase and download campaign naming report\n```sh\nfrom cnqa.dbconn import conn2db\n```\n* [*naming_qa*] - check each rule for campaign names and return failed campaign names \n```sh\n from cnqa.namingqa import naming_qa\n```\n* [*failed_naming*] - upload failed campaign names back to a new table in database \n ```sh\nfrom cnqa.dbconn import failed_naming\n```\n\n\n## Usage\n\n- Enter the schema and table name to download campaign name into dataframe using  ```conn2db.download(SCHEMA,TABLE) ```\n> Note: We may need a same template for table naming here and googleads-api. \n\n- Follow this [instruction](https://pygsheets.readthedocs.io/en/latest/authorization.html) to get a .json file and put it in the same directory with .py file\n\n- Upload the reference file in the Google Drive \n\n- Import reference excel from Google Sheets API using \n```a = gs2df.gs2df('client_secret_540551931166-21q6c10ctr74s4t9d83j1muknjvuoo69.apps.googleusercontent.com.json','Campaign Naming Convention')``` and reach different sheets using index ```a[0],a[1],...```\n > Note: **first parameter**: your own .json file, **second parameter**: Google Sheets Name \n\n- Enter the schema and table name again to get failed campaign names using \n```failed_df = naming_qa.CampaignQA.naming(naming_qa.CampaignQA.open_file(SCHEMA,TABLE))```\n\n- Create a new table called **Failed Campaign Name** and upload this dataset to new table using ```failed_naming.upload(failed_df)```\n> Note: Uploaded table will replace existing table every time.\n\n\n\n\n\n\n\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/pypa/sampleproject",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "cnqa",
        "package_url": "https://pypi.org/project/cnqa/",
        "platform": "",
        "project_url": "https://pypi.org/project/cnqa/",
        "project_urls": {
            "Homepage": "https://github.com/pypa/sampleproject"
        },
        "release_url": "https://pypi.org/project/cnqa/0.0.2/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "Brado Internal Tool to make sure our paid media campaigns follow our campaign naming template.",
        "version": "0.0.2"
    },
    "last_serial": 5601047,
    "releases": {
        "0.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "46d9aed08627edab3cb325dc5b9ce4b5",
                    "sha256": "879d17a7b43e1f39bd0776d7ee7d08f73e0743afe579544214aede56b753e503"
                },
                "downloads": -1,
                "filename": "cnqa-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "46d9aed08627edab3cb325dc5b9ce4b5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6069,
                "upload_time": "2019-06-28T20:21:42",
                "url": "https://files.pythonhosted.org/packages/bd/2e/d239ad9698a7e3e2ee7794271f3929b005d0841f496e7c71599253eec222/cnqa-0.0.1-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d7cd2bf2d08fc5990191c68b1f4ed351",
                    "sha256": "4ae9a1d72582711152e3feaa9681620c48528121781ea3e5424cd25f3b355bf5"
                },
                "downloads": -1,
                "filename": "cnqa-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "d7cd2bf2d08fc5990191c68b1f4ed351",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4563,
                "upload_time": "2019-06-28T20:21:44",
                "url": "https://files.pythonhosted.org/packages/90/c7/9ad129d031a6ccd83a3081b46b18e1799a1ab8948be831b6c4dd32b85cff/cnqa-0.0.1.tar.gz"
            }
        ],
        "0.0.2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c94729806d6c03880abd5ee8a98b3eba",
                    "sha256": "f2f61f472c095711a0ae83b878d6d861870bd02f07b0424593baf211365600bf"
                },
                "downloads": -1,
                "filename": "cnqa-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c94729806d6c03880abd5ee8a98b3eba",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6208,
                "upload_time": "2019-07-29T18:42:06",
                "url": "https://files.pythonhosted.org/packages/a0/0f/9a5ad89662ebaee4d73c05a7f549300b3c2276d726af2ef7161cb58d686c/cnqa-0.0.2-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "157012b02bad824e8f762b5e10d4fbdb",
                    "sha256": "7e43bdcb99b3e97b3f16324b9b544000e1f0f660def7ecaf50ab36919c510210"
                },
                "downloads": -1,
                "filename": "cnqa-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "157012b02bad824e8f762b5e10d4fbdb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4673,
                "upload_time": "2019-07-29T18:42:07",
                "url": "https://files.pythonhosted.org/packages/93/f1/781aa379a556ecb30258b6eca48a6d891151ca8ee4e6fa17ab3e4f8041b4/cnqa-0.0.2.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "c94729806d6c03880abd5ee8a98b3eba",
                "sha256": "f2f61f472c095711a0ae83b878d6d861870bd02f07b0424593baf211365600bf"
            },
            "downloads": -1,
            "filename": "cnqa-0.0.2-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "c94729806d6c03880abd5ee8a98b3eba",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 6208,
            "upload_time": "2019-07-29T18:42:06",
            "url": "https://files.pythonhosted.org/packages/a0/0f/9a5ad89662ebaee4d73c05a7f549300b3c2276d726af2ef7161cb58d686c/cnqa-0.0.2-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "157012b02bad824e8f762b5e10d4fbdb",
                "sha256": "7e43bdcb99b3e97b3f16324b9b544000e1f0f660def7ecaf50ab36919c510210"
            },
            "downloads": -1,
            "filename": "cnqa-0.0.2.tar.gz",
            "has_sig": false,
            "md5_digest": "157012b02bad824e8f762b5e10d4fbdb",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 4673,
            "upload_time": "2019-07-29T18:42:07",
            "url": "https://files.pythonhosted.org/packages/93/f1/781aa379a556ecb30258b6eca48a6d891151ca8ee4e6fa17ab3e4f8041b4/cnqa-0.0.2.tar.gz"
        }
    ]
}