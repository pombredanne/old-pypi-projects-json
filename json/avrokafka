{
    "info": {
        "author": "Dhia Abbassi",
        "author_email": "dhia.absi@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 4 - Beta",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: Apache Software License",
            "Natural Language :: English",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7",
            "Programming Language :: Python :: 3 :: Only",
            "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "description": "# avrokafka\n\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/avrokafka?color=blue&label=Python)](https://pypi.org/project/avrokafka/)\n[![Build Status](https://travis-ci.com/DhiaTN/avrokafka-py.svg?branch=master)](https://travis-ci.com/DhiaTN/avrokafka-py)\n[![Maintainability](https://api.codeclimate.com/v1/badges/cc863ec33bb0cdb7f515/maintainability)](https://codeclimate.com/github/DhiaTN/avrokafka-py/maintainability)\n[![codecov](https://codecov.io/gh/DhiaTN/avrokafka-py/branch/master/graph/badge.svg)](https://codecov.io/gh/DhiaTN/avrokafka-py)\n[![PyPI version](https://badge.fury.io/py/avrokafka.svg)](https://badge.fury.io/py/avrokafka)\n[![PyPI - License](https://img.shields.io/pypi/l/avrokafka?color=ff69b4&label=License)](https://opensource.org/licenses/Apache-2.0)\n-----------\nA schema-registry aware avro serde (serializer/deserializer) to work with Apache Kafka\n\n## Installation\n\n```shell script\npip install avrokafka\n```\n\n## Usage:\n\n> Check [examples](examples) for a full working demo.\n\n##### Consumer App Example:\n\n```python\nfrom kafka import KafkaConsumer\n\nfrom avrokafka.schema_registry import SchemaRegistry\nfrom avrokafka.schema_registry.auth import RegistryHTTPBasicAuth\nfrom avrokafka.serde import AvroKeyValueSerde\n\nKAFKA_TOPIC = \"avrokafka-example-topic\"\n\nregistry_client = SchemaRegistry(\n    \"https://myschemaregistry.com\",\n    RegistryHTTPBasicAuth(\"username\", \"password\"),\n    headers={\"Content-Type\": \"application/vnd.schemaregistry.v1+json\"},\n)\navroSerde = AvroKeyValueSerde(registry_client, KAFKA_TOPIC)\n\nconsumer = KafkaConsumer(\n    KAFKA_TOPIC,\n    group_id=\"random_group_id\",\n    bootstrap_servers=[\"localhost:9092\",]\n)\n\nfor msg in consumer:\n    v = avroSerde.value.deserialize(msg.value)\n    k = avroSerde.key.deserialize(msg.key)\n    print(msg.offset, msg.partition, k, v)\n```\n\n##### Producer App Example:\n\n```python\nfrom kafka import KafkaProducer\n\nfrom avrokafka.schema_registry import SchemaRegistry\nfrom avrokafka.schema_registry.auth import RegistryHTTPBasicAuth\nfrom avrokafka.serde import AvroKeyValueSerde\n\nKAFKA_TOPIC = \"avrokafka-example-topic\"\n\nregistry_client = SchemaRegistry(\n    \"https://myschemaregistry.com\",\n    RegistryHTTPBasicAuth(\"username\", \"password\"),\n    headers={\"Content-Type\": \"application/vnd.schemaregistry.v1+json\"},\n)\n\navroSerde = AvroKeyValueSerde(registry_client, KAFKA_TOPIC)\n\nproducer = KafkaProducer(bootstrap_servers=[\"localhost:9092\"])\nproducer.send(\n    KAFKA_TOPIC,\n    key=avroSerde.key.serialize({...}, key_schema),\n    value=avroSerde.value.serialize({...}, value_schema),\n)\n```\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/DhiaTN/avrokafka-py",
        "keywords": "avro,kafka,confluent,schema registry",
        "license": "Apache License 2.0",
        "maintainer": "",
        "maintainer_email": "",
        "name": "avrokafka",
        "package_url": "https://pypi.org/project/avrokafka/",
        "platform": "",
        "project_url": "https://pypi.org/project/avrokafka/",
        "project_urls": {
            "Homepage": "https://github.com/DhiaTN/avrokafka-py"
        },
        "release_url": "https://pypi.org/project/avrokafka/1.3.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "A schema-registry aware avro serde (serializer/deserializer) for Apache Kafka",
        "version": "1.3.0"
    },
    "last_serial": 6590580,
    "releases": {
        "1.3.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3d6067cad50529c547daf8550646a394",
                    "sha256": "144565fd07db4899dd60229a86bca300bec9cf7ec0b227975a67683942ff13dc"
                },
                "downloads": -1,
                "filename": "avrokafka-1.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3d6067cad50529c547daf8550646a394",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12509,
                "upload_time": "2020-02-07T18:02:40",
                "upload_time_iso_8601": "2020-02-07T18:02:40.697074Z",
                "url": "https://files.pythonhosted.org/packages/24/6c/b448cbd91d89502e42f07c7f5277cc9b43ad1ece78e8576969c2f950022e/avrokafka-1.3.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "72e2750823e6dcabfd14e848bfdc2142",
                    "sha256": "2621109b4d3d56a2873814453d452d7b6b9f2ff8b2c4a4e6a9d6ce110e667e61"
                },
                "downloads": -1,
                "filename": "avrokafka-1.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "72e2750823e6dcabfd14e848bfdc2142",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7287,
                "upload_time": "2020-02-07T18:02:41",
                "upload_time_iso_8601": "2020-02-07T18:02:41.842148Z",
                "url": "https://files.pythonhosted.org/packages/63/91/ecb2c2f4b89ea9f0cb9cc3bfd143ebe5c0978782fd35b8dadedb8df1e3fa/avrokafka-1.3.0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "3d6067cad50529c547daf8550646a394",
                "sha256": "144565fd07db4899dd60229a86bca300bec9cf7ec0b227975a67683942ff13dc"
            },
            "downloads": -1,
            "filename": "avrokafka-1.3.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "3d6067cad50529c547daf8550646a394",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 12509,
            "upload_time": "2020-02-07T18:02:40",
            "upload_time_iso_8601": "2020-02-07T18:02:40.697074Z",
            "url": "https://files.pythonhosted.org/packages/24/6c/b448cbd91d89502e42f07c7f5277cc9b43ad1ece78e8576969c2f950022e/avrokafka-1.3.0-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "72e2750823e6dcabfd14e848bfdc2142",
                "sha256": "2621109b4d3d56a2873814453d452d7b6b9f2ff8b2c4a4e6a9d6ce110e667e61"
            },
            "downloads": -1,
            "filename": "avrokafka-1.3.0.tar.gz",
            "has_sig": false,
            "md5_digest": "72e2750823e6dcabfd14e848bfdc2142",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 7287,
            "upload_time": "2020-02-07T18:02:41",
            "upload_time_iso_8601": "2020-02-07T18:02:41.842148Z",
            "url": "https://files.pythonhosted.org/packages/63/91/ecb2c2f4b89ea9f0cb9cc3bfd143ebe5c0978782fd35b8dadedb8df1e3fa/avrokafka-1.3.0.tar.gz"
        }
    ]
}