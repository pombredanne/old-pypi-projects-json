{
    "info": {
        "author": "Guild AI",
        "author_email": "packages@guild.ai",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "\n\nModels\n######\n\nslim-inception-resnet-v2\n########################\n\n*Inception ResNet v2 classifier for TF-Slim*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained Inception ResNet v2 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a Inception ResNet v2 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a Inception ResNet v2 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a Inception ResNet v2 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and Inception ResNet v2 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a Inception ResNet v2 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_resnet_v2.py\n- http://arxiv.org/abs/1602.07261\n\nslim-inception-v1\n#################\n\n*Inception v1 classifier for TF-Slim*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained Inception v1 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a Inception v1 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a Inception v1 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a Inception v1 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and Inception v1 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a Inception v1 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v1.py\n- http://arxiv.org/pdf/1409.4842v1.pdf\n\nslim-inception-v2\n#################\n\n*Inception v2 classifier for TF-Slim*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained Inception v2 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a Inception v2 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a Inception v2 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a Inception v2 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and Inception v2 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a Inception v2 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v2.py\n- http://arxiv.org/abs/1502.03167\n\nslim-inception-v3\n#################\n\n*Inception v3 classifier for TF-Slim*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained Inception v3 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a Inception v3 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a Inception v3 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a Inception v3 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and Inception v3 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a Inception v3 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v3.py\n- http://arxiv.org/abs/1512.00567\n\nslim-inception-v4\n#################\n\n*Inception v4 classifier for TF-Slim*\n\nOperations\n==========\n\nevaluate\n^^^^^^^^\n\n*Evaluate a trained Inception v4 model*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-\n             images:prepare\n\n  *\n\n**max-batches**\n  *Maximum number of batches to evaluate (default is all)*\n\nexport\n^^^^^^\n\n*Generate a Inception v4 graph def*\n\nFlags\n-----\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-custom-images:prepare\n\n  *\n\nfinetune\n^^^^^^^^\n\n*Fine tune a Inception v4 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nfreeze\n^^^^^^\n\n*Generate a Inception v4 graph def with checkpoint weights*\n\npredict\n^^^^^^^\n\n*Use TensorFlow label_image and Inception v4 to classify an image*\n\nFlags\n-----\n\n**dataset**\n  *Dataset name to use for labels and image transformation (required)\n\n  Choices:\n    cifar10\n    mnist\n    flowers\n    imagenet\n    custom\n\n  *\n\n**image**\n  *Path to the input image (required)*\n\n**input-mean**\n  *Image mean to apply to the image*\n\n**input-std**\n  *Image std deviation to apply to the image (default is 1.0)*\n\ntrain\n^^^^^\n\n*Train a Inception v4 model*\n\nFlags\n-----\n\n**batch-size**\n  *Number of samples in each batch (default is 32)*\n\n**checkpoint**\n  *Run ID or path to checkpoint to resume training from.*\n\n**dataset**\n  *Dataset to train with (cifar10, mnist, flowers, custom) (required)\n\n  Choices:\n    cifar10  CIFAR-10 images\n    mnist    MNIST digits images\n    flowers  Flickr sample flower images\n    custom   Image dataset prepared using slim-\n             custom-images:prepare\n\n  *\n\n**learning-rate**\n  *Initial learning rate (default is 0.01)*\n\n**learning-rate-decay-type**\n  *How the learning rate is decayed (default is 'exponential')\n\n  Choices:\n    fixed\n    exponential\n    polynomial\n\n  *\n\n**log-every-n-steps**\n  *Steps between status updates (default is 100)*\n\n**max-steps**\n  *Maximum number of training steps (default is 1000)*\n\n**optimizer**\n  *Training optimizer (adadelta, adagrad, adam, ftrl, momentum, sgd,\n  rmsprop) (default is 'rmsprop')\n\n  Choices:\n    adadelta\n    adagrad\n    adam\n    ftrl\n    momentum\n    sgd\n    rmsprop\n\n  *\n\n**save-model-secs**\n  *Seconds between model saves (default is 60)*\n\n**save-summaries-secs**\n  *Seconds between summary saves (default is 60)*\n\n**weight-decay**\n  *Weight decay on the model weights (default is 4e-05)*\n\nReferences\n==========\n\n- https://github.com/tensorflow/models/blob/master/research/slim/nets/inception_v4.py\n- http://arxiv.org/abs/1602.07261\n\n\n",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/guildai/index/tree/master/slim/inception",
        "keywords": "inception images model",
        "license": "Apache 2.0",
        "maintainer": "",
        "maintainer_email": "",
        "name": "gpkg.slim.inception",
        "package_url": "https://pypi.org/project/gpkg.slim.inception/",
        "platform": "",
        "project_url": "https://pypi.org/project/gpkg.slim.inception/",
        "project_urls": {
            "Homepage": "https://github.com/guildai/index/tree/master/slim/inception"
        },
        "release_url": "https://pypi.org/project/gpkg.slim.inception/0.4.1/",
        "requires_dist": [
            "gpkg.slim.datasets (>=0.3.1.dev1)",
            "gpkg.slim (>=0.3.1.dev1)"
        ],
        "requires_python": "",
        "summary": "TF-Slim Inception models (v1, v2, v3, v4, and Inception ResNet v2)",
        "version": "0.4.1"
    },
    "last_serial": 4105769,
    "releases": {
        "0.1.0.dev1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "377c2accbc148a308b5bbbabb7a18d0b",
                    "sha256": "235783132c6626db125e092627fa32000c7561783c1d766759da0cd90a64fd62"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.1.0.dev1-py2.py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "377c2accbc148a308b5bbbabb7a18d0b",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 7508,
                "upload_time": "2017-11-22T21:59:43",
                "url": "https://files.pythonhosted.org/packages/16/d4/c1780284218839c949277021328e773e42cd691c5605257059e1bfbea252/gpkg.slim.inception-0.1.0.dev1-py2.py3-none-any.whl"
            }
        ],
        "0.1.0.dev2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8068fa2e2d177816fe80548562966877",
                    "sha256": "77938d4c61af7377066ae31eb832111440c6d12672fe267154b7f5fc631a8e90"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.1.0.dev2-py2.py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "8068fa2e2d177816fe80548562966877",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 8000,
                "upload_time": "2017-11-26T00:20:21",
                "url": "https://files.pythonhosted.org/packages/a5/4c/1091bbd419650780e28bc62fd5fe1e528eba08c5d1ecf2f0a60f78856cb0/gpkg.slim.inception-0.1.0.dev2-py2.py3-none-any.whl"
            }
        ],
        "0.1.0.dev3": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f9c43faeb0867b4a1e849d96d4fecfa3",
                    "sha256": "ede3724f4c81acbd3d880f1801f169b5b23328049979d07f869950896abf4d2d"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.1.0.dev3-py2.py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "f9c43faeb0867b4a1e849d96d4fecfa3",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 8010,
                "upload_time": "2017-11-26T00:22:04",
                "url": "https://files.pythonhosted.org/packages/b8/17/a43ef11430b3be8d493151ac14cf5eb69a523630e848f90391fa14477a74/gpkg.slim.inception-0.1.0.dev3-py2.py3-none-any.whl"
            }
        ],
        "0.1.0.dev4": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "43be1874f39b026932660fa8022e6f5a",
                    "sha256": "2e2b9b3aaaee833562f5e4b9e382d05a90facb01509fda02a04d2a9178cac20c"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.1.0.dev4-py2.py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "43be1874f39b026932660fa8022e6f5a",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 8010,
                "upload_time": "2017-11-26T01:00:28",
                "url": "https://files.pythonhosted.org/packages/0b/58/0b6f34f83131b43d936c8e1f14a50747adba496c2dc34c13ac0762dd1475/gpkg.slim.inception-0.1.0.dev4-py2.py3-none-any.whl"
            }
        ],
        "0.1.0.dev5": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a2be1bc62b74acd96c1d72cba052a839",
                    "sha256": "8300a5a08d6d7249d31ee7b202e70f5ef42f63f8fc86ff7dca5a799ca10ef7c2"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.1.0.dev5-py2.py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "a2be1bc62b74acd96c1d72cba052a839",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 8521,
                "upload_time": "2017-11-27T18:54:10",
                "url": "https://files.pythonhosted.org/packages/e0/52/ce97238ed7b68f63d001827e3431206deb952036801c40bcece4e235c2bf/gpkg.slim.inception-0.1.0.dev5-py2.py3-none-any.whl"
            }
        ],
        "0.3.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6f53648f5a982b95c032d84c2612fa5c",
                    "sha256": "f7a1f6127c81e571427441624e7b56e44d3f980435ef43465d54c49f80366347"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.3.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6f53648f5a982b95c032d84c2612fa5c",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 7119,
                "upload_time": "2018-03-12T02:28:56",
                "url": "https://files.pythonhosted.org/packages/98/c0/2653f625be32113a14d9a55565bd6d1ddecb43f97f4383ef983b1cde6ff7/gpkg.slim.inception-0.3.0-py2.py3-none-any.whl"
            }
        ],
        "0.3.0.dev10": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f9c2914eac808c5267c16aabc64998dc",
                    "sha256": "c8d73f170e258831bc40dc66e66b5194a33142f8d1d16c590c84b36679fa4124"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.3.0.dev10-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f9c2914eac808c5267c16aabc64998dc",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6821,
                "upload_time": "2018-03-05T00:59:02",
                "url": "https://files.pythonhosted.org/packages/b7/41/c3f9a6d52695990abe7f209ffbf1afb5130b654264b14aecc214d6735a8a/gpkg.slim.inception-0.3.0.dev10-py2.py3-none-any.whl"
            }
        ],
        "0.3.0.dev9": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "debb2ad44963ae754c6ff5f4e4c29f1d",
                    "sha256": "bd547506764a98f268d459a5aecbe2a62f8e12f62f1d5d734375419598130bd5"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.3.0.dev9-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "debb2ad44963ae754c6ff5f4e4c29f1d",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 6806,
                "upload_time": "2018-03-05T00:57:18",
                "url": "https://files.pythonhosted.org/packages/d2/b4/953fd1d8d1d8355311ce0dc9b411f606685daf0837e735c21eb475c6b0b8/gpkg.slim.inception-0.3.0.dev9-py2.py3-none-any.whl"
            }
        ],
        "0.3.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "58730038b570aa280f199dbc03334052",
                    "sha256": "b8e0c3d44bbb3b85aab2ea46173d64085e91e1011a5041abe614b991b7b07c78"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.3.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "58730038b570aa280f199dbc03334052",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 7108,
                "upload_time": "2018-03-28T12:20:56",
                "url": "https://files.pythonhosted.org/packages/f2/4e/ac3c1a9c24588339e1673d30009419fd93ea5a9ca1544c7504899bd85ea8/gpkg.slim.inception-0.3.1-py2.py3-none-any.whl"
            }
        ],
        "0.3.1.dev1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eb7d2a124156a3dbc15a4984c049864f",
                    "sha256": "d92a277cd31268480d5ec4c0be2aa73ba22f985ee69cb0164c893a2f65525c35"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.3.1.dev1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eb7d2a124156a3dbc15a4984c049864f",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 7201,
                "upload_time": "2018-03-20T14:35:18",
                "url": "https://files.pythonhosted.org/packages/fb/ed/d33c6b6431f64c443fc9bfc98908b8ec5e657d71e469335c9835b8ec34ac/gpkg.slim.inception-0.3.1.dev1-py2.py3-none-any.whl"
            }
        ],
        "0.4.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "625298f69c76e52595848a06fd942c49",
                    "sha256": "419966709f31c8a5000a1f6647a190d4f8877cb1dae42e0c7e55e79efdb4cd44"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.4.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "625298f69c76e52595848a06fd942c49",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 5622,
                "upload_time": "2018-07-26T17:52:35",
                "url": "https://files.pythonhosted.org/packages/3e/84/24dca9da79b19b1892251f5f8002ea7b5364d3c24a4c2a003a2e682425c1/gpkg.slim.inception-0.4.0-py2.py3-none-any.whl"
            }
        ],
        "0.4.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9858724470935b78f83aef8fb0bb7451",
                    "sha256": "9a2b14a4754c4c0619f8ef4e9b48aefa17b21b58374df172576af4f145296511"
                },
                "downloads": -1,
                "filename": "gpkg.slim.inception-0.4.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9858724470935b78f83aef8fb0bb7451",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 5620,
                "upload_time": "2018-07-26T18:06:01",
                "url": "https://files.pythonhosted.org/packages/7f/3f/58b07c3984213322107d860260a6b2626f9bbbb3e0fb9855c50966c2e8d7/gpkg.slim.inception-0.4.1-py2.py3-none-any.whl"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "9858724470935b78f83aef8fb0bb7451",
                "sha256": "9a2b14a4754c4c0619f8ef4e9b48aefa17b21b58374df172576af4f145296511"
            },
            "downloads": -1,
            "filename": "gpkg.slim.inception-0.4.1-py2.py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "9858724470935b78f83aef8fb0bb7451",
            "packagetype": "bdist_wheel",
            "python_version": "py2.py3",
            "requires_python": null,
            "size": 5620,
            "upload_time": "2018-07-26T18:06:01",
            "url": "https://files.pythonhosted.org/packages/7f/3f/58b07c3984213322107d860260a6b2626f9bbbb3e0fb9855c50966c2e8d7/gpkg.slim.inception-0.4.1-py2.py3-none-any.whl"
        }
    ]
}