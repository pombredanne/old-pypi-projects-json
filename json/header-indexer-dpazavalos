{
    "info": {
        "author": "Daniel Paz Avalos",
        "author_email": "author@example.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3"
        ],
        "description": "# HeaderIndexer\nA simple system to create a dictionary containing given keys to needed header column indexes\n\nIn order to facilitate easier spreadsheet parsing, this module aims to simplify the process of \nindexing columns by their headers. This module finds particular use in situations where spreadsheet\n column orders are inconsistent.\n\n## Installation\n\n```\npip install headerindexer\n```\n\n## Using HeaderIndexer\n\n\nAssume we're using a spreadsheet with the following header format:\n```python\n[\"Date\", \"Status\", \"TrackingID\", \"VulnTitle\", \"DNSHostname\", \"OperatingSystem\"]\n```\n\nProvide HeaderIndexer a dictionary like so\n\n```python\nheaders_dict = {\n#   reference       Header name\n    \"hostname\":     \"DNSHostname\",\n    \"stat\":         \"Status\"\n}\n```\n\nHeaderIndexer will compare the given dictionary against the above header row, converting the\ndictionary's values into the actual column indexes. The returned dictionary can be used to \nreliably call on the appropriate column by given keys (\"hostname\") \neven if later formats shuffle columns\n\nIn situations where header names alter (\"DNSHostname\" becomes \"Server Hostname\") the only \nadjustment needed is in the headers_dict value section.\n\n\n### HeaderIndexer options\n\nHeaderIndexer has a small set of options to fine tune it to your needs. Below are the default \nsettings and their purposes\n\n```python\nraise_error = False\n\"\"\"Raise ValueError If any non_indexed or duplicate headers are found. If true, no query to fix \nand nothing will return\"\"\"\n\nreturn_affected = False\n\"\"\"If true, Returns a Tuple[dict] (ndx_calc, non_indexed, duplicates)\nIf false, returns only the new ndx_calc dictionary\"\"\"\n\ncheck_nonindexed = True\n\"\"\"Gathers non_indexed headers into Dict[str, int]. \"\"\"\n\ncheck_duplicates = False\n\"\"\"Gathers duplicate headers into Dict[str, int]\"\"\"\n\nprompt_fix = True\n\"\"\"Call single stage menu to fix non indexed headers by Id-ing proper headers\nNote, at this time it does not check for duplicate headers\"\"\"\n```\n\n### Prompt Fix\n\nThere are three inevitabilities in life: death, taxes, and something won't work. HeaderIndexer \ntries to help with the last\n\nif prompt_fix = True, HeaderIndexer prompts if you wish to manually identify any nonindexed headers.\nIf yes, key calls will prompt with headers for you to manually assign. From the menu you can ID\nthe proper header, mark as not found (enters into non_indexed and returns in tuple \n(if return_affected)), or simply leave the value as None.  \n\n### Sample code\n\n```python\nfrom headerindexer import HeaderIndexer\n\nindexer = HeaderIndexer(prompt_fix=True, return_affected=False).run\nspreadsheet = [\"Date\", \"Status\", \"TrackingID\", \"Title\", \"DNSHostname\"]\nheaders_dict = {\n    \"hostname\":     \"DNSHostname\",\n    \"track\":        \"1TrackingID1\",\n    \"OS\":           \"1OperatingSystem\",\n    \"hostname2\":    \"1DNSHostname\"\n}\nndx_calc = indexer(sheet_headers=spreadsheet, head_names=headers_dict)\n\nprint(ndx_calc)\n```\n\n### Finally...\nI am as open as the Texan sky when it comes to issues, comments, and concerns. Feel free to raise \ngithub issues or branch if desired. \n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/dpazavalos/Header-Indexer",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "header-indexer-dpazavalos",
        "package_url": "https://pypi.org/project/header-indexer-dpazavalos/",
        "platform": "",
        "project_url": "https://pypi.org/project/header-indexer-dpazavalos/",
        "project_urls": {
            "Homepage": "https://github.com/dpazavalos/Header-Indexer"
        },
        "release_url": "https://pypi.org/project/header-indexer-dpazavalos/0.1.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "A system to create a dict containing given keys to needed header column indexes",
        "version": "0.1.0"
    },
    "last_serial": 4822883,
    "releases": {
        "0.1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e57e06b89ef49585fce2b8363b7d1370",
                    "sha256": "0fcc2702d1d525b3cb1f959b23b5eec64f33f001cae1693cfd90d501fad6957f"
                },
                "downloads": -1,
                "filename": "header_indexer_dpazavalos-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e57e06b89ef49585fce2b8363b7d1370",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22007,
                "upload_time": "2019-02-15T01:54:39",
                "url": "https://files.pythonhosted.org/packages/8c/14/6763a8b6bd614abc2a1857360848a5ab047c4cf0f6355628e0621c8c22f4/header_indexer_dpazavalos-0.1.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "13511d2cd60c27600d65a15101d4d3e9",
                    "sha256": "b9d12710805489d346f178582dae2c70184d35bba6c2c7d9f0afa18cfec008c2"
                },
                "downloads": -1,
                "filename": "header-indexer-dpazavalos-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "13511d2cd60c27600d65a15101d4d3e9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12311,
                "upload_time": "2019-02-15T01:54:41",
                "url": "https://files.pythonhosted.org/packages/3f/da/fe1f2ce990e7ded832111e7e8f2ef55442999a7b20203c9a46b8fbc284e1/header-indexer-dpazavalos-0.1.0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "e57e06b89ef49585fce2b8363b7d1370",
                "sha256": "0fcc2702d1d525b3cb1f959b23b5eec64f33f001cae1693cfd90d501fad6957f"
            },
            "downloads": -1,
            "filename": "header_indexer_dpazavalos-0.1.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "e57e06b89ef49585fce2b8363b7d1370",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 22007,
            "upload_time": "2019-02-15T01:54:39",
            "url": "https://files.pythonhosted.org/packages/8c/14/6763a8b6bd614abc2a1857360848a5ab047c4cf0f6355628e0621c8c22f4/header_indexer_dpazavalos-0.1.0-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "13511d2cd60c27600d65a15101d4d3e9",
                "sha256": "b9d12710805489d346f178582dae2c70184d35bba6c2c7d9f0afa18cfec008c2"
            },
            "downloads": -1,
            "filename": "header-indexer-dpazavalos-0.1.0.tar.gz",
            "has_sig": false,
            "md5_digest": "13511d2cd60c27600d65a15101d4d3e9",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 12311,
            "upload_time": "2019-02-15T01:54:41",
            "url": "https://files.pythonhosted.org/packages/3f/da/fe1f2ce990e7ded832111e7e8f2ef55442999a7b20203c9a46b8fbc284e1/header-indexer-dpazavalos-0.1.0.tar.gz"
        }
    ]
}