{
    "info": {
        "author": "AlexEidt",
        "author_email": "alex.eidt@outlook.com",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "# GeoVision\n\nAccurately geocode between coordinates, addresses and plus codes for ANY location on earth (whether it has a formal address or not) WITHOUT an API-Key.\n\n<br/>\n\nMade during [**DubHacks Autumn 2019**](https://dubhacks.co/)\n\n## Installation\n\n```\npip install geovision\n```\n\nA [Chrome Driver](https://chromedriver.chromium.org/) (Version 76) is also required and must be added to your system PATH. \n\n\n<br/>\n\nPython has a lot of good geocoders, and most rely on external API keys to gather their data. The concept for this geocoder is somewhat the same, but also somewhat different than this philosophy. **Plus Codes** are one of the most recent additions to cartography. A Plus Code is like an address, but is different in that literally any location on earth has one. This makes them incredibly helpful and inclusive because people without an address can now indicate a legitimate place of residece. The website [plus.codes](https://plus.codes) features a map that allows you to search any location on earth for a plus code, address or coordinate. *GeoVision* takes advantage of this and uses this resource to make this information accessible to Python Programmers as an API. Some examples of Plus Codes are shown below.\n\n<br/>\n\nLocation | Plus Code | Address | Coordinates\n--- | --- | --- | ---\nUW Smith Hall | 84VVMM4R+HX | 1911 Skagit Ln, Seattle, WA 98105, USA | 47.656437,-122.307563\nSignal Iduna Park | 9F39FFV2+2P | Strobelallee 50, 44139 Dortmund, Germany | 51.492562,7.451812\n\n<br/>\n\nBecause Plus Codes do not need an address, this Geocoder and go to many more places than most other ones. A prime example of this is buildings on University Campuses. There are often no streets in the middle of large University Campuses and therefore no street to give each building a unique address. Other geocoders may give you the same address for multiple buildings. *GeoVision*, however, easily tracks down these points to give you accurate information on coordinates and plus codes for even the most obscure places.\n\n<br/>\n\n*GeoVision* is not limited to broadly-termed keyword searches, you can also search for coordinates, plus codes and addresses to get the information you need from. \n\n## Note\n\nSearching for a Country Name (i.e Germany), City Name (i.e Seattle) or any other excessively broad keyword will not yield any results other than perhaps some coordinates. There is a requisite level of specificity for *GeoVision* to work.\n\n# Documentation\n\n## `GeoVision`\n\n`GeoVision` Objects hold all information for any location geocoded by the user. Information can easily be accessed individually or as a dictionary/list.\n\n## `Geocoder`\n\n`Geocoder` Objects can store GeoVision Objects for easy reference and management.\n\n## `geocode`\n\n`geocode` is a method that takes a string or a list of strings representing all the locations you'd like to search for as a parameter. Multi-Threading is included for better performance, so if you have many locations to geocode, pass that list into the `geocode` method rather than running `geocode` in a loop. The `geocode` method returns a `GeoVision` Object.\n\n***\n\n```python\n# GeoVision Objects and geocode method\nfrom geovision import geocode\n\n# Get location data for 'Signal Iduna Park` in a GeoVision Object\ng = geocode('Signal Iduna Park')\n\n# geocode will return a list of GeoVision Objects. If only one location was\n# passed in, a list of length 1 with the corresponding GeoVision Object will be returned.\n\ng.locality # = Dortmund, Germany\ng.country # = Germany\ng.area_code # = 9F39\ng.local_code # = FFV2+2P\ng.plus_code # = 9F39FFV2+2P\ng.address # = Strobelallee 50, 44139 Dortmund, Germany\ng.coordinates # = (51.492562, 7.451812)\ng.latitude # = 51.492562\ng.longitude # = 7.451812\n```\n\n***\n\n```python\n# Geocoder Objects\nfrom geovision import Geocoder\n\ng = Geocoder()\ng.geocode('Signal Iduna Park')\ng.to_dict()\n\"\"\"\n{'Signal Iduna Park': {'locality': 'Dortmund, Germany', 'country': 'Germany', 'area_code': '9F39', 'local_code': 'FFV2+2P', 'plus_code': '9F39FFV2+2P', 'address': 'Strobelallee 50, 44139 Dortmund, Germany', 'coordinates': (51.492562, 7.451812), 'latitude': 51.492562, 'longitude': 7.451812}}\n\"\"\"\n```\n\n# Dependencies\n\n* [Python 3.7+](https://www.python.org/)\n* [Selenium](https://www.seleniumhq.org/)\n* [Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\n* [Chrome Driver](https://chromedriver.chromium.org/)\n\n\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://upload.pypi.org/legacy/",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "geovision",
        "package_url": "https://pypi.org/project/geovision/",
        "platform": "",
        "project_url": "https://pypi.org/project/geovision/",
        "project_urls": {
            "Homepage": "https://upload.pypi.org/legacy/"
        },
        "release_url": "https://pypi.org/project/geovision/0.1.7/",
        "requires_dist": [
            "beautifulsoup4",
            "selenium"
        ],
        "requires_python": ">=3.7",
        "summary": "Accurately geocode between coordinates, addresses and plus codes for any location on earth without an API-Key.",
        "version": "0.1.7"
    },
    "last_serial": 5969520,
    "releases": {
        "0.1.7": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0b6116279a4aaf476d280d97e3504323",
                    "sha256": "02ed3cdec2745f4521c169519f2a4898d81d4dc05ff81f9a9dcb18260764d6cb"
                },
                "downloads": -1,
                "filename": "geovision-0.1.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0b6116279a4aaf476d280d97e3504323",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 6480,
                "upload_time": "2019-10-14T02:35:06",
                "upload_time_iso_8601": "2019-10-14T02:35:06.575894Z",
                "url": "https://files.pythonhosted.org/packages/17/a2/c0fa72c3f9a8dd0897cffdc6f707e6e03d86256387db2fa21ac76ff19dfb/geovision-0.1.7-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "eb0e9894a43d67d4b5790b1f3fb71c9c",
                    "sha256": "733a8d9fc817b627d23c682615ee24a3c57ed8f67f4f9e6996ad38c2968c1922"
                },
                "downloads": -1,
                "filename": "geovision-0.1.7.tar.gz",
                "has_sig": false,
                "md5_digest": "eb0e9894a43d67d4b5790b1f3fb71c9c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5281,
                "upload_time": "2019-10-14T02:35:08",
                "upload_time_iso_8601": "2019-10-14T02:35:08.330717Z",
                "url": "https://files.pythonhosted.org/packages/18/b9/8dedba472f3552817607a4e6c34dbf68cf1c5317407617dbb689fbf3e0e7/geovision-0.1.7.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "0b6116279a4aaf476d280d97e3504323",
                "sha256": "02ed3cdec2745f4521c169519f2a4898d81d4dc05ff81f9a9dcb18260764d6cb"
            },
            "downloads": -1,
            "filename": "geovision-0.1.7-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "0b6116279a4aaf476d280d97e3504323",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": ">=3.7",
            "size": 6480,
            "upload_time": "2019-10-14T02:35:06",
            "upload_time_iso_8601": "2019-10-14T02:35:06.575894Z",
            "url": "https://files.pythonhosted.org/packages/17/a2/c0fa72c3f9a8dd0897cffdc6f707e6e03d86256387db2fa21ac76ff19dfb/geovision-0.1.7-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "eb0e9894a43d67d4b5790b1f3fb71c9c",
                "sha256": "733a8d9fc817b627d23c682615ee24a3c57ed8f67f4f9e6996ad38c2968c1922"
            },
            "downloads": -1,
            "filename": "geovision-0.1.7.tar.gz",
            "has_sig": false,
            "md5_digest": "eb0e9894a43d67d4b5790b1f3fb71c9c",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": ">=3.7",
            "size": 5281,
            "upload_time": "2019-10-14T02:35:08",
            "upload_time_iso_8601": "2019-10-14T02:35:08.330717Z",
            "url": "https://files.pythonhosted.org/packages/18/b9/8dedba472f3552817607a4e6c34dbf68cf1c5317407617dbb689fbf3e0e7/geovision-0.1.7.tar.gz"
        }
    ]
}