{
    "info": {
        "author": "Christian Safka",
        "author_email": "christiansafka@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Programming Language :: Python :: 3.6"
        ],
        "description": "# Image 2 Vec with PyTorch\n\nMedium post on building the first version from scratch:  https://becominghuman.ai/extract-a-feature-vector-for-any-image-with-pytorch-9717561d1d4c\n\n### Applications of image embeddings:\n - Ranking for recommender systems\n - Clustering images to different categories\n - Classification tasks\n\n## Available models\n - Resnet-18 (CPU, GPU)\n \t- Returns vector length 512\n - Alexnet (CPU, GPU)\n \t- Returns vector length 4096\n\n## Installation\n\nTested on Python 3.6\n\n#### Dependencies\n\nPytorch: http://pytorch.org/\n\nPillow:  ```pip install Pillow```\n\n##### For running the example, you will additionally need:\n * Sklearn ```pip install scikit-learn```\n\n## Running the example\n```git clone https://github.com/christiansafka/img2vec.git```\n\n```cd img2vec/example```\n\n```python test_img_to_vec.py```\n\n#### Expected output\n```\nWhich filename would you like similarities for?\ncat.jpg\n0.72832 cat2.jpg\n0.641478 catdog.jpg\n0.575845 face.jpg\n0.516689 face2.jpg\n\nWhich filename would you like similarities for?\nface2.jpg\n0.668525 face.jpg\n0.516689 cat.jpg\n0.50084 cat2.jpg\n0.484863 catdog.jpg\n```\nTry adding your own photos!\n\n## Using img2vec as a library\n```python\nfrom img_to_vec import Img2Vec\nfrom PIL import Image\n\n# Initialize Img2Vec with GPU\nimg2vec = Img2Vec(cuda=True)\n\n# Read in an image\nimg = Image.open('test.jpg')\n# Get a vector from img2vec\nvec = img2vec.get_vec(img)\n# Or submit a list\nvectors = img2vec.get_vec(list_of_PIL_images)\n```\n#### Img2Vec Params\n**cuda** = (True, False) &nbsp; # Run on GPU? &nbsp; &nbsp; default: False<br>\n**model** = ('resnet-18', 'alexnet') &nbsp; # Which model to use? &nbsp; &nbsp; default: 'resnet-18'<br>\n\n## Advanced users \n----\n### Additional Parameters\n\n**layer** = 'layer_name' or int &nbsp; # For advanced users, which layer of the model to extract the output from.&nbsp;&nbsp; default: 'avgpool' <br>\n**layer_output_size** = int &nbsp; # Size of the output of your selected layer\n\n### [Resnet-18](http://pytorch-zh.readthedocs.io/en/latest/_modules/torchvision/models/resnet.html)\nDefaults: (layer = 'avgpool', layer_output_size = 512)<br>\nLayer parameter must be an string representing the name of a  layer below\n```python\nconv1 = nn.Conv2d(3, 64, kernel_size=7, stride=2, padding=3, bias=False)\nbn1 = nn.BatchNorm2d(64)\nrelu = nn.ReLU(inplace=True)\nmaxpool = nn.MaxPool2d(kernel_size=3, stride=2, padding=1)\nlayer1 = self._make_layer(block, 64, layers[0])\nlayer2 = self._make_layer(block, 128, layers[1], stride=2)\nlayer3 = self._make_layer(block, 256, layers[2], stride=2)\nlayer4 = self._make_layer(block, 512, layers[3], stride=2)\navgpool = nn.AvgPool2d(7)\nfc = nn.Linear(512 * block.expansion, num_classes)\n```\n### [Alexnet](http://pytorch-zh.readthedocs.io/en/latest/_modules/torchvision/models/alexnet.html)\nDefaults: (layer = 2, layer_output_size = 4096)<br>\nLayer parameter must be an integer representing one of the layers below\n```python\nalexnet.classifier = nn.Sequential(\n            7. nn.Dropout(),                  < - output_size = 9216\n            6. nn.Linear(256 * 6 * 6, 4096),  < - output_size = 4096\n            5. nn.ReLU(inplace=True),         < - output_size = 4096\n            4. nn.Dropout(),\t\t      < - output_size = 4096\n            3. nn.Linear(4096, 4096),\t      < - output_size = 4096\n            2. nn.ReLU(inplace=True),         < - output_size = 4096\n            1. nn.Linear(4096, num_classes),  < - output_size = 4096\n        )\n```\n\n## To-do\n- Benchmark speed and accuracy\n- Add ability to fine-tune on input data\n- Export documentation to a normal place\n- Package for Pip",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/christiansafka/img2vec",
        "keywords": "img2vec image vector classification pytorch convert",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "img-vector",
        "package_url": "https://pypi.org/project/img-vector/",
        "platform": "",
        "project_url": "https://pypi.org/project/img-vector/",
        "project_urls": {
            "Homepage": "https://github.com/christiansafka/img2vec"
        },
        "release_url": "https://pypi.org/project/img-vector/0.2.4/",
        "requires_dist": null,
        "requires_python": ">=3.6",
        "summary": "Use pre-trained models in PyTorch to extract vector embeddings for any image",
        "version": "0.2.4"
    },
    "last_serial": 5948942,
    "releases": {
        "0.2.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "99b53a3adf361cf2e31b4232e63f41f2",
                    "sha256": "5246dab9f6b0296c2dfe3074d334f0d29ae03260fc12149af22c8c21c643368d"
                },
                "downloads": -1,
                "filename": "img-vector-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "99b53a3adf361cf2e31b4232e63f41f2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 3077,
                "upload_time": "2019-10-09T10:00:53",
                "url": "https://files.pythonhosted.org/packages/98/6b/ee8cf3ddb2b5ce24159be1673695fef21ed98ec0ff3fffc18801e0d7d5df/img-vector-0.2.1.tar.gz"
            }
        ],
        "0.2.2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5564b446eae8960d79ac54cdfbed5de1",
                    "sha256": "cc484e3617d0b6c71e3962b6cf3e1430b8d4867f43bf906a2d473eb737d48a50"
                },
                "downloads": -1,
                "filename": "img-vector-0.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "5564b446eae8960d79ac54cdfbed5de1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 3018,
                "upload_time": "2019-10-09T10:05:20",
                "url": "https://files.pythonhosted.org/packages/5e/bd/588bd26e8b8d37b4dd1d1b69e1ff33d3bae90e7e6a66fb55913228002114/img-vector-0.2.2.tar.gz"
            }
        ],
        "0.2.3": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e82a1103e965fe6b646e8d36a7fcbc1f",
                    "sha256": "1b450cdde17e33c9d4b06edfb1b2b05bd1618823771a1d152d5d28aa914def8a"
                },
                "downloads": -1,
                "filename": "img-vector-0.2.3.tar.gz",
                "has_sig": false,
                "md5_digest": "e82a1103e965fe6b646e8d36a7fcbc1f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 3084,
                "upload_time": "2019-10-09T10:07:49",
                "url": "https://files.pythonhosted.org/packages/bd/3d/a6bb2f8c0318c7cbe60836a09a98ce9b5896c3f5b7a6c2f35b453bc33a52/img-vector-0.2.3.tar.gz"
            }
        ],
        "0.2.4": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "54110090dd225376e6b22fd67fe7aae0",
                    "sha256": "17ecfc010f61389851a82a7a9bef8f2e712c18b8f7b2308bd01b9d63e4a83e4e"
                },
                "downloads": -1,
                "filename": "img-vector-0.2.4.tar.gz",
                "has_sig": false,
                "md5_digest": "54110090dd225376e6b22fd67fe7aae0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 3068,
                "upload_time": "2019-10-09T10:12:18",
                "url": "https://files.pythonhosted.org/packages/2e/45/147c90f71069d05d4e0d2528f34b966f1d570bc776a58b0aa8dec64d28ac/img-vector-0.2.4.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "54110090dd225376e6b22fd67fe7aae0",
                "sha256": "17ecfc010f61389851a82a7a9bef8f2e712c18b8f7b2308bd01b9d63e4a83e4e"
            },
            "downloads": -1,
            "filename": "img-vector-0.2.4.tar.gz",
            "has_sig": false,
            "md5_digest": "54110090dd225376e6b22fd67fe7aae0",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": ">=3.6",
            "size": 3068,
            "upload_time": "2019-10-09T10:12:18",
            "url": "https://files.pythonhosted.org/packages/2e/45/147c90f71069d05d4e0d2528f34b966f1d570bc776a58b0aa8dec64d28ac/img-vector-0.2.4.tar.gz"
        }
    ]
}