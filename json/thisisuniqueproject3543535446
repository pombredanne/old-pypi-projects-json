{
    "info": {
        "author": "APIMatic SDK Generator",
        "author_email": "support@apimatic.io",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "# Getting started\n\nBeMyGuest API v2.0 represents a significant effort to improve the capabilities of the API, supports more complex products and booking options, incorporate customer feedback, improve performance, and adopt the latest standards.\n\n## How to Build\n\n\nYou must have Python ```2 >=2.7.9``` or Python ```3 >=3.4``` installed on your system to install and run this SDK. This SDK package depends on other Python packages like nose, jsonpickle etc. \nThese dependencies are defined in the ```requirements.txt``` file that comes with the SDK.\nTo resolve these dependencies, you can use the PIP Dependency manager. Install it by following steps at [https://pip.pypa.io/en/stable/installing/](https://pip.pypa.io/en/stable/installing/).\n\nPython and PIP executables should be defined in your PATH. Open command prompt and type ```pip --version```.\nThis should display the version of the PIP Dependency Manager installed if your installation was successful and the paths are properly defined.\n\n* Using command line, navigate to the directory containing the generated files (including ```requirements.txt```) for the SDK.\n* Run the command ```pip install -r requirements.txt```. This should install all the required dependencies.\n\n![Building SDK - Step 1](https://apidocs.io/illustration/python?step=installDependencies&workspaceFolder=BmgApiV2-Python)\n\n\n## How to Use\n\nThe following section explains how to use the BmgApiV2 SDK package in a new project.\n\n### 1. Open Project in an IDE\n\nOpen up a Python IDE like PyCharm. The basic workflow presented here is also applicable if you prefer using a different editor or IDE.\n\n![Open project in PyCharm - Step 1](https://apidocs.io/illustration/python?step=pyCharm)\n\nClick on ```Open``` in PyCharm to browse to your generated SDK directory and then click ```OK```.\n\n![Open project in PyCharm - Step 2](https://apidocs.io/illustration/python?step=openProject0&workspaceFolder=BmgApiV2-Python)     \n\nThe project files will be displayed in the side bar as follows:\n\n![Open project in PyCharm - Step 3](https://apidocs.io/illustration/python?step=openProject1&workspaceFolder=BmgApiV2-Python&projectName=thisisuniqueproject3543535446)     \n\n### 2. Add a new Test Project\n\nCreate a new directory by right clicking on the solution name as shown below:\n\n![Add a new project in PyCharm - Step 1](https://apidocs.io/illustration/python?step=createDirectory&workspaceFolder=BmgApiV2-Python&projectName=thisisuniqueproject3543535446)\n\nName the directory as \"test\"\n\n![Add a new project in PyCharm - Step 2](https://apidocs.io/illustration/python?step=nameDirectory)\n   \nAdd a python file to this project with the name \"testsdk\"\n\n![Add a new project in PyCharm - Step 3](https://apidocs.io/illustration/python?step=createFile&workspaceFolder=BmgApiV2-Python&projectName=thisisuniqueproject3543535446)\n\nName it \"testsdk\"\n\n![Add a new project in PyCharm - Step 4](https://apidocs.io/illustration/python?step=nameFile)\n\nIn your python file you will be required to import the generated python library using the following code lines\n\n```Python\nfrom thisisuniqueproject3543535446.bmg import BMG\n```\n\n![Add a new project in PyCharm - Step 4](https://apidocs.io/illustration/python?step=projectFiles&workspaceFolder=BmgApiV2-Python&libraryName=thisisuniqueproject3543535446.bmg&projectName=thisisuniqueproject3543535446&className=BMG)\n\nAfter this you can write code to instantiate an API client object, get a controller object and  make API calls. Sample code is given in the subsequent sections.\n\n### 3. Run the Test Project\n\nTo run the file within your test project, right click on your Python file inside your Test project and click on ```Run```\n\n![Run Test Project - Step 1](https://apidocs.io/illustration/python?step=runProject&workspaceFolder=BmgApiV2-Python&libraryName=thisisuniqueproject3543535446.bmg&projectName=thisisuniqueproject3543535446&className=BMG)\n\n\n## How to Test\n\nYou can test the generated SDK and the server with automatically generated test\ncases. unittest is used as the testing framework and nose is used as the test\nrunner. You can run the tests as follows:\n\n  1. From terminal/cmd navigate to the root directory of the SDK.\n  2. Invoke ```pip install -r test-requirements.txt```\n  3. Invoke ```nosetests```\n\n## Initialization\n\n### Authentication\nIn order to setup authentication and initialization of the API client, you need the following information.\n\n| Parameter | Description |\n|-----------|-------------|\n| x_authorization | Api Key |\n\n\n\nAPI client can be initialized as following.\n\n```python\n# Configuration parameters and credentials\nx_authorization = 'x_authorization' # Api Key\n\nclient = BMG(x_authorization)\n```\n\n\n\n# Class Reference\n\n## <a name=\"list_of_controllers\"></a>List of Controllers\n\n* [ProductTypesController](#product_types_controller)\n* [BulkBuysController](#bulk_buys_controller)\n* [APIController](#api_controller)\n* [BookingsController](#bookings_controller)\n* [ProductsController](#products_controller)\n\n## <a name=\"product_types_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ProductTypesController\") ProductTypesController\n\n### Get controller instance\n\nAn instance of the ``` ProductTypesController ``` class can be accessed from the API Client.\n\n```python\n product_types_controller = client.product_types\n```\n\n### <a name=\"get_product_type_details\"></a>![Method: ](https://apidocs.io/img/method.png \".ProductTypesController.get_product_type_details\") get_product_type_details\n\n> Get information about product type using its UUID as the parameter.\n\n```python\ndef get_product_type_details(self,\n                                 uuid)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of product type |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\n\nresult = product_types_controller.get_product_type_details(uuid)\n\n```\n\n\n### <a name=\"get_check_availability_and_price\"></a>![Method: ](https://apidocs.io/img/method.png \".ProductTypesController.get_check_availability_and_price\") get_check_availability_and_price\n\n> Confirm availability and price of product-type using its UUID and date as a parameter. Before creating a booking we advise to run this request first.\n\n```python\ndef get_check_availability_and_price(self,\n                                         uuid,\n                                         date)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of product type |\n| date |  ``` Required ```  | Date YYYY-MM-DD |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\ndate = datetime.now()\n\nresult = product_types_controller.get_check_availability_and_price(uuid, date)\n\n```\n\n\n### <a name=\"get_prices\"></a>![Method: ](https://apidocs.io/img/method.png \".ProductTypesController.get_prices\") get_prices\n\n> Get product type pricing using its UUID as the parameter.\n\n```python\ndef get_prices(self,\n                   uuid,\n                   date_start=None,\n                   date_end=None,\n                   language=None)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of product type |\n| dateStart |  ``` Optional ```  | Start date for pricing list |\n| dateEnd |  ``` Optional ```  | End date for pricing list |\n| language |  ``` Optional ```  | UUID of language |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\ndate_start = datetime.now()\ndate_end = datetime.now()\nlanguage = uuid.uuid4()\n\nresult = product_types_controller.get_prices(uuid, date_start, date_end, language)\n\n```\n\n\n### <a name=\"get_product_types_for_product\"></a>![Method: ](https://apidocs.io/img/method.png \".ProductTypesController.get_product_types_for_product\") get_product_types_for_product\n\n> Get a list of product-types using its UUID as the parameter.\n\n```python\ndef get_product_types_for_product(self,\n                                      uuid)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of product |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\n\nresult = product_types_controller.get_product_types_for_product(uuid)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"bulk_buys_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".BulkBuysController\") BulkBuysController\n\n### Get controller instance\n\nAn instance of the ``` BulkBuysController ``` class can be accessed from the API Client.\n\n```python\n bulk_buys_controller = client.bulk_buys\n```\n\n### <a name=\"get_bulk_buy_product_list\"></a>![Method: ](https://apidocs.io/img/method.png \".BulkBuysController.get_bulk_buy_product_list\") get_bulk_buy_product_list\n\n> In API 2.0 we offer endpoint for bulk buy products with special pricing. Requests have to exact match offered in bulk quantities (for ex. adults 150 or 500 or 1000 /not 153/).\n\n```python\ndef get_bulk_buy_product_list(self)\n```\n\n#### Example Usage\n\n```python\n\nresult = bulk_buys_controller.get_bulk_buy_product_list()\n\n```\n\n\n### <a name=\"get_list_of_requested_bulk_buys\"></a>![Method: ](https://apidocs.io/img/method.png \".BulkBuysController.get_list_of_requested_bulk_buys\") get_list_of_requested_bulk_buys\n\n> List of requested bulk buy packages with current statuses.\n\n```python\ndef get_list_of_requested_bulk_buys(self)\n```\n\n#### Example Usage\n\n```python\n\nresult = bulk_buys_controller.get_list_of_requested_bulk_buys()\n\n```\n\n\n### <a name=\"post_bulk_buy_request\"></a>![Method: ](https://apidocs.io/img/method.png \".BulkBuysController.post_bulk_buy_request\") post_bulk_buy_request\n\n> Create bulk buy request.\n> \n> Please remember the number of adults/children/seniors has to match one of the available bulk set.\n\n```python\ndef post_bulk_buy_request(self,\n                              body)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| body |  ``` Required ```  | Request payload (json) |\n\n\n\n#### Example Usage\n\n```python\nbody_value = \"    {        \\\"message\\\": \\\"\\\",        \\\"bulkProductTypeUuid\\\": \\\"5f775003-4111-565d-a3d2-568e7ec57506\\\",        \\\"adults\\\": 150,        \\\"children\\\": 0,        \\\"seniors\\\" : 0    }\"\nbody = json.loads(body_value)\n\nresult = bulk_buys_controller.post_bulk_buy_request(body)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"api_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".APIController\") APIController\n\n### Get controller instance\n\nAn instance of the ``` APIController ``` class can be accessed from the API Client.\n\n```python\n client_controller = client.client\n```\n\n### <a name=\"get_config\"></a>![Method: ](https://apidocs.io/img/method.png \".APIController.get_config\") get_config\n\n> Config object with location, timezones, base URL for images and many more.\n\n```python\ndef get_config(self)\n```\n\n#### Example Usage\n\n```python\n\nresult = client_controller.get_config()\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"bookings_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".BookingsController\") BookingsController\n\n### Get controller instance\n\nAn instance of the ``` BookingsController ``` class can be accessed from the API Client.\n\n```python\n bookings_controller = client.bookings\n```\n\n### <a name=\"get_bookings\"></a>![Method: ](https://apidocs.io/img/method.png \".BookingsController.get_bookings\") get_bookings\n\n> Get a list of bookings.\n\n```python\ndef get_bookings(self,\n                     date_start=None,\n                     date_end=None,\n                     first_name=None,\n                     last_name=None,\n                     email=None,\n                     phone=None,\n                     partner_reference=None,\n                     page=None,\n                     per_page=None,\n                     query=None,\n                     status=None)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| dateStart |  ``` Optional ```  | Date start YYYY-MM-DD |\n| dateEnd |  ``` Optional ```  | Date start YYYY-MM-DD |\n| firstName |  ``` Optional ```  | Booking contact first name |\n| lastName |  ``` Optional ```  | Booking contact first name |\n| email |  ``` Optional ```  | Booking contact email |\n| phone |  ``` Optional ```  | Booking contact phone number |\n| partnerReference |  ``` Optional ```  | Partner reference (your booking id) |\n| page |  ``` Optional ```  | Number of page |\n| perPage |  ``` Optional ```  | Number of bookings per page |\n| query |  ``` Optional ```  | Query string |\n| status |  ``` Optional ```  | Booking status |\n\n\n\n#### Example Usage\n\n```python\ndate_start = 'date_start'\ndate_end = 'date_end'\nfirst_name = 'first_name'\nlast_name = 'last_name'\nemail = 'email'\nphone = 'phone'\npartner_reference = 'partner_reference'\npage = 11\nper_page = 11\nquery = 'query'\nstatus = 'status'\n\nresult = bookings_controller.get_bookings(date_start, date_end, first_name, last_name, email, phone, partner_reference, page, per_page, query, status)\n\n```\n\n\n### <a name=\"update_booking_status\"></a>![Method: ](https://apidocs.io/img/method.png \".BookingsController.update_booking_status\") update_booking_status\n\n> Updates Booking status information.\n> \n> Newly created booking has status reserved. In this status, BeMyGuest inventory is not yet deducted. Inventory is locked after changing the status of the booking from reserved to waiting (confirm action).\n> \n> When the booking is first created, it is marked as reserved. Inventories aren't touched yet. Once the partner decides to confirm the said booking, this is the only time the inventory will be impacted. The booking status will be updated from reserved to waiting.\n> \n> 5 days after the booking date all booking with status waiting will be marked expired.\n\n```python\ndef update_booking_status(self,\n                              uuid,\n                              status)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of booking |\n| status |  ``` Required ```  | Status `confirm` or `cancel` |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\nstatus = 'status'\n\nresult = bookings_controller.update_booking_status(uuid, status)\n\n```\n\n\n### <a name=\"get_booking_status\"></a>![Method: ](https://apidocs.io/img/method.png \".BookingsController.get_booking_status\") get_booking_status\n\n> Get Booking status information.\n\n```python\ndef get_booking_status(self,\n                           uuid)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of booking |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\n\nresult = bookings_controller.get_booking_status(uuid)\n\n```\n\n\n### <a name=\"get_vouchers\"></a>![Method: ](https://apidocs.io/img/method.png \".BookingsController.get_vouchers\") get_vouchers\n\n> Get vouchers for booking by Booking UUID Attention! Download vouchers links require authorization. You cannot just send the link to the final customer. You have to download them and distribute on your own. Download time will be registered and available to you in booking details.\n\n```python\ndef get_vouchers(self,\n                     booking_uuid)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| bookingUuid |  ``` Required ```  | Booking UUID |\n\n\n\n#### Example Usage\n\n```python\nbooking_uuid = 'bookingUuid'\n\nresult = bookings_controller.get_vouchers(booking_uuid)\n\n```\n\n\n### <a name=\"create_a_booking\"></a>![Method: ](https://apidocs.io/img/method.png \".BookingsController.create_a_booking\") create_a_booking\n\n> Resources related to bookings in the API.\n> \n> Before crating a booking check availability and price calling /v2/product-types/{uuid}/price-lists/YYYY-MM-DD\n\n```python\ndef create_a_booking(self,\n                         body)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| body |  ``` Required ```  | Booking request payload (json) |\n\n\n\n#### Example Usage\n\n```python\nbody_value = \"{\\\"message\\\":\\\"\\\",\\\"productTypeUuid\\\":\\\"efedb1fc-f150-5eaa-bf6e-fc202f6114bd\\\",\\\"customer\\\":{\\\"salutation\\\":\\\"Mr.\\\",\\\"lastName\\\":\\\"Doe\\\",\\\"firstName\\\":\\\"John\\\",\\\"email\\\":\\\"john@sample.com\\\",\\\"phone\\\":\\\"222333111\\\"},\\\"adults\\\":1,\\\"children\\\":1,\\\"seniors\\\":0,\\\"timeSlotUuid\\\":\\\"null\\\",\\\"arrivalDate\\\":\\\"2017-12-25\\\",\\\"partnerReference\\\":\\\"null\\\"}\"\nbody = json.loads(body_value)\n\nresult = bookings_controller.create_a_booking(body)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n## <a name=\"products_controller\"></a>![Class: ](https://apidocs.io/img/class.png \".ProductsController\") ProductsController\n\n### Get controller instance\n\nAn instance of the ``` ProductsController ``` class can be accessed from the API Client.\n\n```python\n products_controller = client.products\n```\n\n### <a name=\"get_product_list\"></a>![Method: ](https://apidocs.io/img/method.png \".ProductsController.get_product_list\") get_product_list\n\n> List of available products.\n\n```python\ndef get_product_list(self,\n                         country=None,\n                         city=None,\n                         price_min=None,\n                         price_max=None,\n                         category=None,\n                         pax=None,\n                         language=None,\n                         date_start=None,\n                         date_end=None,\n                         query=None,\n                         duration_days_min=None,\n                         duration_days_max=None,\n                         sort=None,\n                         page=None,\n                         per_page=None,\n                         published=None,\n                         deleted=None,\n                         fields=None,\n                         currency=None,\n                         updated_after=None,\n                         latitude=None,\n                         longitude=None,\n                         distance=None)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| country |  ``` Optional ```  | UUID of country |\n| city |  ``` Optional ```  | UUID of city, it will always overwrite country parameter if provided |\n| priceMin |  ``` Optional ```  | minimal price in decimal format 000.00 - it's compared to base price |\n| priceMax |  ``` Optional ```  | max price in decimal format 000.00 |\n| category |  ``` Optional ```  | UUID of litsing category |\n| pax |  ``` Optional ```  | number of people |\n| language |  ``` Optional ```  | language UUID, also language code may be provided. It will overwrite the default language from user account |\n| dateStart |  ``` Optional ```  | product start date, format YYYY-MM-DD |\n| dateEnd |  ``` Optional ```  | product end date, format YYYY-MM-DD |\n| query |  ``` Optional ```  | free phrase for text search for example &query=Bali |\n| durationDaysMin |  ``` Optional ```  | product duration minimum days (default 0) |\n| durationDaysMax |  ``` Optional ```  | product duration maximum days (default NULL) |\n| sort |  ``` Optional ```  | sorting field, example: &sort=date,-price  or &sort=price |\n| page |  ``` Optional ```  | page number for results |\n| perPage |  ``` Optional ```  | how many results per page - if not provided default value from user account will be used |\n| published |  ``` Optional ```  | default is always set to `true` |\n| deleted |  ``` Optional ```  | default is set to `false` |\n| fields |  ``` Optional ```  | coma separated list of keys (fields) to be returned |\n| currency |  ``` Optional ```  | UUID of currency |\n| updatedAfter |  ``` Optional ```  | Date YYYY-MM-DD |\n| latitude |  ``` Optional ```  | Latitude |\n| longitude |  ``` Optional ```  | Longitude |\n| distance |  ``` Optional ```  | Distance ascending (works only if latitude,longitude & distance parameters are provided, ignored otherwise) |\n\n\n\n#### Example Usage\n\n```python\ncountry = 'country'\ncity = 'city'\nprice_min = 11\nprice_max = 11\ncategory = 'category'\npax = 11.3200077280961\nlanguage = 'language'\ndate_start = 'date_start'\ndate_end = 'date_end'\nquery = 'query'\nduration_days_min = 11\nduration_days_max = 11\nsort = 'sort'\npage = 11.3200077280961\nper_page = 1\npublished = 'published'\ndeleted = 'deleted'\nfields = 'fields'\ncurrency = 'currency'\nupdated_after = 'updated_after'\nlatitude = 'latitude'\nlongitude = 'longitude'\ndistance = 'distance'\n\nresult = products_controller.get_product_list(country, city, price_min, price_max, category, pax, language, date_start, date_end, query, duration_days_min, duration_days_max, sort, page, per_page, published, deleted, fields, currency, updated_after, latitude, longitude, distance)\n\n```\n\n#### Errors\n\n| Error Code | Error Description |\n|------------|-------------------|\n| 401 | Unauthorized |\n\n\n\n\n### <a name=\"get_product_details\"></a>![Method: ](https://apidocs.io/img/method.png \".ProductsController.get_product_details\") get_product_details\n\n> Get information about the product using its UUID as a parameter.\n\n```python\ndef get_product_details(self,\n                            uuid,\n                            currency=None,\n                            language=None,\n                            fields=None)\n```\n\n#### Parameters\n\n| Parameter | Tags | Description |\n|-----------|------|-------------|\n| uuid |  ``` Required ```  | UUID of product |\n| currency |  ``` Optional ```  | currency UUID, also currency code may be provided in exchange |\n| language |  ``` Optional ```  | language UUID, also language code may be provided |\n| fields |  ``` Optional ```  | comma separated list of fields to retrive |\n\n\n\n#### Example Usage\n\n```python\nuuid = 'uuid'\ncurrency = 'currency'\nlanguage = 'language'\nfields = 'fields'\n\nresult = products_controller.get_product_details(uuid, currency, language, fields)\n\n```\n\n\n[Back to List of Controllers](#list_of_controllers)\n\n\n\n",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://apimatic.io/",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "thisisuniqueproject3543535446",
        "package_url": "https://pypi.org/project/thisisuniqueproject3543535446/",
        "platform": "",
        "project_url": "https://pypi.org/project/thisisuniqueproject3543535446/",
        "project_urls": {
            "Homepage": "https://apimatic.io/"
        },
        "release_url": "https://pypi.org/project/thisisuniqueproject3543535446/1.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "BeMyGuest API v2.0 represents a significant effort to improve the capabilities of the API, supports more complex products and booking options, incorporate customer feedback, improve performance, and adopt the latest standards.",
        "version": "1.0"
    },
    "last_serial": 4171781,
    "releases": {
        "1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ec23ded38e2bcb999ec74bc2037c9551",
                    "sha256": "ad556d9e88cd2cd5260e923ec7f6db982808b5717c74b463edda61627e1a2bfd"
                },
                "downloads": -1,
                "filename": "thisisuniqueproject3543535446-1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ec23ded38e2bcb999ec74bc2037c9551",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 41969,
                "upload_time": "2018-08-15T04:44:35",
                "url": "https://files.pythonhosted.org/packages/80/66/6c3e84451df7141f9c956ac5106739595f11a75d7416e0e913b7b912f772/thisisuniqueproject3543535446-1.0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "ec23ded38e2bcb999ec74bc2037c9551",
                "sha256": "ad556d9e88cd2cd5260e923ec7f6db982808b5717c74b463edda61627e1a2bfd"
            },
            "downloads": -1,
            "filename": "thisisuniqueproject3543535446-1.0.tar.gz",
            "has_sig": false,
            "md5_digest": "ec23ded38e2bcb999ec74bc2037c9551",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 41969,
            "upload_time": "2018-08-15T04:44:35",
            "url": "https://files.pythonhosted.org/packages/80/66/6c3e84451df7141f9c956ac5106739595f11a75d7416e0e913b7b912f772/thisisuniqueproject3543535446-1.0.tar.gz"
        }
    ]
}