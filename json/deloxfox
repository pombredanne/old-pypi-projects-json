{
    "info": {
        "author": "S. Brewster Malevich",
        "author_email": "malevich@email.arizona.edu",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 3 - Alpha",
            "Intended Audience :: Developers",
            "Intended Audience :: Science/Research",
            "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
            "Programming Language :: Python :: 3",
            "Topic :: Scientific/Engineering"
        ],
        "description": "# deloxfox\n\n[![Travis-CI Build Status](https://travis-ci.org/brews/deloxfox.svg?branch=master)](https://travis-ci.org/brews/deloxfox)\n\nExperimental Bayesian planktic foraminifera calibration, for Python.\n\n**Please note that this package is currently under development. It will eat your pet hamster.**\n\n## Quick example\n\nFirst, load key packages and an example dataset:\n\n    import numpy as np\n    import deloxfox as dfox\n\n    example_file = dfox.get_example_data('VM21-30.csv')\n    d = np.genfromtxt(example_file, delimiter=',', names=True, missing_values='NA')\n\nThis data (from [Koutavas and Joanides 2012](https://doi.org/10.1029/2012PA002378))\nhas three columns giving, down-core depth, sediment age (calendar years BP) and \u03b418O for *G. ruber* (white) (\u2030; VPDB). \nThe core site is in the Eastern Equatorial Pacific.\n\nWe can make a prediction of sea-surface temperature (SST) with `predict_seatemp()`:\n\n    prediction = dfox.predict_seatemp(d['d18O_ruber'], d18osw=0.239, prior_mean=24.9, prior_std=7.81)\n\nThe values we're using for priors are roughly based on the range of SSTs we've seen for *G. ruber* (white) sediment \ncore in the modern period, though prior standard deviation is twice`d18osw` is twice the spread we see in the modern \nrecord. \u03b418O for seawater (\u2030; VSMOW) during the modern record \n([LeGrande and Schmidt 2006](https://doi.org/10.1029/2006GL026011)). We'll assume it's constant -- for simplicity. \nWe're also not correcting these proxies for changes in global ice volume, so these numbers will be off. Ideally we'd make \nthis correction to \u03b418Oc series before the prediction. See the \n[`erebusfall` package](https://github.com/brews/erebusfall) for simple ice-volume correction in Python.\n\nTo see actual numbers from the prediction, directly parse `prediction.ensemble` or use `prediction.percentile()` to get \nthe 5%, 50% and 95% percentiles. You can also plot your prediction with `dfox.predictplot(prediction)`.\n\nThis uses the pooled Bayesian calibration model, which is calibrated on annual SSTs. We can consider foram-specific \nvariability with:\n\n    prediction = dfox.predict_seatemp(d['d18O_ruber'], d18osw=0.239, prior_mean=24.9, prior_std=7.81, \n                                      foram='G_ruber_white')\n\nwhich uses our hierarchical model calibrated on annual SSTs. We can also estimate foram-specific seasonal effects with:\n\n    prediction = dfox.predict_seatemp(d['d18O_ruber'], d18osw=0.239, prior_mean=24.9, prior_std=7.81, \n                                      foram='G_ruber_white', seasonal_seatemp=True)\n\nThis uses our hierarchical model calibrated on seasonal SSTs. Be sure to specify the foraminifera if you use this option.\n\nYou can also predict \u03b418O for planktic calcite using similar options, using the `predict_d18oc()` function.\n\n## Installation\n\nTo install **deloxfox** with *pip*, run:\n\n\n    pip install deloxfox\n\nTo install **deloxfox** with *conda*, run:\n\n\n    conda install -c sbmalev deloxfox\n\n**deloxfox** is not compatible with Python 2.\n\n## Support and development\n\n- Please feel free to report bugs and issues or view the source code on GitHub (https://github.com/brews/deloxfox).\n\n\n## License\n\n**deloxfox** is available under the Open Source GPLv3 (https://www.gnu.org/licenses).\n\n\n",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/brews/deloxfox",
        "keywords": "marine paleoclimate paleoceanography d18o \u03b418o",
        "license": "GPLv3",
        "maintainer": "",
        "maintainer_email": "",
        "name": "deloxfox",
        "package_url": "https://pypi.org/project/deloxfox/",
        "platform": "",
        "project_url": "https://pypi.org/project/deloxfox/",
        "release_url": "https://pypi.org/project/deloxfox/0.0.1a0/",
        "requires_dist": [
            "attrs",
            "matplotlib",
            "numpy"
        ],
        "requires_python": "",
        "summary": "Experimental Bayesian planktic foraminifera calibration, for Python.",
        "version": "0.0.1a0"
    },
    "last_serial": 4037574,
    "releases": {
        "0.0.1a0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "deab4c5a9fa0ab77a0100ea8086fcffa",
                    "sha256": "e566508ec063b6c48c00fc60eb64ba5fa1ad49cdf0e43a42deceee4b8f16c5b8"
                },
                "downloads": -1,
                "filename": "deloxfox-0.0.1a0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "deab4c5a9fa0ab77a0100ea8086fcffa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "size": 4556258,
                "upload_time": "2018-07-06T20:14:07",
                "url": "https://files.pythonhosted.org/packages/ab/94/747cdb0476f0b840e4d2533e6932c9168918da456cee171ab2d41c592192/deloxfox-0.0.1a0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "df087241b23a0c1937d4826a792148de",
                    "sha256": "30afc330d139f8bc3a947be72c747f46c90b0329835886a41ae19f3c588249df"
                },
                "downloads": -1,
                "filename": "deloxfox-0.0.1a0.tar.gz",
                "has_sig": false,
                "md5_digest": "df087241b23a0c1937d4826a792148de",
                "packagetype": "sdist",
                "python_version": "source",
                "size": 4537894,
                "upload_time": "2018-07-06T20:14:17",
                "url": "https://files.pythonhosted.org/packages/1b/db/ec49e3670c96756961b2dd58e536b98c8e51097e0e2289605e38c2153689/deloxfox-0.0.1a0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "deab4c5a9fa0ab77a0100ea8086fcffa",
                "sha256": "e566508ec063b6c48c00fc60eb64ba5fa1ad49cdf0e43a42deceee4b8f16c5b8"
            },
            "downloads": -1,
            "filename": "deloxfox-0.0.1a0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "deab4c5a9fa0ab77a0100ea8086fcffa",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "size": 4556258,
            "upload_time": "2018-07-06T20:14:07",
            "url": "https://files.pythonhosted.org/packages/ab/94/747cdb0476f0b840e4d2533e6932c9168918da456cee171ab2d41c592192/deloxfox-0.0.1a0-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "df087241b23a0c1937d4826a792148de",
                "sha256": "30afc330d139f8bc3a947be72c747f46c90b0329835886a41ae19f3c588249df"
            },
            "downloads": -1,
            "filename": "deloxfox-0.0.1a0.tar.gz",
            "has_sig": false,
            "md5_digest": "df087241b23a0c1937d4826a792148de",
            "packagetype": "sdist",
            "python_version": "source",
            "size": 4537894,
            "upload_time": "2018-07-06T20:14:17",
            "url": "https://files.pythonhosted.org/packages/1b/db/ec49e3670c96756961b2dd58e536b98c8e51097e0e2289605e38c2153689/deloxfox-0.0.1a0.tar.gz"
        }
    ]
}