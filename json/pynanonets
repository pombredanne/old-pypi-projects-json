{
    "info": {
        "author": "",
        "author_email": "support@nanonets.com",
        "bugtrack_url": null,
        "classifiers": [],
        "description": "<div align=\"center\">\n  <a href=\"https://nanonets.com/\">\n    <img src=\"https://nanonets.com/logo.png\" alt=\"pynanonets - The NanoNets API Python Wrapper\" width=\"100\"/>\n    </a>\n</div>\n\n<h1 align=\"center\">Pynanonets - The NanoNets API Python Wrapper</h1>\n\n** **\n\nNanonets provides an easy to use API to communicate with it's servers and build machine learning models and make predictions on image data. \nThe models that can be built are - \n1. Image Classification\n2. Multi-label Classification\n3. Object Detection\n4. OCR \n\nCheck us out at https://nanonets.com. <br>\nTo find out about our GUI solution or to get your API key, check out https://app.nanonets.com\n\n** **\n\n## Installation\n\n### Setuptools - \nTo install using setuptools, run the following commands from your terminal\n```bash\ngit clone https://github.com/NanoNets/nanonets-python-wrapper.git\ncd nanonets-python-wrapper\npython setup.py install --user\n```\n\n** **\n\n## Create Models - \nTo create a new model\n1. Head over to https://app.nanonets.com, login, click on the 'API Keys' tab on the left. \n2. Click on 'COPY KEY'\n3. Create a model using the following python code\n```python\nfrom pynanonets import ImageClassification\n\n# from pynanonets import MultilabelClassification\n# from pynanonets import ObjectDetection\n# from pynanonets import OCR\n\napi_key = 'YOUR_API_KEY_GOES_HERE'\ncategories = ['list', 'of', 'your', 'labels']\n\nmodel = ImageClassification(api_key, categories)\n```\n\nThis will print a Model ID that you should note down for future reference. You can also find this out by visiting https://app.nanonets.com\n\n** **\n\n## Preparing training data\nThe training data, needs to be put into a dictionary format where \n* for image classification models - \n\t* keys - filepaths/urls of images\n\t* values - labels for each image\n* for multilabel classification models - \n\t* keys - filepaths/urls of images\n\t* values - list of labels for each image\n* for object detection models - \n\t* keys - filepaths of images\n\t* values - annotation paths for each image (XML or JSON)\n* for OCR models - \n\t* keys - filepaths of images\n\t* values - annotation paths for each image (XML or JSON)\n\nyou can look into the data/annotations directory to get a better idea. \n\n** **\n\n## Training and model status\n\nTo train a model on some training data - \n```python\nmodel.train(training_dict, data_path_type='files')\n```\n\nThe images will get uploaded and the training will get initialised after. \n\nYou can check if the model is trained or not at anytime by running the following command from a python console - \n```python\napi_key = 'YOUR_API_KEY_GOES_HERE'\ncategories = ['list', 'of', 'your', 'labels']\nmodel_id = 'YOUR_MODEL_ID'\n\nmodel = ImageClassification(api_key, categories, model_id=model_id)\nmodel._check_model_state()\n```\nOr you can wait for Nanonets to email you once the training is finished. \n\n** **\n\n## Inference\nYou can run inference on a single image or multiple images. You can use urls as well as local files. \n\n```python\napi_key = 'YOUR_API_KEY_GOES_HERE'\ncategories = ['list', 'of', 'your', 'labels']\nmodel_id = 'YOUR_MODEL_ID'\n\nmodel = ImageClassification(api_key, categories, model_id=model_id)\n\n## list of file paths of several test images\nimglist = os.listdir('data/images')\nimglist = ['data/images/' + x for x in imglist]\n\n## list of urls of several test images\nfile = open('data/number_plates.json', 'r')\nurls = []\nfor line in file:\n\turls.append(json.loads(line)['content'])\n\n\n## prediction functions for single file\nresp_one_file = model.predict_for_file(imglist[0])\nprint(\"IC response - single image: \", resp_one_file)\n\n## prediction functions for multiple files\nresp_mul_files = model.predict_for_files(imglist[:39])\nprint(\"IC response - multiple images: \", resp_mul_files)\n\n## prediction functions for single url\nresp_one_url = model.predict_for_url(urls[0])\nprint(\"IC response - single URL: \", resp_one_url)\n\n## prediction functions for multiple urls\nresp_mul_urls = model.predict_for_urls(urls[:39])\nprint(\"IC response - multiple URLs: \", resp_mul_urls)\n```\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://nanonets.com",
        "keywords": "",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "pynanonets",
        "package_url": "https://pypi.org/project/pynanonets/",
        "platform": "",
        "project_url": "https://pypi.org/project/pynanonets/",
        "project_urls": {
            "Homepage": "https://nanonets.com"
        },
        "release_url": "https://pypi.org/project/pynanonets/2.0.3/",
        "requires_dist": [
            "asn1crypto (==0.24.0)",
            "certifi (==2018.8.24)",
            "cffi (==1.11.5)",
            "chardet (==3.0.4)",
            "cryptography (==2.3.1)",
            "idna (==2.7)",
            "pycparser (==2.19)",
            "pyOpenSSL (==18.0.0)",
            "PySocks (==1.6.8)",
            "requests (==2.20.0)",
            "six (==1.11.0)",
            "tqdm (==4.36.1)",
            "urllib3 (==1.24.2)",
            "xmljson (==0.1.6)"
        ],
        "requires_python": "",
        "summary": "The Nanonets API",
        "version": "2.0.3"
    },
    "last_serial": 5927202,
    "releases": {
        "2.0.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6340ab82977621b6fb077986fcc07d46",
                    "sha256": "08d2e06bf454e01bf823b8d49bfa86ad6f012333dc687f63607357b19e7a624f"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6340ab82977621b6fb077986fcc07d46",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13183,
                "upload_time": "2019-10-03T14:35:26",
                "url": "https://files.pythonhosted.org/packages/7d/a1/b731b548f753c0fc50385feace05c0ef83c6b9d54295ff6c337c0a6b1795/pynanonets-2.0.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4a8e75a15293c5c197d307f3d6c74734",
                    "sha256": "11163826ce721838a1941752c212d211840b2268a499a01309da441dc80cf93b"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4a8e75a15293c5c197d307f3d6c74734",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8813,
                "upload_time": "2019-10-03T14:35:29",
                "url": "https://files.pythonhosted.org/packages/9a/ef/1b4753ab807ee130633cafbfdfd41f8e50d82bc273fb87238b6373730bea/pynanonets-2.0.0.tar.gz"
            }
        ],
        "2.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "23496cd370224ccf0838ef4266ee6563",
                    "sha256": "c039e840d938f3d4c1432ddb7564a4556c8b4d787ec018ffa748e4bb70098cdd"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "23496cd370224ccf0838ef4266ee6563",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13281,
                "upload_time": "2019-10-03T16:26:24",
                "url": "https://files.pythonhosted.org/packages/e1/0b/738fb93b3cd81cae0b8ea28a47f52979a73a0098dab306f83061370054f8/pynanonets-2.0.1-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b15d1fb0253f9f41569f22602c92ad11",
                    "sha256": "11c1838f205c8117601d5a4f1cc48e6b5545677e7ffa03e893cb40334294ddfd"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b15d1fb0253f9f41569f22602c92ad11",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8703,
                "upload_time": "2019-10-03T16:26:26",
                "url": "https://files.pythonhosted.org/packages/59/09/974e13ee9a2ea43de30fff8480ee5809b4cc60e3760f30e8404590bbc47f/pynanonets-2.0.1.tar.gz"
            }
        ],
        "2.0.2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "066abb7aa16db53c6e1c6a93f6af4032",
                    "sha256": "1829b2deacb499a9e991fe0ba41811229ee6ca5ba26bc3b8ddb80ad046245662"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "066abb7aa16db53c6e1c6a93f6af4032",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13279,
                "upload_time": "2019-10-03T16:34:05",
                "url": "https://files.pythonhosted.org/packages/0c/c7/55211513f5d746457cf89ef7e6fd27353a6e9c6ba4e29fc9722c19cc6a5b/pynanonets-2.0.2-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4019a1be90693f8e20c3f56d9e15182a",
                    "sha256": "906972d0838e5296e929b0303455c097cee6c1dd8d6e38e2d2e8dc0ca12ada7a"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "4019a1be90693f8e20c3f56d9e15182a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8699,
                "upload_time": "2019-10-03T16:34:07",
                "url": "https://files.pythonhosted.org/packages/e9/11/7f91380240d8adee36e94eb1701a6ef44de5801f3c46fbf34ef6c3412325/pynanonets-2.0.2.tar.gz"
            }
        ],
        "2.0.3": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ea8e3f5906f22f0176d9bf258c9df05c",
                    "sha256": "fc7f560414e6f4145f8cf89dcbbc0086d85ace3621944f160608a5e86d626dbc"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ea8e3f5906f22f0176d9bf258c9df05c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13147,
                "upload_time": "2019-10-04T08:23:19",
                "url": "https://files.pythonhosted.org/packages/39/43/dbfed1906ade1b35f57db2250c0aad2fa5812ecd0d6bab6bcebc857d25b3/pynanonets-2.0.3-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e3f20fa0726012ba10f988a6c70f811",
                    "sha256": "e5d79d5ac0f4a2f18bbc117e67f3c5384b71637db800512144f72923e6a519f6"
                },
                "downloads": -1,
                "filename": "pynanonets-2.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "2e3f20fa0726012ba10f988a6c70f811",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8573,
                "upload_time": "2019-10-04T08:23:20",
                "url": "https://files.pythonhosted.org/packages/ca/2c/634861036cff069f7c27b57d6ecea907339888415db3a8c33863caf9784b/pynanonets-2.0.3.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "ea8e3f5906f22f0176d9bf258c9df05c",
                "sha256": "fc7f560414e6f4145f8cf89dcbbc0086d85ace3621944f160608a5e86d626dbc"
            },
            "downloads": -1,
            "filename": "pynanonets-2.0.3-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "ea8e3f5906f22f0176d9bf258c9df05c",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 13147,
            "upload_time": "2019-10-04T08:23:19",
            "url": "https://files.pythonhosted.org/packages/39/43/dbfed1906ade1b35f57db2250c0aad2fa5812ecd0d6bab6bcebc857d25b3/pynanonets-2.0.3-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "2e3f20fa0726012ba10f988a6c70f811",
                "sha256": "e5d79d5ac0f4a2f18bbc117e67f3c5384b71637db800512144f72923e6a519f6"
            },
            "downloads": -1,
            "filename": "pynanonets-2.0.3.tar.gz",
            "has_sig": false,
            "md5_digest": "2e3f20fa0726012ba10f988a6c70f811",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 8573,
            "upload_time": "2019-10-04T08:23:20",
            "url": "https://files.pythonhosted.org/packages/ca/2c/634861036cff069f7c27b57d6ecea907339888415db3a8c33863caf9784b/pynanonets-2.0.3.tar.gz"
        }
    ]
}