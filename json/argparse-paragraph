{
    "info": {
        "author": "David Steele",
        "author_email": "dsteele@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 4 - Beta",
            "Environment :: Console",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
            "Natural Language :: English",
            "Operating System :: MacOS",
            "Operating System :: Microsoft :: Windows",
            "Operating System :: POSIX :: Linux",
            "Programming Language :: Python :: 3 :: Only",
            "Topic :: Software Development :: User Interfaces"
        ],
        "description": "[![Build Status](https://travis-ci.org/davesteele/argparse_formatter.svg?branch=master)](https://travis-ci.org/davesteele/argparse_formatter) \n\nArgparse Paragraph Formatter\n============================\n\nThis project is a Python module that provides an\n[**argparse**](https://docs.python.org/3/library/argparse.html) formatter that\npreserves paragraphs in help and epilog text.\n\nBackground\n----------\n\nBy default, **argparse** will collapse and transform all sequences of whitespace\ninto a single space, and then wrap the text to an appropriate line length.\nThis causes all text to be transformed into a single paragraph.\n\nThere are optional **RawDescriptionHelpFormatter** and\n**RawTextHelpFormatter** classes that can be used to preserve paragraphs, but\nthey do not perform any word wrapping.\n\nThe ParagraphFormatter\n----------------------\n\nThis module provides the **ParagraphFormatter** class. If this class is passed\nto the **argparse.ArgumentParser** creation call as the *formatter_class*\nargument, then help and epilog paragraphs, separated by single blank lines,\nwill be preserved. Word wrapping will be performed within the paragraphs.\n\nNote that **ParagraphFormatter** is implemented by overriding two private\nmethods in the default **argparse** formatter, and that the internals of that\nclass are not considered part of the **argparse** API. There is therefore a\nrisk that the code may break with a future standard library release. The module\nhas been tested across Python versions.\n\n\nDemo\n----\n\nThe script *demo.py* demostrates the effect of using the ParagraphFormatter:\n\n\n    # ./demo.py\n    *************************\n    Using the Default formatter\n    *************************\n\n    usage: demo.py [-h] [--arg ARG]\n\n    optional arguments:\n      -h, --help  show this help message and exit\n      --arg ARG   This same feature would be useful for arguments that would\n                  benefit from more explanation. Wouldn't it?\n\n    This is a multi-paragraph epilog. It is presenting data that would benefit by\n    being visually broken up into pieces. It sure would be nice if it was\n    represented that way.\n\n\n    *************************\n    Using the Paragraph formatter\n    *************************\n\n    usage: demo.py [-h] [--arg ARG]\n\n    optional arguments:\n      -h, --help  show this help message and exit\n      --arg ARG   This same feature would be useful for arguments that would\n                  benefit from more explanation.\n\n                  Wouldn't it?\n\n    This is a multi-paragraph epilog. It is presenting data that would benefit by\n    being visually broken up into pieces.\n\n    It sure would be nice if it was represented that way.\n\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/davesteele/argparse_formatter",
        "keywords": "",
        "license": "GPL 2.0",
        "maintainer": "",
        "maintainer_email": "",
        "name": "argparse-paragraph",
        "package_url": "https://pypi.org/project/argparse-paragraph/",
        "platform": "",
        "project_url": "https://pypi.org/project/argparse-paragraph/",
        "project_urls": {
            "Homepage": "https://github.com/davesteele/argparse_formatter"
        },
        "release_url": "https://pypi.org/project/argparse-paragraph/1.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "Paragraph-preserving formatter for argparse",
        "version": "1.0"
    },
    "last_serial": 6001931,
    "releases": {
        "1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c4c2a560a5fdd906cb1a24ac52020072",
                    "sha256": "58b91d90248533db99b8ad5d9f95568ed4e0204967588e04cf1606c14765b9d8"
                },
                "downloads": -1,
                "filename": "argparse_paragraph-1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c4c2a560a5fdd906cb1a24ac52020072",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10272,
                "upload_time": "2019-10-20T04:52:38",
                "url": "https://files.pythonhosted.org/packages/d5/b9/edb4151ee8ed4a5297870ec1b5b5b44887c81bc5f328f7bb5b413caaa1e2/argparse_paragraph-1.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "99d119431e4339a363a5fc0a3f774e3f",
                    "sha256": "c520dffd2867a9e18bded96c16c496357c6fabbd3cad78f3852b1d15066dfab2"
                },
                "downloads": -1,
                "filename": "argparse_paragraph-1.0.tar.gz",
                "has_sig": true,
                "md5_digest": "99d119431e4339a363a5fc0a3f774e3f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3637,
                "upload_time": "2019-10-20T04:52:41",
                "url": "https://files.pythonhosted.org/packages/ed/e9/c3212052ec731354a0e4665ddcb2bed699eb0ba58c7989868c4ce48e9f65/argparse_paragraph-1.0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "c4c2a560a5fdd906cb1a24ac52020072",
                "sha256": "58b91d90248533db99b8ad5d9f95568ed4e0204967588e04cf1606c14765b9d8"
            },
            "downloads": -1,
            "filename": "argparse_paragraph-1.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "c4c2a560a5fdd906cb1a24ac52020072",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 10272,
            "upload_time": "2019-10-20T04:52:38",
            "url": "https://files.pythonhosted.org/packages/d5/b9/edb4151ee8ed4a5297870ec1b5b5b44887c81bc5f328f7bb5b413caaa1e2/argparse_paragraph-1.0-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "99d119431e4339a363a5fc0a3f774e3f",
                "sha256": "c520dffd2867a9e18bded96c16c496357c6fabbd3cad78f3852b1d15066dfab2"
            },
            "downloads": -1,
            "filename": "argparse_paragraph-1.0.tar.gz",
            "has_sig": true,
            "md5_digest": "99d119431e4339a363a5fc0a3f774e3f",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 3637,
            "upload_time": "2019-10-20T04:52:41",
            "url": "https://files.pythonhosted.org/packages/ed/e9/c3212052ec731354a0e4665ddcb2bed699eb0ba58c7989868c4ce48e9f65/argparse_paragraph-1.0.tar.gz"
        }
    ]
}