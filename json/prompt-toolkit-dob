{
    "info": {
        "author": "HotOffThe Hamster",
        "author_email": "hotoffthehamster+pythonprompttoolkit@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 5 - Production/Stable",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: BSD License",
            "Operating System :: OS Independent",
            "Programming Language :: Python",
            "Programming Language :: Python :: 2",
            "Programming Language :: Python :: 2.6",
            "Programming Language :: Python :: 2.7",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.3",
            "Programming Language :: Python :: 3.4",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7",
            "Topic :: Software Development"
        ],
        "description": "Python Prompt Toolkit\n=====================\n\n|Build Status|  |AppVeyor|  |PyPI|  |RTD|  |License|  |Codecov|\n\n.. image :: https://github.com/prompt-toolkit/python-prompt-toolkit/raw/master/docs/images/logo_400px.png\n\n*``prompt_toolkit`` is a library for building powerful interactive command line\napplications in Python.*\n\nRead the `documentation on readthedocs\n<http://python-prompt-toolkit.readthedocs.io/en/stable/>`_.\n\nNOTICE: prompt_toolkit 2.0\n**************************\n\nPlease notice that this is prompt_toolkit 2.0. It is incompatible with the 1.0\nbranch, but much better in many regards. Many applications are still using\nprompt_toolkit 1.0, but upgrading is strongly recommended. Feel free to open a\nnew issue if you don't manage to upgrade to prompt_toolkit 2.0.\n\n\nPtpython\n********\n\n`ptpython <http://github.com/prompt-toolkit/ptpython/>`_ is an interactive\nPython Shell, build on top of prompt_toolkit.\n\n.. image :: https://github.com/prompt-toolkit/python-prompt-toolkit/raw/master/docs/images/ptpython.png\n\n\nprompt_toolkit features\n***********************\n\n``prompt_toolkit`` could be a replacement for `GNU readline\n<https://tiswww.case.edu/php/chet/readline/rltop.html>`_, but it can be much\nmore than that.\n\nSome features:\n\n- Pure Python.\n- Syntax highlighting of the input while typing. (For instance, with a Pygments lexer.)\n- Multi-line input editing.\n- Advanced code completion.\n- Both Emacs and Vi key bindings. (Similar to readline.)\n- Even some advanced Vi functionality, like named registers and digraphs.\n- Reverse and forward incremental search.\n- Runs on all Python versions from 2.6 up to 3.7.\n- Works well with Unicode double width characters. (Chinese input.)\n- Selecting text for copy/paste. (Both Emacs and Vi style.)\n- Support for `bracketed paste <https://cirw.in/blog/bracketed-paste>`_.\n- Mouse support for cursor positioning and scrolling.\n- Auto suggestions. (Like `fish shell <http://fishshell.com/>`_.)\n- Multiple input buffers.\n- No global state.\n- Lightweight, the only dependencies are Pygments, six and wcwidth.\n- Runs on Linux, OS X, FreeBSD, OpenBSD and Windows systems.\n- And much more...\n\nFeel free to create tickets for bugs and feature requests, and create pull\nrequests if you have nice patches that you would like to share with others.\n\n\nAbout Windows support\n*********************\n\n``prompt_toolkit`` is cross platform, and everything that you build on top\nshould run fine on both Unix and Windows systems. On Windows, it uses a\ndifferent event loop (``WaitForMultipleObjects`` instead of ``select``), and\nanother input and output system. (Win32 APIs instead of pseudo-terminals and\nVT100.)\n\nIt's worth noting that the implementation is a \"best effort of what is\npossible\". Both Unix and Windows terminals have their limitations. But in\ngeneral, the Unix experience will still be a little better.\n\nFor Windows, it's recommended to use either `cmder\n<http://cmder.net/>`_ or `conemu <https://conemu.github.io/>`_.\n\n\nInstallation\n************\n\n::\n\n    pip install prompt_toolkit\n\nFor Conda, do:\n\n::\n\n    conda install -c https://conda.anaconda.org/conda-forge prompt_toolkit\n\n\nGetting started\n***************\n\nThe most simple example of the library would look like this:\n\n.. code:: python\n\n    from prompt_toolkit import prompt\n\n    if __name__ == '__main__':\n        answer = prompt('Give me some input: ')\n        print('You said: %s' % answer)\n\nFor more complex examples, have a look in the ``examples`` directory. All\nexamples are chosen to demonstrate only one thing. Also, don't be afraid to\nlook at the source code. The implementation of the ``prompt`` function could be\na good start.\n\nNote for Python 2: all strings are expected to be unicode strings. So, either\nput a small ``u`` in front of every string or put ``from __future__ import\nunicode_literals`` at the start of the above example.\n\n\nProjects using prompt_toolkit\n*****************************\n\nShells:\n\n- `ptpython <http://github.com/prompt-toolkit/ptpython/>`_: Python REPL\n- `ptpdb <http://github.com/jonathanslenders/ptpdb/>`_: Python debugger (pdb replacement)\n- `pgcli <https://www.pgcli.com/>`_: Postgres client.\n- `mycli <https://www.mycli.net/>`_: MySql client.\n- `litecli <https://litecli.com/>`_: SQLite client.\n- `wharfee <http://wharfee.com/>`_: A Docker command line.\n- `xonsh <http://xon.sh/>`_: A Python-ish, BASHwards-compatible shell.\n- `saws <https://github.com/donnemartin/saws>`_: A Supercharged AWS Command Line Interface.\n- `cycli <https://github.com/nicolewhite/cycli>`_:  A Command Line Interface for Cypher.\n- `crash <https://github.com/crate/crash>`_:  Crate command line client.\n- `vcli <https://github.com/dbcli/vcli>`_: Vertica client.\n- `aws-shell <https://github.com/awslabs/aws-shell>`_: An integrated shell for working with the AWS CLI.\n- `softlayer-python <https://github.com/softlayer/softlayer-python>`_: A command-line interface to manage various SoftLayer products and services.\n- `ipython <http://github.com/ipython/ipython/>`_: The IPython REPL\n- `click-repl <https://github.com/click-contrib/click-repl>`_: Subcommand REPL for click apps.\n- `haxor-news <https://github.com/donnemartin/haxor-news>`_: A Hacker News CLI.\n- `gitsome <https://github.com/donnemartin/gitsome>`_: A Git/Shell Autocompleter with GitHub Integration.\n- `http-prompt <https://github.com/eliangcs/http-prompt>`_: An interactive command-line HTTP client.\n- `coconut <http://coconut-lang.org/>`_: Functional programming in Python.\n- `Ergonomica <https://ergonomica.github.io/>`_: A Bash alternative written in Python.\n- `Kube-shell <https://github.com/cloudnativelabs/kube-shell>`_: Kubernetes shell: An integrated shell for working with the Kubernetes CLI\n- `mssql-cli <https://github.com/dbcli/mssql-cli>`_: A command-line client for Microsoft SQL Server.\n- `robotframework-debuglibrary <https://github.com/xyb/robotframework-debuglibrary>`_: A debug library and REPL for RobotFramework.\n- `ptrepl <https://github.com/imomaliev/ptrepl>`_: Run any command as REPL\n- `clipwdmgr <https://github.com/samisalkosuo/clipasswordmgr>`_: Command Line Password Manager.\n- `slacker <https://github.com/netromdk/slacker>`_: Easy access to the Slack API and admin of workspaces via REPL.\n- `EdgeDB <https://edgedb.com/>`_: The next generation object-relational database.\n- `pywit <https://github.com/wit-ai/pywit>`_: Python library for Wit.ai.\n- `objection <https://github.com/sensepost/objection>`_: Runtime Mobile Exploration.\n- `habu <https://github.com/portantier/habu>`_: Python Network Hacking Toolkit.\n- `nawano <https://github.com/rbw/nawano>`_: Nano cryptocurrency wallet\n- `athenacli <https://github.com/dbcli/athenacli>`_: A CLI for AWS Athena.\n- `vulcano <https://github.com/dgarana/vulcano>`_: A framework for creating command-line applications that also runs in REPL mode.\n\nFull screen applications:\n\n- `pymux <http://github.com/prompt-toolkit/pymux/>`_: A terminal multiplexer (like tmux) in pure Python.\n- `pyvim <http://github.com/prompt-toolkit/pyvim/>`_: A Vim clone in pure Python.\n- `freud <http://github.com/stloma/freud/>`_: REST client backed by SQLite for storing servers\n- `pypager <https://github.com/prompt-toolkit/pypager>`_: A $PAGER in pure Python (like \"less\").\n- `kubeterminal <https://github.com/samisalkosuo/kubeterminal>`_: Kubectl helper tool.\n\nLibraries:\n\n- `ptterm <https://github.com/prompt-toolkit/ptterm>`_: A terminal emulator\n  widget for prompt_toolkit.\n- `PyInquirer <https://github.com/CITGuru/PyInquirer/>`_: A Python library that\n  wants to make it easy for existing Inquirer.js users to write immersive\n  command line applications in Python.\n\n(Want your own project to be listed here? Please create a GitHub issue.)\n\n\nPhilosophy\n**********\n\nThe source code of ``prompt_toolkit`` should be readable, concise and\nefficient. We prefer short functions focusing each on one task and for which\nthe input and output types are clearly specified. We mostly prefer composition\nover inheritance, because inheritance can result in too much functionality in\nthe same object. We prefer immutable objects where possible (objects don't\nchange after initialization). Reusability is important. We absolutely refrain\nfrom having a changing global state, it should be possible to have multiple\nindependent instances of the same code in the same process. The architecture\nshould be layered: the lower levels operate on primitive operations and data\nstructures giving -- when correctly combined -- all the possible flexibility;\nwhile at the higher level, there should be a simpler API, ready-to-use and\nsufficient for most use cases. Thinking about algorithms and efficiency is\nimportant, but avoid premature optimization.\n\n\nSpecial thanks to\n*****************\n\n- `Pygments <http://pygments.org/>`_: Syntax highlighter.\n- `wcwidth <https://github.com/jquast/wcwidth>`_: Determine columns needed for a wide characters.\n\n.. |Build Status| image:: https://api.travis-ci.org/prompt-toolkit/python-prompt-toolkit.svg?branch=master\n    :target: https://travis-ci.org/prompt-toolkit/python-prompt-toolkit#\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/prompt_toolkit.svg\n    :target: https://pypi.python.org/pypi/prompt-toolkit/\n    :alt: Latest Version\n\n.. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true\n    :target: https://ci.appveyor.com/project/prompt-toolkit/python-prompt-toolkit/\n\n.. |RTD| image:: https://readthedocs.org/projects/python-prompt-toolkit/badge/\n    :target: https://python-prompt-toolkit.readthedocs.io/en/master/\n\n.. |License| image:: https://img.shields.io/github/license/prompt-toolkit/python-prompt-toolkit.svg\n    :target: https://github.com/prompt-toolkit/python-prompt-toolkit/blob/master/LICENSE\n\n.. |Codecov| image:: https://codecov.io/gh/prompt-toolkit/python-prompt-toolkit/branch/master/graphs/badge.svg?style=flat\n    :target: https://codecov.io/gh/prompt-toolkit/python-prompt-toolkit/\n\n\nOther libraries and implementations in other languages\n******************************************************\n\n- `go-prompt <https://github.com/c-bata/go-prompt>`_: building a powerful\n  interactive prompt in Go, inspired by python-prompt-toolkit.\n- `urwid <http://urwid.org/>`_: Console user interface library for Python.\n\n\n",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/hotoffthehamster/python-prompt-toolkit",
        "keywords": "",
        "license": "BSD-3-Clause",
        "maintainer": "",
        "maintainer_email": "",
        "name": "prompt-toolkit-dob",
        "package_url": "https://pypi.org/project/prompt-toolkit-dob/",
        "platform": "",
        "project_url": "https://pypi.org/project/prompt-toolkit-dob/",
        "project_urls": {
            "Homepage": "https://github.com/hotoffthehamster/python-prompt-toolkit"
        },
        "release_url": "https://pypi.org/project/prompt-toolkit-dob/2.0.9/",
        "requires_dist": [
            "six (>=1.9.0)",
            "wcwidth"
        ],
        "requires_python": "",
        "summary": "Library for building powerful interactive command lines in Python",
        "version": "2.0.9"
    },
    "last_serial": 4848840,
    "releases": {
        "2.0.9": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4fec40d3d51a9632fe175bdcee4d234b",
                    "sha256": "70d747b9051c00f7123624abd871a1e4b707ab66ec3dac7f1455d50812263f27"
                },
                "downloads": -1,
                "filename": "prompt_toolkit_dob-2.0.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4fec40d3d51a9632fe175bdcee4d234b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 340550,
                "upload_time": "2019-02-21T06:39:11",
                "upload_time_iso_8601": "2019-02-21T06:39:11.425512Z",
                "url": "https://files.pythonhosted.org/packages/01/fa/b2687a78d1ee721971522d6a18b0b8c8fa9d0d23cafe993f4fc383b099ca/prompt_toolkit_dob-2.0.9-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d32417ec4eb39bc74070525dc764da53",
                    "sha256": "7b2a9c60a1fad7ad5c41542a2013be917c92acd79421d2b0791494551d25b2fc"
                },
                "downloads": -1,
                "filename": "prompt_toolkit-dob-2.0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "d32417ec4eb39bc74070525dc764da53",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 348661,
                "upload_time": "2019-02-21T06:39:14",
                "upload_time_iso_8601": "2019-02-21T06:39:14.298466Z",
                "url": "https://files.pythonhosted.org/packages/ca/9f/2f8a844066efe9dfdd0a6521281974e941e8aedd81bf25b691de83278ae9/prompt_toolkit-dob-2.0.9.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "4fec40d3d51a9632fe175bdcee4d234b",
                "sha256": "70d747b9051c00f7123624abd871a1e4b707ab66ec3dac7f1455d50812263f27"
            },
            "downloads": -1,
            "filename": "prompt_toolkit_dob-2.0.9-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "4fec40d3d51a9632fe175bdcee4d234b",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 340550,
            "upload_time": "2019-02-21T06:39:11",
            "upload_time_iso_8601": "2019-02-21T06:39:11.425512Z",
            "url": "https://files.pythonhosted.org/packages/01/fa/b2687a78d1ee721971522d6a18b0b8c8fa9d0d23cafe993f4fc383b099ca/prompt_toolkit_dob-2.0.9-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "d32417ec4eb39bc74070525dc764da53",
                "sha256": "7b2a9c60a1fad7ad5c41542a2013be917c92acd79421d2b0791494551d25b2fc"
            },
            "downloads": -1,
            "filename": "prompt_toolkit-dob-2.0.9.tar.gz",
            "has_sig": false,
            "md5_digest": "d32417ec4eb39bc74070525dc764da53",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 348661,
            "upload_time": "2019-02-21T06:39:14",
            "upload_time_iso_8601": "2019-02-21T06:39:14.298466Z",
            "url": "https://files.pythonhosted.org/packages/ca/9f/2f8a844066efe9dfdd0a6521281974e941e8aedd81bf25b691de83278ae9/prompt_toolkit-dob-2.0.9.tar.gz"
        }
    ]
}