{
    "info": {
        "author": "Aidan Melen",
        "author_email": "aidan.l.melen@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 3 - Alpha",
            "Intended Audience :: Developers",
            "Intended Audience :: System Administrators",
            "License :: OSI Approved :: Apache Software License",
            "Operating System :: MacOS",
            "Operating System :: Microsoft :: Windows",
            "Operating System :: POSIX",
            "Programming Language :: Python :: 2",
            "Programming Language :: Python :: 2.7",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.7"
        ],
        "description": "-------\nbastion\n-------\n\n-----------\nDescription\n-----------\n\n`bastion` extends the default behavior of `using an IAM role in the awscli`_ by caching STS credentials for up to 12 hours. Then we can securely use `IAM roles with the awscli`_ through the bastion account without needing to re-enter the mfa code.\n\n-------\nInstall\n-------\n\n::\n\n    pip install aws-bastion\n\n---------\nConfigure\n---------\n\n*~/.aws/cli/alias*::\n\n    [toplevel]\n\n    bsation =\n        !f() {\n            bastion\n        }; f\n\n*~/.aws/credentials*::\n\n    # (required) aws bastion profiles\n\n    [bastion] # these are fake credentials\n    aws_access_key_id = ASIA554SXDVIHKO5ACW2\n    aws_secret_access_key = VLJQKLEqs37HCDG4HgSDrxl1vLNrk9Is8gm0VNfA\n\n    [bastion-sts]\n    mfa_serial = arn:aws:iam::123456789012:mfa/aidan-melen\n    credential_process = aws bastion\n    source_profile = bastion\n\n\n    # (optional) aws assume role profiles\n\n    [dev]\n    role_arn = arn:aws:iam::234567890123:role/admin\n    source_profile = bastion-sts\n\n    [stage]\n    role_arn = arn:aws:iam::345678901234:role/poweruser\n    source_profile = bastion-sts\n\n    [prod]\n    role_arn = arn:aws:iam::456789012345:role/spectator\n    source_profile = bastion-sts\n\n*~/.aws/config*::\n\n    [default]\n    region = us-west-2\n    output = json\n\n-----\nUsage\n-----\n\nRun awscli commands normally and the `credential_process` will handle the bastion mfa::\n\n    $ aws sts get-caller-identity --profile dev\n    {\n        \"UserId\": \"AROAICXOEQ536RVKSK7LW:botocore-session-1234567890\",\n        \"Account\": \"123456789012\",\n        \"Arn\": \"arn:aws:sts::234567890123:assumed-role/admin/botocore-session-1234567890\"\n    }\n\n    $ aws sts get-caller-identity --profile stage\n    {\n        \"UserId\": \"ASIA554SWZVIOJNP7FPTS:botocore-session-2345678901\",\n        \"Account\": \"345678901234\",\n        \"Arn\": \"arn:aws:sts::345678901234:assumed-role/poweruser/botocore-session-2345678901\"\n    }\n\n    $ aws sts get-caller-identity --profile prod\n    {\n        \"UserId\": \"ASIA554BTZVILOXNQR5CD:botocore-session-3456789012\",\n        \"Account\": \"456789012345\",\n        \"Arn\": \"arn:aws:sts::456789012345:assumed-role/spectator/botocore-session-3456789012\"\n    }\n\n.. _`using an IAM role in the awscli`: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html\n.. _`IAM roles with the awscli`: https://docs.aws.amazon.com/cli/latest/topic/config-vars.html#using-aws-iam-roles",
        "description_content_type": "text/x-rst",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/aidanmelen/aws_bastion",
        "keywords": "",
        "license": "Apache",
        "maintainer": "",
        "maintainer_email": "",
        "name": "aws-bastion",
        "package_url": "https://pypi.org/project/aws-bastion/",
        "platform": "",
        "project_url": "https://pypi.org/project/aws-bastion/",
        "project_urls": {
            "Homepage": "https://github.com/aidanmelen/aws_bastion"
        },
        "release_url": "https://pypi.org/project/aws-bastion/0.1.0/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "bastion extends the default behavior of using an IAM role in the awscli by caching STS credentials for up to 12 hours. Then we can securely use IAM roles with the awscli through the bastion account without needing to re-enter the mfa code.",
        "version": "0.1.0"
    },
    "last_serial": 5801592,
    "releases": {
        "0.1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1cbef176415a08710003fb2301dcd02a",
                    "sha256": "1f43c935e60d78d6ae50db1f3688e7ad51277c3adc4308f81d7549b115758b3c"
                },
                "downloads": -1,
                "filename": "aws_bastion-0.1.0.macosx-10.14-x86_64.tar.gz",
                "has_sig": false,
                "md5_digest": "1cbef176415a08710003fb2301dcd02a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2314,
                "upload_time": "2019-09-09T04:05:53",
                "url": "https://files.pythonhosted.org/packages/32/ef/836f191dad9bcb4d52a38c180ffd44712b7f8b05c781d43d9ca5e7da5043/aws_bastion-0.1.0.macosx-10.14-x86_64.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "1cbef176415a08710003fb2301dcd02a",
                "sha256": "1f43c935e60d78d6ae50db1f3688e7ad51277c3adc4308f81d7549b115758b3c"
            },
            "downloads": -1,
            "filename": "aws_bastion-0.1.0.macosx-10.14-x86_64.tar.gz",
            "has_sig": false,
            "md5_digest": "1cbef176415a08710003fb2301dcd02a",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 2314,
            "upload_time": "2019-09-09T04:05:53",
            "url": "https://files.pythonhosted.org/packages/32/ef/836f191dad9bcb4d52a38c180ffd44712b7f8b05c781d43d9ca5e7da5043/aws_bastion-0.1.0.macosx-10.14-x86_64.tar.gz"
        }
    ]
}