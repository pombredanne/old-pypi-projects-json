{
    "info": {
        "author": "Bill Lotter",
        "author_email": "contact@coxlab.org",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 5 - Production/Stable",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: MIT License",
            "Operating System :: Microsoft :: Windows",
            "Operating System :: POSIX",
            "Operating System :: Unix",
            "Programming Language :: Python",
            "Programming Language :: Python :: 2.7",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7",
            "Programming Language :: Python :: Implementation :: CPython",
            "Programming Language :: Python :: Implementation :: PyPy",
            "Topic :: Utilities"
        ],
        "description": "Installation\n============\n\nIf prednet has been uploaded to a devpi instance your pip is connected to, then you can install with::\n\n    pip install prednet\n\nYou can always install the bleeding-edge updates with::\n\n    pip install git+ssh://git@github.com/coxlab/prednet.git@master\n\n\nprednet\n=======\n\nCode and models accompanying `Deep Predictive Coding Networks for Video\nPrediction and Unsupervised Learning`_ by Bill Lotter, Gabriel Kreiman,\nand David Cox.\n\nThe PredNet is a deep recurrent convolutional neural network that is\ninspired by the neuroscience concept of predictive coding (Rao and\nBallard, 1999; Friston, 2005). **Check out example prediction\nvideos**\\ `here`_\\ **.**\n\nThe architecture is implemented as a custom layer :sup:`1` in `Keras`_. Code and\nmodel data is compatible with Keras 2.0 and Python 2.7 and 3.6. The\nlatest version has been tested on Keras 2.2.4 with Tensorflow 1.6. For\nprevious versions of the code compatible with Keras 1.2.1, use fbcdc18.\nTo convert old PredNet model files and weights for Keras 2.0\ncompatibility, see ``convert_model_to_keras2`` in ``keras_utils.py``.\n\nKITTI Demo\n----------\n\nCode is included for training the PredNet on the raw `KITTI`_ dataset.\nWe include code for downloading and processing the data, as well as\ntraining and evaluating the model. The preprocessed data and can also be\ndownloaded directly using ``download_data.sh`` and the **trained\nweights** by running ``download_models.sh``. The model download will\ninclude the original weights trained for t+1 prediction, the fine-tuned\nweights trained to extrapolate predictions for multiple timesteps, and\nthe \"Lall\" weights trained with an 0.1 loss weight on upper layers (see\npaper for details).\n\nSteps\n~~~~~\n\n1. **Download/process data**\n\n   .. code:: bash\n\n      python process_kitti.py\n\n   This will scrape the KITTI website to download the raw data from the\n   city, residential, and road categories (~165 GB) and then process the\n   images (cropping, downsampling). Alternatively, the processed data\n   (~3 GB) can be directly downloaded by executing ``download_data.sh``\n\n   It's unclear how to fix the \"RuntimeError: Cannot open file.\", so\n   for now use LanaSina's ``kitti_hkl`` at\n   https://figshare.com/articles/KITTI_hkl_files/7985684\n   https://github.com/coxlab/prednet/issues/53\n\n2. **Train model**\n\n   .. code:: bash\n\n      $ python kitti_train.py\n      Using TensorFlow backend.\n      Epoch 1/150\n       56/125 [============>.................] - ETA: 8:29 - loss: 0.0649\n\n   This will train a PredNet model for t+1 prediction. See `Keras FAQ`_\n   on how to run using a GPU. **To download pre-trained weights**, run\n   ``download_models.sh``\n\n   Currently there are the following warnings on newer versions of TensorFlow:\n\n   .. code:: bash\n\n      site-packages/keras/backend/tensorflow_backend.py:74: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n      site-packages/keras/backend/tensorflow_backend.py:517: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n      site-packages/keras/backend/tensorflow_backend.py:4138: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n      site-packages/keras/backend/tensorflow_backend.py:2018: The name tf.image.resize_nearest_neighbor is deprecated. Please use tf.compat.v1.image.resize_nearest_neighbor instead.\n      site-packages/keras/backend/tensorflow_backend.py:2018: The name tf.image.resize_nearest_neighbor is deprecated. Please use tf.compat.v1.image.resize_nearest_neighbor instead.\n      site-packages/keras/backend/tensorflow_backend.py:3976: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n      site-packages/keras/backend/tensorflow_backend.py:174: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n      site-packages/keras/backend/tensorflow_backend.py:181: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n      site-packages/keras/optimizers.py:790: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n      site-packages/tensorflow/python/ops/math_grad.py:1250: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n      Instructions for updating:\n      Use tf.where in 2.0, which has the same broadcast rule as np.where\n\n\n\n3. **Evaluate model**\n\n   .. code:: bash\n\n      python kitti_evaluate.py\n\n   This will output the mean-squared error for predictions as well as\n   make plots comparing predictions to ground-truth.\n\nFeature Extraction\n~~~~~~~~~~~~~~~~~~\n\nExtracting the intermediate features for a given layer in the PredNet\ncan be done using the appropriate ``output_mode`` argument. For example,\nto extract the hidden state of the LSTM (the \"Representation\" units) in\nthe lowest layer, use ``output_mode = 'R0'``. More details can be found\nin the PredNet docstring.\n\nMulti-Step Prediction\n~~~~~~~~~~~~~~~~~~~~~\n\nThe PredNet argument ``extrap_start_time`` can be used to force\nmulti-step prediction. Starting at this time step, the prediction from\nthe previous time step will be treated as the actual input. For example,\nif the model is run on a sequence of 15 timesteps with\n``extrap_start_time = 10``, the last output will correspond to a t+5\nprediction. In the paper, we train in this setting starting from the\noriginal t+1 trained weights (see ``kitti_extrap_finetune.py``), and the\nresulting fine-tuned weights are included in ``download_models.sh``.\nNote that when training with extrapolation, the \"errors\" are no longer\ntied to ground truth, so the loss should be calculated on the pixel\npredictions themselves. This can be done by using\n``output_mode = 'prediction'``, as illustrated in\n``kitti_extrap_finetune.py``.\n\nAdditional Notes\n~~~~~~~~~~~~~~~~\n\nWhen training on a new dataset, the image size has to be divisible by\n2^(nb of layers - 1) because of the cyclical 2x2 max-pooling and\nupsampling operations.\n\n:sup:`1` Note on implementation: PredNet inherits from the Recurrent layer\nclass, i.e. it has an internal state and a step function. Given the\ntop-down then bottom-up update sequence, it must currently be\nimplemented in Keras as essentially a 'super' layer where all layers in\nthe PredNet are in one PredNet 'layer'. This is less than ideal, but it\nseems like the most efficient way as of now. We welcome suggestions if\nanyone thinks of a better implementation.\n\n.. _Deep Predictive Coding Networks for Video Prediction and Unsupervised Learning: https://arxiv.org/abs/1605.08104\n.. _here: https://coxlab.github.io/prednet/\n.. _Keras: http://keras.io/\n.. _KITTI: http://www.cvlibs.net/datasets/kitti/\n.. _Keras FAQ: http://keras.io/getting-started/faq/#how-can-i-run-keras-on-gpu\n\nDocumentation\n=============\n\n\nhttps://coxlab.github.io/prednet/\n\n\nDevelopment\n===========\n\nTo run the all tests run::\n\n    tox\n\nNote, to combine the coverage data from all the tox environments run:\n\n.. list-table::\n    :widths: 10 90\n    :stub-columns: 1\n\n    - - Windows\n      - ::\n\n            set PYTEST_ADDOPTS=--cov-append\n            tox\n\n    - - Other\n      - ::\n\n            PYTEST_ADDOPTS=--cov-append tox\n\n\nChangelog\n=========\n\n0.0.0 (8 July 2016)\n-------------------\n\n* First release on PyPI.\n\n\n",
        "description_content_type": "",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/coxlab/prednet",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "prednet",
        "package_url": "https://pypi.org/project/prednet/",
        "platform": "",
        "project_url": "https://pypi.org/project/prednet/",
        "project_urls": {
            "Changelog": "https://prednet.readthedocs.io/en/latest/changelog.html",
            "Documentation": "https://prednet.readthedocs.io/",
            "Homepage": "https://github.com/coxlab/prednet",
            "Issue Tracker": "https://github.com/coxlab/prednet/issues"
        },
        "release_url": "https://pypi.org/project/prednet/0.1.dev197/",
        "requires_dist": [
            "tensorflow-gpu (<2.0,>=1.13.1)",
            "Keras (>=2.2.4)",
            "requests",
            "bs4",
            "imageio",
            "scipy (>=1.2.0)",
            "pillow",
            "scikit-video",
            "matplotlib",
            "hickle",
            "pytest"
        ],
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
        "summary": "Code and models accompanying Deep Predictive Coding Networks for Video Prediction and Unsupervised Learning by Bill Lotter, Gabriel Kreiman, and David Cox. The PredNet is a deep recurrent convolutional neural network that is inspired by the neuroscience concept of predictive coding (Rao and Ballard, 1999; Friston, 2005).",
        "version": "0.1.dev197"
    },
    "last_serial": 6483445,
    "releases": {
        "0.1.dev196": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b34312b33704ce380242ff0b7f07836c",
                    "sha256": "b5ce281b62a4cff0a86b7e1f9cbfe039e51aceceb464ce81fedab3ad25ca4577"
                },
                "downloads": -1,
                "filename": "prednet-0.1.dev196-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b34312b33704ce380242ff0b7f07836c",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
                "size": 571612,
                "upload_time": "2020-01-19T18:06:05",
                "upload_time_iso_8601": "2020-01-19T18:06:05.134998Z",
                "url": "https://files.pythonhosted.org/packages/a8/1c/0cadeaf9dfbf2531dbf961c09e0d03fbdf7508e91aa1fb9838815c75f6cf/prednet-0.1.dev196-py2.py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "126468c1102ba38904ac24c1bef5aed4",
                    "sha256": "86ee42f1bc4278e74a3eea04426a8a2bc185b74760bb3e29bbdd85979826d707"
                },
                "downloads": -1,
                "filename": "prednet-0.1.dev196.tar.gz",
                "has_sig": false,
                "md5_digest": "126468c1102ba38904ac24c1bef5aed4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
                "size": 584938,
                "upload_time": "2020-01-19T18:06:09",
                "upload_time_iso_8601": "2020-01-19T18:06:09.186780Z",
                "url": "https://files.pythonhosted.org/packages/80/29/5cf61700a61c9def383fac390902e8d7fa346b8865a7e5a841b1dafe6b96/prednet-0.1.dev196.tar.gz"
            }
        ],
        "0.1.dev197": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "01976be86cbe2879b4c5ed48adf8b541",
                    "sha256": "618eeab7472cefa4fab23ced23deb89d6815a92fc16ac85520b7bff6fb214d43"
                },
                "downloads": -1,
                "filename": "prednet-0.1.dev197-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "01976be86cbe2879b4c5ed48adf8b541",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
                "size": 571617,
                "upload_time": "2020-01-19T19:23:36",
                "upload_time_iso_8601": "2020-01-19T19:23:36.639590Z",
                "url": "https://files.pythonhosted.org/packages/98/a5/4e0e4a1a2d0f1a736d5c0784ec59eef5e7bd9dff3a3b8df541997d9c2846/prednet-0.1.dev197-py2.py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "087f828e472b5b9be0d39faaea6cc364",
                    "sha256": "ef1a23948486a030a5e55b570ecf27a7c1a6944ab0e4d04c921ef70033fbde05"
                },
                "downloads": -1,
                "filename": "prednet-0.1.dev197.tar.gz",
                "has_sig": false,
                "md5_digest": "087f828e472b5b9be0d39faaea6cc364",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
                "size": 584954,
                "upload_time": "2020-01-19T19:23:39",
                "upload_time_iso_8601": "2020-01-19T19:23:39.936417Z",
                "url": "https://files.pythonhosted.org/packages/a3/0a/18b4d398e7bc41826e91ab128a80b1ae56ebc28ec78471cf3ba49d7083b9/prednet-0.1.dev197.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "01976be86cbe2879b4c5ed48adf8b541",
                "sha256": "618eeab7472cefa4fab23ced23deb89d6815a92fc16ac85520b7bff6fb214d43"
            },
            "downloads": -1,
            "filename": "prednet-0.1.dev197-py2.py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "01976be86cbe2879b4c5ed48adf8b541",
            "packagetype": "bdist_wheel",
            "python_version": "py2.py3",
            "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
            "size": 571617,
            "upload_time": "2020-01-19T19:23:36",
            "upload_time_iso_8601": "2020-01-19T19:23:36.639590Z",
            "url": "https://files.pythonhosted.org/packages/98/a5/4e0e4a1a2d0f1a736d5c0784ec59eef5e7bd9dff3a3b8df541997d9c2846/prednet-0.1.dev197-py2.py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "087f828e472b5b9be0d39faaea6cc364",
                "sha256": "ef1a23948486a030a5e55b570ecf27a7c1a6944ab0e4d04c921ef70033fbde05"
            },
            "downloads": -1,
            "filename": "prednet-0.1.dev197.tar.gz",
            "has_sig": false,
            "md5_digest": "087f828e472b5b9be0d39faaea6cc364",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*",
            "size": 584954,
            "upload_time": "2020-01-19T19:23:39",
            "upload_time_iso_8601": "2020-01-19T19:23:39.936417Z",
            "url": "https://files.pythonhosted.org/packages/a3/0a/18b4d398e7bc41826e91ab128a80b1ae56ebc28ec78471cf3ba49d7083b9/prednet-0.1.dev197.tar.gz"
        }
    ]
}