{
    "info": {
        "author": "Benjamin Cai",
        "author_email": "ycai11@stevens.edu",
        "bugtrack_url": null,
        "classifiers": [
            "License :: OSI Approved :: MIT License",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.7"
        ],
        "description": "# Error Distinguishing Program for GEDCOM\n\nThis is a project for the SSW555 of Stevens Institute of Technology taught by geekiest professor Jim Rowland :P\n\n## 1. Intro of GEDCOM\n\nGEDCOM is a standard format for genealogy data developed by The Church of Jesus Christ of Latter-day Saints.\n\n### 1.1 Entities\n\nGEDCOM identifies **two** major entities:\n\n- **individuals**\n- **families**\n\nCharacteristics of **individuals**:\n\n- Unique individual ID\n- Name\n- Sex/Gender\n- Birth Date\n- Death Date\n- Unique Family ID where the individual is a *child*\n- Unique Family ID where the individual is a *spouse*\n\nCharacteristics of **families**:\n\n- Unique family ID\n- Unique individual ID of husband\n- Unique individual ID of wife\n- Unique individual ID of each child in the family\n- Marriage date\n- Divorce date, if appropriate\n\n### 1.2 GEDCOM file format\n\nGEDCOM is a line-oriented text file format where each line has three parts separated by blank space:\n\n1. **level number** (0, 1 or 2)\n2. **tag** (a string of 3 or 4 characters, usually UPPER CASE)\n3. **arguments** (an optional character string)\n\nRecords with level number 1 or 2 are always in the form:\n\n```sh\n<level_number> <tag> <arguments>\n```\n\nRecords with level number 0 has one of two different forms:\n\n  1. `0 <id> <tag>`  \n  where `<tag>` in `('INDI', 'FAM')`  \n  `<id>` is a unique identifier for individual or family.\n\n  2. `0 <tag> <arguments that may be ignored>`  \n  where `<tag>` in `('HEAD', 'TRLR', 'NOTE')`\n\n## 2 Project Precondition\n\n### 2.1 Assumptions\n\nWe will assume that:\n\n- The four records that require a date (BIRT, DEAT, DIV, MARR) will always be followed by a DATE record.\n- The sex and birth date of every individual will be specified exactly once. (You cannot change your sex.)\n- For each family specified in the file, the marriage and all family members will be specified.\n- Each individual will be linked to every family where they are a child, for all those families that are described by the GEDCOM file.\n- Each individual will be linked to every family where they are a spouse, for all those families that are described by the GEDCOM file.\n\nWe will make some assumptions when records are missing from the file:\n\n- We will assume that an individual is alive if there is no DEAT record.\n- We will assume no divorce has occurred for a marriage if there is no DIV record.\n- Some families may not be specified, since the parents of the family are not specified in the file.\n- This last condition describes the top of the genealogical tree - it has to stop somewhere.\n\n### 2.2 Error Class\n\nWe are writing a **program** that looks for ***Error*** and ***Anomalies***.\n\n- ***Errors*** are combinations of records that cannot logically all be true:\n\n  - Death date occurring before birth date\n  - Marriage of a dead person\n  - Female husband in a family\n  - **Note that you get no credit for detecting syntax errors. All data is assumed to bec syntactically correct.**\n\n- ***Anomalies*** are combinations of records that appear to be erroneous, but might actually be true:\n\n  - Birth of a child before his/her parents are married (potentially embarrassing if true)\n  - Being a spouse in two marriages at the same time (polygamy, illegal in most places)\n\nWe are going to define two `class`es to represent errors and anomalies respectively.\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "",
        "keywords": "Stevens_Institute_of_Technology SSW555 CS555 James_Rowland his_courses_are_all_worth_to_choose!",
        "license": "",
        "maintainer": "",
        "maintainer_email": "",
        "name": "GEDCOM-Benji",
        "package_url": "https://pypi.org/project/GEDCOM-Benji/",
        "platform": "",
        "project_url": "https://pypi.org/project/GEDCOM-Benji/",
        "project_urls": null,
        "release_url": "https://pypi.org/project/GEDCOM-Benji/0.0.0/",
        "requires_dist": [
            "Click",
            "tabulate"
        ],
        "requires_python": "",
        "summary": "Course project of SSW555.",
        "version": "0.0.0"
    },
    "last_serial": 4747643,
    "releases": {
        "0.0.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8266a475806023b8add31d5ba4fd6b53",
                    "sha256": "c1018c673e5b9c6074fdf21c1605848056b5cae1f22395e4bfe720d74d4da1a4"
                },
                "downloads": -1,
                "filename": "GEDCOM_Benji-0.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8266a475806023b8add31d5ba4fd6b53",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4515,
                "upload_time": "2019-01-28T00:40:44",
                "url": "https://files.pythonhosted.org/packages/f9/63/3ab4d1cdc22ff54db13450ac200f41cc6f575f3d24fae33eeb3f829c5058/GEDCOM_Benji-0.0.0-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b317e663cd4a40da3ecca247262d1b2b",
                    "sha256": "a756b77c46094a85dbf445e6c706b997dc3f670d0f6ca913bfe65b2b49e0b9ae"
                },
                "downloads": -1,
                "filename": "GEDCOM-Benji-0.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "b317e663cd4a40da3ecca247262d1b2b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4143,
                "upload_time": "2019-01-28T00:40:46",
                "url": "https://files.pythonhosted.org/packages/63/42/61e95f8cde1faea964fb9dba2cd7fa43447b2426b05e7aef0ea97fd3d6c9/GEDCOM-Benji-0.0.0.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "8266a475806023b8add31d5ba4fd6b53",
                "sha256": "c1018c673e5b9c6074fdf21c1605848056b5cae1f22395e4bfe720d74d4da1a4"
            },
            "downloads": -1,
            "filename": "GEDCOM_Benji-0.0.0-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "8266a475806023b8add31d5ba4fd6b53",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 4515,
            "upload_time": "2019-01-28T00:40:44",
            "url": "https://files.pythonhosted.org/packages/f9/63/3ab4d1cdc22ff54db13450ac200f41cc6f575f3d24fae33eeb3f829c5058/GEDCOM_Benji-0.0.0-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "b317e663cd4a40da3ecca247262d1b2b",
                "sha256": "a756b77c46094a85dbf445e6c706b997dc3f670d0f6ca913bfe65b2b49e0b9ae"
            },
            "downloads": -1,
            "filename": "GEDCOM-Benji-0.0.0.tar.gz",
            "has_sig": false,
            "md5_digest": "b317e663cd4a40da3ecca247262d1b2b",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 4143,
            "upload_time": "2019-01-28T00:40:46",
            "url": "https://files.pythonhosted.org/packages/63/42/61e95f8cde1faea964fb9dba2cd7fa43447b2426b05e7aef0ea97fd3d6c9/GEDCOM-Benji-0.0.0.tar.gz"
        }
    ]
}