{
    "info": {
        "_pypi_hidden": false,
        "_pypi_ordering": 0,
        "author": "Applied Brain Research",
        "author_email": "info@appliedbrainresearch.com",
        "bugtrack_url": null,
        "cheesecake_code_kwalitee_id": null,
        "cheesecake_documentation_id": null,
        "cheesecake_installability_id": null,
        "classifiers": [],
        "description": "=========================\nA distilled Nengo backend\n=========================\n\nThis is an example backend implementation for Nengo.\n\nIt does not require any additional dependencies;\ninstead, this backend is the\n`reference backend <https://github.com/nengo/nengo>`_\ndistilled into the essential parts.\nAs such, it is designed to be\nsimpler, easier to understand,\nand easier to debug.\nIf you're interested in writing your own Nengo backend,\nthen this implementation is likely a better\nstarting point than the reference backend.\n\n`nengo_distilled` takes a neural model described\nusing the Nengo framework,\nbuilds it into an actual neural simulation,\nand runs the simulation. For example::\n\n   import numpy as np\n   import nengo\n\n   # define the model\n   model = nengo.Network()\n   with model:\n       stim = nengo.Node(np.sin)\n       a = nengo.Ensemble(n_neurons=100, dimensions=1)\n       b = nengo.Ensemble(n_neurons=100, dimensions=1)\n       nengo.Connection(stim, a)\n       nengo.Connection(a, b, function=lambda x: x**2, synapse=0.01)\n\n       probe_a = nengo.Probe(a, synapse=0.01)\n       probe_b = nengo.Probe(b, synapse=0.01)\n\n   import nengo_distilled\n   # build the model\n   sim = nengo_distilled.Simulator(model)\n   # run the model\n   sim.run(10)\n\n   # plot the results\n   import matplotlib.pyplot as plt\n   plt.plot(sim.trange(), sim.data[probe_a])\n   plt.plot(sim.trange(), sim.data[probe_b])\n   plt.show()\n\nInstallation\n============\n\nThe easiest way to install is to use ``pip``.\n\n.. code-block:: bash\n\n   pip install nengo_distilled\n\nIf that doesn't work, then try\ninstalling ``nengo`` manually,\nusing the instructions at\n`nengo/nengo <https://github.com/nengo/nengo>`_.\nThen, try ``pip install nengo_distilled`` again.\nIf that doesn't work, try a develop installation.\n\nDeveloper installation\n----------------------\n\nIf you want to make changes to ``nengo_distilled``,\nthen do the following.\n\n.. code-block:: bash\n\n   git clone https://github.com/nengo/nengo_distilled/\n   cd nengo_distilled\n   python setup.py develop --user\n\nIf you\u2019re using a ``virtualenv`` (recommended!)\nthen you can omit the ``--user`` flag.\n\n===============\nRelease History\n===============\n\n.. Changelog entries should follow this format:\n\n   version (release date)\n   ======================\n\n   **section**\n\n   - One-line description of change (link to Github issue/PR)\n\n.. Changes should be organized in one of several sections:\n\n   - API changes\n   - Improvements\n   - Behavioural changes\n   - Bugfixes\n   - Documentation\n\n0.1.0 (April 29, 2015)\n======================\n\nInitial release of Nengo Distilled!\nSupports Nengo 2.0.x on Python 2.6+ and 3.3+.",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": 0,
            "last_month": 0,
            "last_week": 0
        },
        "home_page": "https://github.com/nengo/nengo_distilled",
        "keywords": "",
        "license": "https://github.com/nengo/nengo_distilled/blob/master/LICENSE.md",
        "maintainer": "",
        "maintainer_email": "",
        "name": "nengo-distilled",
        "package_url": "http://pypi.python.org/pypi/nengo-distilled",
        "platform": "",
        "release_url": "http://pypi.python.org/pypi/nengo-distilled/0.1.0",
        "requires_python": "",
        "summary": "Distilled backend for Nengo.",
        "version": "0.1.0"
    },
    "releases": {
        "0.1.0": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e58f6aab8e06c6579537be4d1266dda3",
                    "sha256": "622a271b5ffe6f47c390293e1cf39593278a78a67bffb9288c36d9d7d49e994d"
                },
                "downloads": 0,
                "filename": "nengo_distilled-0.1.0.zip",
                "has_sig": false,
                "md5_digest": "e58f6aab8e06c6579537be4d1266dda3",
                "packagetype": "sdist",
                "path": "63/44/5bef67c36ba3db321bac5599b6b9c28d5add6776753b0f3f008dc54f505f/nengo_distilled-0.1.0.zip",
                "python_version": "source",
                "sha256_digest": "622a271b5ffe6f47c390293e1cf39593278a78a67bffb9288c36d9d7d49e994d",
                "size": 31967,
                "upload_time": "2018-03-23T15:04:03",
                "url": "https://pypi.python.org/packages/63/44/5bef67c36ba3db321bac5599b6b9c28d5add6776753b0f3f008dc54f505f/nengo_distilled-0.1.0.zip"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "e58f6aab8e06c6579537be4d1266dda3",
                "sha256": "622a271b5ffe6f47c390293e1cf39593278a78a67bffb9288c36d9d7d49e994d"
            },
            "downloads": 0,
            "filename": "nengo_distilled-0.1.0.zip",
            "has_sig": false,
            "md5_digest": "e58f6aab8e06c6579537be4d1266dda3",
            "packagetype": "sdist",
            "path": "63/44/5bef67c36ba3db321bac5599b6b9c28d5add6776753b0f3f008dc54f505f/nengo_distilled-0.1.0.zip",
            "python_version": "source",
            "sha256_digest": "622a271b5ffe6f47c390293e1cf39593278a78a67bffb9288c36d9d7d49e994d",
            "size": 31967,
            "upload_time": "2018-03-23T15:04:03",
            "url": "https://pypi.python.org/packages/63/44/5bef67c36ba3db321bac5599b6b9c28d5add6776753b0f3f008dc54f505f/nengo_distilled-0.1.0.zip"
        }
    ]
}