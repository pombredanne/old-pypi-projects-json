{
    "info": {
        "author": "Andrey Semenov",
        "author_email": "gatekeeper.mail@gmail.com",
        "bugtrack_url": null,
        "classifiers": [
            "Development Status :: 5 - Production/Stable",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: MIT License",
            "Natural Language :: English",
            "Natural Language :: Russian",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7",
            "Programming Language :: Python :: 3.8",
            "Programming Language :: Python :: 3 :: Only",
            "Topic :: Software Development :: Libraries :: Python Modules"
        ],
        "description": "# fastenum\nA fast Enum implementation for Python\n\nThe purpose is to replace Python3.4+ standard library Enum.\n\nThe main objective to using standard library's Enum is that it's super slow.\n\nFeatures implemented:\n- as in stdlib's enums all Enum members are instances of the Enum itself\n```python\ntype(LightEnum.ONE)\n# <class 'LightEnum'>\n```\n- all enum members have at least `name` and `value` properties; the `name` property\n is a string containing the class member's name itself; the `value` property contains the value\n  assigned\n ```python\nclass ValuesGivenEnum(metaclass=FastEnum):\n    ONE: 'ValuesGivenEnum' = 1\n    FOUR: 'ValuesGivenEnum' = 4\n    ELEVEN: 'ValuesGivenEnum' = 11\n\nValuesGivenEnum.FOUR\n# <ValuesGivenEnum.FOUR: 4>\nValuesGivenEnum.FOUR.value\n# 4\nValuesGivenEnum.FOUR.name\n# 'FOUR'\n```\n- a lightweight form of enum declaration is possible\n```python\nclass LightEnum(metaclass=FastEnum):\n    ONE: 'LightEnum'\n    TWO: 'LightEnum'\n    THREE: 'LightEnum'\n```\n When this form is used it is strictly required that members are \"type-hinted\"\n as instances of the enum class. Otherwise they will remain just as property/attributes\n annotations deep inside the `cls.__annotations__`\n\n- an enum could be accessed by value\n```python\nLightEnum(1)\n# <LightEnum.ONE: 1>\n```\n- or by name\n```python\nLightEnum['ONE']\n# <LightEnum.ONE: 1>\n```\n\n- it is possible to mix lightweight declaration and a value-provided one in the same class:\n```python\nclass MixedEnum(metaclass=FastEnum):\n    _ZERO_VALUED = 1\n    AUTO_ZERO: 'MixedEnum'\n    ONE: 'MixedEnum' = 1\n    AUTO_ONE: 'MixedEnum'\n    TWO: 'MixedEnum' = 2\n\nMixedEnum(1)\n# <MixedEnum.ONE: 1>\nMixedEnum.AUTO_ZERO\n# <MixedEnum.AUTO_ZERO: 0>\nMixedEnum.AUTO_ONE\n# <MixedEnum.ONE: 1>\n```\n When this form is used, if there are more than one Enum with the same value as a result (`MixedEnum.AUTO_ONE.value`\n and `MixedEnum.ONE.value` in this example) all subsequent enums are rendered as just aliases to the first declared\n (the order of declaration is: first value-provided enums then lightweight forms so auto-valued will always become\n aliases, not vice versa). The auto-valued enums value provider is independent from value-provided ones.\n\n- as shown in the previous example, a special attribute `_ZERO_VALUED` could be provided in class declaration;\n given it's value renders to `True` in boolean context auto-valued enums will start from zero instead of integer 1;\n The `_ZERO_VALUED` attribute is erased from the resulting enum type \n\n- an enum creation can be hooked with 'late-init'. If a special method `def __init_late(self): ...` is provided within\n enum class' declaration, it's run for every enum instance created after all of them are created successfully\n```python\nclass HookedEnum(metaclass=FastEnum):\n    halved_value: 'HookedEnum'\n\n    __slots__ = ('halved_value',)\n\n    def __init_late(self):\n        # noinspection PyTypeChecker\n        self.halved_value: 'HookedEnum' = self.__class__(self.value // 2)\n\n    ZERO: 'HookedEnum' = 0\n    ONE: 'HookedEnum' = 1\n    TWO: 'HookedEnum' = 2\n    THREE: 'HookedEnum' = 3\n\nHookedEnum.ZERO.halved_value\n#<HookedEnum.ZERO: 0>\nHookedEnum.ONE.halved_value\n#<HookedEnum.ZERO: 0>\nHookedEnum.TWO.halved_value\n#<HookedEnum.ONE: 1>\nHookedEnum.THREE.halved_value\n#<HookedEnum.ONE: 1>\n```\n\n- enums are singletons\n```python\nfrom pickle import dumps, loads\no = LightEnum.ONE\nr = loads(dumps(o))\nid(o)\n# 139649196736456\nid(r)\n# 139649196736456\no is r\n# True\n```\n- enums are hashable\n```python\nlist(LightEnum)\n# [<LightEnum.ONE: 1>, <LightEnum.TWO: 2>, <LightEnum.THREE: 3>]\nset(LightEnum)\n# {<LightEnum.ONE: 1>, <LightEnum.TWO: 2>, <LightEnum.THREE: 3>}\n```\n- enums are easily extended if one needs\n```python\nclass ExtendedEnum(metaclass=FastEnum):\n    description: Text\n    __slots__ = ('description',)\n\n    def __init__(self, value, description, name):\n        self.value = value\n        self.name = name\n        self.description = description\n\n    def describe(self):\n        return self.description\n\n    RED = 'red', 'a color of blood'\n    GREEN = 'green', 'a color of grass in the spring'\n\nExtendedEnum.GREEN\n# <ExtendedEnum.GREEN: green>\nstr(ExtendedEnum.GREEN)\n# 'ExtendedEnum.GREEN'\nExtendedEnum.GREEN.name\n# 'GREEN'\nExtendedEnum.GREEN.value\n# 'green'\nExtendedEnum.GREEN.description\n# 'a color of grass in the spring'\nExtendedEnum.GREEN.describe()\n# 'a color of grass in the spring'\n```\n In case an enum has extended set of fields it it must be guaranteed that the `__init__`\n method has the `name` argument in the last position. It's because enum instances are\n instantiated like `enumtype(*value, name=name)` where `value` is the right side of\n assignment in the code `RED = 'red', 'a color of blood'` (in case the right side is not\n a tuple-like object it is wrapped into tuple beforehand)\n- protected from modifications\n```python\ndel LightEnum.ONE\n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#  File \"fastenum.py\", line 81, in __delattr__\n#    self.__restrict_modification()\n#  File \"fastenum.py\", line 69, in __restrict_modification\n#    raise TypeError(f'Enum-like classes strictly prohibit changing any attribute/property after they are once set')\n#TypeError: Enum-like classes strictly prohibit changing any attribute/property after they are once set\ndel LightEnum.ONE.name\n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#  File \"fastenum.py\", line 69, in __restrict_modification\n#    raise TypeError(f'Enum-like classes strictly prohibit changing any attribute/property after they are once set')\n#TypeError: Enum-like classes strictly prohibit changing any attribute/property after they are once set\nExtendedEnum.GREEN.description = \"I've changed my mind, it's a colour of swamps\"\n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#  File \"fastenum.py\", line 69, in __restrict_modification\n#    raise TypeError(f'Enum-like classes strictly prohibit changing any attribute/property after they are once set')\n#TypeError: Enum-like classes strictly prohibit changing any attribute/property after they are once set\n```\n- protected from subclassing\n```python\nclass LightSub(LightEnum):\n    FOUR: 'LightSub'\n\n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#  File \"fastenum.py\", line 34, in __new__\n#    typ.__call__ = typ.__new__ = typ.get\n#  File \"fastenum.py\", line 76, in __setattr__\n#    self.__restrict_modification()\n#  File \"fastenum.py\", line 69, in __restrict_modification\n#    raise TypeError(f'Enum-like classes strictly prohibit changing any attribute/property after they are once set')\n#TypeError: Enum-like classes strictly prohibit changing any attribute/property after they are once set\n```\n- but you could declare a class providing no new values (the result will be just an alias):\n```python\nclass LightAlias(LightEnum):\n    pass\n\nLightAlias.ONE\n# <LightEnum.ONE: 1>\n```\n- and extensible in superclasses\n```python\nclass ExtEnumBase(metaclass=FastEnum):\n    description: Text\n\n    __slots__ = ('description',)\n\n    def __init__(self, value, description, name):\n        self.value = value\n        self.name = name\n        self.description = description\n\n\nclass ExtEnumOne(ExtEnumBase):\n    ONE = 1, 'First positive integer'\n    TWO = 2, 'Second positive integer'\n\n\nclass ExtEnumTwo(ExtEnumBase):\n    RED = 'red', 'A sunset'\n    GREEN = 'green', 'Allows to cross the road'\n```\n- faster than standard library's one\n```\nIn [2]: %timeit ValuesGivenEnum.FOUR\n21.4 ns \u00b1 0.196 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [3]: %timeit ValuesGivenEnum.FOUR.name\n30.3 ns \u00b1 0.121 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [4]: %timeit ValuesGivenEnum.FOUR.value\n30.4 ns \u00b1 0.166 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [5]: %timeit ValuesGivenEnum(4)\n111 ns \u00b1 0.599 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [6]: %timeit ValuesGivenEnum['FOUR']\n84.6 ns \u00b1 0.188 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n```\n compare that to\n```python\n# Classic enum\nfrom enum import Enum\nclass StdEnum(Enum):\n    ONE = 1\n    TWO = 2\n```\n```\nIn [7]: %timeit StdEnum.ONE\n69.2 ns \u00b1 0.195 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n\nIn [8]: %timeit StdEnum.ONE.name\n247 ns \u00b1 0.501 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n\nIn [9]: %timeit StdEnum.ONE.value\n249 ns \u00b1 1.43 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n\nIn [10]: %timeit StdEnum(1)\n380 ns \u00b1 3.74 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n\nIn [11]: %timeit StdEnum['ONE']\n134 ns \u00b1 0.246 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\n```\n  That is:\n   - 3 times faster on enum's member access\n   - ~8.5 times faster on enum's property (`name`, `value`) access\n   - 3 times faster on enum's access by val (call on enum's class `MyEnum(value)`)\n   - 1.5 times faster on enum's access by name (dict-like `MyEnum[name]`)\n\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/QratorLabs/fastenum",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "FastEnum-Meta",
        "package_url": "https://pypi.org/project/FastEnum-Meta/",
        "platform": "any",
        "project_url": "https://pypi.org/project/FastEnum-Meta/",
        "project_urls": {
            "Homepage": "https://github.com/QratorLabs/fastenum"
        },
        "release_url": "https://pypi.org/project/FastEnum-Meta/1.2.5/",
        "requires_dist": null,
        "requires_python": "",
        "summary": "A fast pure-python implementation of Enum",
        "version": "1.2.5"
    },
    "last_serial": 6200707,
    "releases": {
        "1.2.4": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6e1badd9371e16fb606d7665b967f44d",
                    "sha256": "2dd9879a7fcce43aafb421b00bbafd8a526aa3790aff465496234e60a83e6796"
                },
                "downloads": -1,
                "filename": "FastEnum_Meta-1.2.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6e1badd9371e16fb606d7665b967f44d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7225,
                "upload_time": "2019-11-22T12:06:35",
                "upload_time_iso_8601": "2019-11-22T12:06:35.163617Z",
                "url": "https://files.pythonhosted.org/packages/d8/21/1878bb5c72edfbfc1903c6dd2b1a37e241ce2fd952aea2cc881b39978e31/FastEnum_Meta-1.2.4-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a62ddab4f1da7721ede03d2f9e081f70",
                    "sha256": "e7d8814b46d44aade07bfe84c4890f5815ab2e75d9401da0ae2101ad5163991a"
                },
                "downloads": -1,
                "filename": "FastEnum-Meta-1.2.4.tar.gz",
                "has_sig": false,
                "md5_digest": "a62ddab4f1da7721ede03d2f9e081f70",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7450,
                "upload_time": "2019-11-22T12:06:37",
                "upload_time_iso_8601": "2019-11-22T12:06:37.526916Z",
                "url": "https://files.pythonhosted.org/packages/65/82/960cf58a6a17a0ba4fe6765c61de4d4141997c2a1c664f6760604cb9facf/FastEnum-Meta-1.2.4.tar.gz"
            }
        ],
        "1.2.5": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ba585c219bddd67eed3e86db7a5c5b57",
                    "sha256": "086e1b9dbccc7e79df0c1c3caec2fd8edcb43766ddc5e424e5e50ed084383275"
                },
                "downloads": -1,
                "filename": "FastEnum_Meta-1.2.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ba585c219bddd67eed3e86db7a5c5b57",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7333,
                "upload_time": "2019-11-26T11:42:26",
                "upload_time_iso_8601": "2019-11-26T11:42:26.497979Z",
                "url": "https://files.pythonhosted.org/packages/d7/c3/a24baf0622f0ea5d255209b2582792d10171c73827d4095413c41186192f/FastEnum_Meta-1.2.5-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "88866f224547082e7bc64e0704f85d48",
                    "sha256": "be1e9021ce623f4b587db0e2a283d85e0505d448dad6be87a4ffebc14f02211d"
                },
                "downloads": -1,
                "filename": "FastEnum-Meta-1.2.5.tar.gz",
                "has_sig": false,
                "md5_digest": "88866f224547082e7bc64e0704f85d48",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7583,
                "upload_time": "2019-11-26T11:42:29",
                "upload_time_iso_8601": "2019-11-26T11:42:29.632083Z",
                "url": "https://files.pythonhosted.org/packages/ac/27/042616863b0a1b487050bb314da57d8526897db1fa9f0ceb77db2b0952d0/FastEnum-Meta-1.2.5.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "ba585c219bddd67eed3e86db7a5c5b57",
                "sha256": "086e1b9dbccc7e79df0c1c3caec2fd8edcb43766ddc5e424e5e50ed084383275"
            },
            "downloads": -1,
            "filename": "FastEnum_Meta-1.2.5-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "ba585c219bddd67eed3e86db7a5c5b57",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 7333,
            "upload_time": "2019-11-26T11:42:26",
            "upload_time_iso_8601": "2019-11-26T11:42:26.497979Z",
            "url": "https://files.pythonhosted.org/packages/d7/c3/a24baf0622f0ea5d255209b2582792d10171c73827d4095413c41186192f/FastEnum_Meta-1.2.5-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "88866f224547082e7bc64e0704f85d48",
                "sha256": "be1e9021ce623f4b587db0e2a283d85e0505d448dad6be87a4ffebc14f02211d"
            },
            "downloads": -1,
            "filename": "FastEnum-Meta-1.2.5.tar.gz",
            "has_sig": false,
            "md5_digest": "88866f224547082e7bc64e0704f85d48",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 7583,
            "upload_time": "2019-11-26T11:42:29",
            "upload_time_iso_8601": "2019-11-26T11:42:29.632083Z",
            "url": "https://files.pythonhosted.org/packages/ac/27/042616863b0a1b487050bb314da57d8526897db1fa9f0ceb77db2b0952d0/FastEnum-Meta-1.2.5.tar.gz"
        }
    ]
}