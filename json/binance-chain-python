{
    "info": {
        "author": "Kobe Janssens",
        "author_email": "kobejanssens@outlook.com",
        "bugtrack_url": null,
        "classifiers": [
            "Intended Audience :: Developers",
            "License :: OSI Approved :: MIT License",
            "Operating System :: OS Independent",
            "Programming Language :: Python :: 3",
            "Programming Language :: Python :: 3.5",
            "Programming Language :: Python :: 3.6",
            "Programming Language :: Python :: 3.7"
        ],
        "description": "# Welcome to binance-chain-python!\nA SDK written in Python to communicate with the Binance Chain Exchange API.\n\n## Includes\n* Communicate with HTTP endpoints\n* Documentation / Documentation in functions them self\n* Parameter error handling \n\n## To do\n* Communicate with websockets\n* Communicate with HTTP RPC endpoints\n* Creating wallet with a private key or mnemonic phrase\n* Broadcast functionality\n\n## Requirements\n* Python 3.5.4+\n\n## Installation\n```bash\n$ pip install binance-chain-python\n```\n\n## Documentation\n\n### Overview\n* **[HTTP endpoints](#http)**\n  * [Block time](#block_time): Get the block time\n  * [Node info](#node_info): Get node information\n  * [Validators](#validators): Get validators\n  * [Peers](#peers): Get network peers\n  * [Account](#account): Get an account\n  * [Account sequence](#account_sequence): Get an account sequence\n  * [Transaction](#transaction): Get a transaction\n  * [Tokens](#tokens): Get tokens list\n  * [Markets](#markets): Get market pairs\n  * [Fees](#fees): Obtain trading fees information\n  * [Depth](#depth): Get the order book\n  * [Klines](#klines): Get candlestick bars\n  * [Orders closed](#orders_closed): Get closed orders\n  * [Orders open](#orders_open): Get open orders\n  * [Order](#order): Get an order\n  * [Ticker 24hr](#ticker_24hr): Get a market ticker\n  * [Trades](#trades): Get market trades\n  * [Transactions](#transactions): Get transactions\n  * [Balances](#balances): Get balances\n\n\n### <a name=\"http\"></a>**HTTP endpoints:**\nCommunicate with Binance Chain via all its HTTP endpoints.\n```python\nfrom binance_chain_python.Client import Client\n\nclient = Client()\n```\n___\n### <a name=\"block_time\"></a>Block time\n**Description**: Gets the latest block time and the current time according to the HTTP service (UTC Time).<br>\n**Rate limit**: 1 request per IP per second<br>\n**Code**:\n```python\nclient.get_block_time()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"ap_time\": \"2019-04-08T10:14:48Z\",  \n  \"block_time\": \"2019-04-08T10:14:47Z\"\n}\n```\n___\n### <a name=\"node_info\"></a>Node info\n**Description**: Gets runtime information about the node.<br>\n**Rate limit**: 1 request per IP per second<br>\n**Code**:\n```python\nclient.get_node_info()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"node_info\": {\n    \"id\": \"1bca643058c56f9c20ebaaad1739522ee7d11cd6\",\n    \"listen_addr\": \"10.201.41.106:27146\",\n    \"network\": \"Binance-Chain-Nile\",\n    \"version\": \"0.30.1\",\n    \"channels\": \"3540202122233038\",\n    \"moniker\": \"Fuji\",\n    \"other\": {\n      \"amino_version\": \"\",\n      \"p2p_version\": \"\",\n      \"consensus_version\": \"\",\n      \"rpc_version\": \"\",\n      \"tx_index\": \"on\",\n      \"rpc_address\": \"tcp://0.0.0.0:27147\"\n    }\n  },\n  \"sync_info\": {\n    \"latest_block_hash\": \"7D746374AA6192E5730BEE4D0F17FEE91028715855CE9DA81CF8EF45BDD3D9F2\",\n    \"latest_app_hash\": \"1FD5A39224FF57B6BF231E3D0EF0D02965033838B09B25A125F52973A076FB65\",\n    \"latest_block_height\": 6941023,\n    \"latest_block_time\": \"2019-04-08T10:20:19.105663417Z\",\n    \"catching_up\": false\n  },\n  \"validator_info\": {\n    \"address\": \"7B343E041CA130000A8BC00C35152BD7E7740037\",\n    \"pub_key\": [\n      74,\n      ...\n    ],\n    \"voting_power\": 100000000000\n  }\n}\n```\n___\n### <a name=\"validators\"></a>Validators\n**Description**: Gets the list of validators used in consensus.<br>\n**Rate limit**: 10 requests per IP per second<br>\n**Code**:\n```python\nclient.get_validators()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"block_height\": 6943856,\n  \"validators\": [\n    {\n      \"address\": \"06FD60078EB4C2356137DD50036597DB267CF616\",\n      \"pub_key\": [\n        22,\n        ...\n      ],\n      \"voting_power\": 100000000000\n    },\n    ...\n  ]\n}  \n```\n___\n### <a name=\"peers\"></a>Peers\n**Description**: Gets the list of network peers.<br>\n**Rate limit**: 1 request per IP per second<br>\n**Code**:\n```python\nclient.get_peers()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  {\n    \"accelerated\": true,\n    \"access_addr\": \"https://testnet-dex.binance.org:443\",\n    \"capabilities\": [\n      \"qs\",\n      \"ap\",\n      \"ws\"\n    ],\n    \"id\": \"gateway-ingress\",\n    \"listen_addr\": \"https://testnet-dex.binance.org:443\",\n    \"moniker\": \"gateway-ingress\",\n    \"network\": \"gateway\",\n    \"stream_addr\": \"wss://testnet-dex.binance.org\",\n    \"version\": \"1.0.0\"\n  },\n  ...\n]\n```\n___\n### <a name=\"account\"></a>Account\n**Description**: Gets account metadata for an address.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | Yes | string\n\n**Code**:\n```python\nclient.get_account(address=\"tbnb1g86598zaptaqp0efe0qeylmh29jzuucdp8pyt6\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"address\": \"tbnb1g86598zaptaqp0efe0qeylmh29jzuucdp8pyt6\",\n  \"public_key\": [\n    3,\n    ...\n  ],\n  \"account_number\": 77,\n  \"sequence\": 31497,\n  \"balances\": [\n    {\n      \"symbol\": \"BNB\",\n      \"free\": \"84996.59717600\",\n      \"locked\": \"135.52000000\",\n      \"frozen\": \"0.00000000\"\n    },\n    ...\n  ]\n}\n```\n___\n### <a name=\"account_sequence\"></a>Account sequence\n**Description**: Gets account sequence for an address.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | Yes | string\n\n**Code**:\n```python\nclient.get_account_sequence(address=\"tbnb1g86598zaptaqp0efe0qeylmh29jzuucdp8pyt6\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"sequence\": 31503\n}\n```\n___\n### <a name=\"transaction\"></a>Transaction\n**Description**: Gets transaction metadata by transaction ID. By default, transactions can be returned in a json/raw format (default format is json).<br>\n**Rate limit**: 10 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`hash` | The transaction hash to query | Yes | string\n`format` | Response format (json or raw) | No | string\n\n**Code**:\n```python\nclient.get_transaction(hash=\"F21A134FBE25AE06566CC48DF29D83C0BCC07DD653A69D7B9420EE1E0535C5EF\")\n```\n**Return**:<br>\nThe structure of the return from this function.\nRaw:\n```\n{\n  \"data\": \"Tx{E301F0625DEE0A69CE6DC0430A140AB3B128142BE64E51599769CB1E25FFC6E7EB08122E304142334231323831343242453634453531353939373639434231453235464643364537454230382D34323333381A0D424E425F4254432E422D393138200228023082AB153880F085DA2C400112700A26EB5AE98721029B13D91139F9F0D3730AAA1A8519FF5FB199CA0D146AFBA702D8023E7058DF62124037D3C57B7B92371F8C279DC1169E1A6BF05247FC8FB9CF6A4B4457ECE91F397808752FABE4031C84D2B0923E28A4445F70994FBE733C3AD6BB1D65028DABD608182F20E1CA022003}\",\n  \"hash\": \"\\ufffd\\u001a\\u0013O\\ufffd%\\ufffd\\u0006Vl\u010d\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd}\\ufffd\",\n  \"log\": \"Msg 0: \",\n  \"ok\": true\n}\n```\nJson:\n```\n\n  \"hash\": \"F21A134FBE25AE06566CC48DF29D83C0BCC07DD653A69D7B9420EE1E0535C5EF\",\n  \"height\": \"7018529\",\n  \"tx\": {\n    \"type\": \"auth/StdTx\",\n    \"value\": {\n      \"data\": null,\n      \"memo\": \"\",\n      \"msg\": [\n        {\n          \"type\": \"dex/NewOrder\",\n          \"value\": {\n            \"id\": \"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42338\",\n            \"ordertype\": 2,\n            \"price\": \"349570\",\n            \"quantity\": \"12000000000\",\n            \"sender\": \"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\",\n            \"side\": 2,\n            \"symbol\": \"BNB_BTC.B-918\",\n            \"timeinforce\": 1\n          }\n        }\n      ],\n      \"signatures\": [\n        {\n          \"account_number\": \"47\",\n          \"pub_key\": {\n            \"type\": \"tendermint/PubKeySecp256k1\",\n            \"value\": \"ApsT2RE5+fDTcwqqGoUZ/1+xmcoNFGr7pwLYAj5wWN9i\"\n          },\n          \"sequence\": \"42337\",\n          \"signature\": \"N9PFe3uSNx+MJ53BFp4aa/BSR/yPuc9qS0RX7OkfOXgIdS+r5AMchNKwkj4opERfcJlPvnM8Ota7HWUCjavWCA==\"\n        }\n      ],\n      \"source\": \"3\"\n    }\n  }\n}\n```\n___\n### <a name=\"tokens\"></a>Tokens\n**Description**: Gets a list of tokens that have been issued.<br>\n**Rate limit**: 1 request per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`limit` | The limit of results. default 500; max 1000 | No | integer\n`offset` | start with 0; default 0 | No | integer\n\n**Code**:\n```python\nclient.get_tokens()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  {\n    \"name\": \"binance coin of he yi\",\n    \"symbol\": \"000-0E1\",\n    \"original_symbol\": \"000\",\n    \"total_supply\": \"100.00000000\",\n    \"owner\": \"tbnb1j9jm8uc54scme3z6kkl6snjja9fkljx06hqdu8\",\n    \"mintable\": true\n  },\n  ...\n]\n```\n___\n### <a name=\"markets\"></a>Markets\n**Description**: Gets the list of market pairs that have been listed.<br>\n**Rate limit**: 1 request per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`limit` | The limit of results. default 500; max 1000 | No | integer\n`offset` | start with 0; default 0 | No | integer\n\n**Code**:\n```python\nclient.get_markets()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  {\n    \"base_asset_symbol\": \"000-0E1\",\n    \"quote_asset_symbol\": \"BNB\",\n    \"list_price\": \"1.00000000\",\n    \"tick_size\": \"0.00100000\",\n    \"lot_size\": \"0.00001000\"\n  },\n  ...\n]\n```\n___\n### <a name=\"fees\"></a>Fees\n**Description**: Gets the current trading fees settings.<br>\n**Rate limit**: 1 request per IP per second<br>\n\n**Code**:\n```python\nclient.get_fees()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  {\n    \"msg_type\": \"submit_proposal\",\n    \"fee\": 1000000000,\n    \"fee_for\": 1\n  },\n  {\n    \"msg_type\": \"deposit\",\n    \"fee\": 125000,\n    \"fee_for\": 1\n  },\n  {\n    \"msg_type\": \"vote\",\n    \"fee\": 0,\n    \"fee_for\": 3\n  },\n  {\n    \"msg_type\": \"dexList\",\n    \"fee\": 80000000000,\n    \"fee_for\": 2\n  },\n  {\n    \"msg_type\": \"orderNew\",\n    \"fee\": 0,\n    \"fee_for\": 3\n  },\n  {\n    \"msg_type\": \"orderCancel\",\n    \"fee\": 0,\n    \"fee_for\": 3\n  },\n  {\n    \"msg_type\": \"issueMsg\",\n    \"fee\": 40000000000,\n    \"fee_for\": 2\n  },\n  {\n    \"msg_type\": \"mintMsg\",\n    \"fee\": 20000000000,\n    \"fee_for\": 2\n  },\n  {\n    \"msg_type\": \"tokensBurn\",\n    \"fee\": 100000000,\n    \"fee_for\": 1\n  },\n  {\n    \"msg_type\": \"tokensFreeze\",\n    \"fee\": 1000000,\n    \"fee_for\": 1\n  },\n  {\n    \"fixed_fee_params\": {\n      \"msg_type\": \"send\",\n      \"fee\": 125000,\n      \"fee_for\": 1\n    },\n    \"multi_transfer_fee\": 100000,\n    \"lower_limit_as_multi\": 2\n  },\n  {\n    \"dex_fee_fields\": [\n      {\n        \"fee_name\": \"ExpireFee\",\n        \"fee_value\": 100000\n      },\n      {\n        \"fee_name\": \"ExpireFeeNative\",\n        \"fee_value\": 20000\n      },\n      {\n        \"fee_name\": \"CancelFee\",\n        \"fee_value\": 100000\n      },\n      {\n        \"fee_name\": \"CancelFeeNative\",\n        \"fee_value\": 20000\n      },\n      {\n        \"fee_name\": \"FeeRate\",\n        \"fee_value\": 1000\n      },\n      {\n        \"fee_name\": \"FeeRateNative\",\n        \"fee_value\": 400\n      },\n      {\n        \"fee_name\": \"IOCExpireFee\",\n        \"fee_value\": 50000\n      },\n      {\n        \"fee_name\": \"IOCExpireFeeNative\",\n        \"fee_value\": 10000\n      }\n    ]\n  },\n  {\n    \"msg_type\": \"create_validator\",\n    \"fee\": 1000000000,\n    \"fee_for\": 1\n  },\n  {\n    \"msg_type\": \"remove_validator\",\n    \"fee\": 100000000,\n    \"fee_for\": 1\n  }\n]\n```\n___\n### <a name=\"depth\"></a>Depth\n**Description**: Gets the order book depth data for a given pair symbol. The limit  must be one of the allowed limits.<br>\n**Rate limit**: 10 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`symbol` | Market pair symbol. For example: 000-0E1_BNB | Yes | string\n`limit` | The limit of results. Allowed limits: [5, 10, 20, 50, 100, 500, 1000] | No | integer\n\n\n**Code**:\n```python\nclient.get_depth(symbol=\"000-0E1_BNB\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"asks\": [\n    [\n      \"0.20000000\",   # Price\n      \"2.49314000\"    # Amount\n    ],\n    ...\n  ],\n  \"bids\": [\n    [\n      \"201.00000000\", # Price\n      \"2.49314000\"    # Amount\n    ],\n    ...\n  ],\n  \"height\": 7020749\n}\n```\n___\n### <a name=\"klines\"></a>Klines\n**Description**: Gets candlestick/kline bars for a symbol. Bars are uniquely identified by their open time.<br>\n**Rate limit**: 10 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`symbol` | Market pair symbol. For example: 000-0E1_BNB | Yes | string\n`interval` | interval. Allowed value: [1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M] | Yes | string\n`limit` | default 300; max 1000 | No | integer\n`startTime` | start time in Milliseconds | No | integer\n`endTime` | end time in Milliseconds | No | integer\n\n\n**Code**:\n```python\nclient.get_klines(symbol=\"000-0E1_BNB\", interval=\"15m\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  [\n    1554747300000,\n    \"201.00000000\",\n    \"201.00000000\",\n    \"201.00000000\",\n    \"201.00000000\",\n    \"0.00000000\",\n    1554748199999,\n    \"0.00000000\",\n    0\n  ],\n  ...\n]\n```\n___\n### <a name=\"orders_closed\"></a>Orders closed\n**Description**: Gets closed (filled and cancelled) orders for a given address.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | Yes | string\n`end` | end time in Milliseconds | No | integer\n`limit` | The limit of results. default 500; max 1000 | No | integer\n`offset` | start with 0; default 0 | No | integer\n`side` | order side (1 for buy and 2 for sell) | No | integer\n`start` | start time in Milliseconds | No | integer\n`status` | order status list. Allowed value: [Ack, PartialFill, IocNoFill, FullyFill, Canceled, Expired, FailedBlocking, FailedMatching] | No | string\n`symbol` | Market pair symbol. For example: 000-0E1_BNB | No | string\n`total` | total number required, 0 for not required and 1 for required; default not required, return total=-1 in response | No | int\n\n\n**Code**:\n```python\nclient.get_orders_closed(address=\"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"order\": [\n    {\n      \"orderId\": \"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42342\",\n      \"symbol\": \"BNB_BTC.B-918\",\n      \"owner\": \"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\",\n      \"price\": \"0.00353382\",\n      \"quantity\": \"129.00000000\",\n      \"cumulateQuantity\": \"0.00000000\",\n      \"fee\": \"#Cxl:1;BNB:0.00020000;\",\n      \"orderCreateTime\": \"2019-04-08T19:25:13.430Z\",\n      \"transactionTime\": \"2019-04-08T19:25:19.424Z\",\n      \"status\": \"Canceled\",\n      \"timeInForce\": 1,\n      \"side\": 2,\n      \"type\": 2,\n      \"tradeId\": \"\",\n      \"lastExecutedPrice\": \"0.00000000\",\n      \"lastExecutedQuantity\": \"0.00000000\",\n      \"transactionHash\": \"FBF22B33C15AFB9FB4338419037C7D149613167000F3AD6B18C92D317E118FDA\"\n    },\n    ...\n  ],\n  \"total\":-1\n}\n```\n___\n### <a name=\"orders_open\"></a>Orders open\n**Description**: Gets open orders for a given address.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | Yes | string\n`limit` | The limit of results. default 500; max 1000 | No | integer\n`offset` | start with 0; default 0 | No | integer\n`symbol` | Market pair symbol. For example: 000-0E1_BNB | No | string\n`total` | total number required, 0 for not required and 1 for required; default not required, return total=-1 in response | No | int\n\n\n**Code**:\n```python\nclient.get_orders_open(address=\"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"order\": [\n    {\n      \"orderId\": \"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42344\",\n      \"symbol\": \"BNB_BTC.B-918\",\n      \"owner\": \"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\",\n      \"price\": \"0.00350550\",\n      \"quantity\": \"85.00000000\",\n      \"cumulateQuantity\": \"0.00000000\",\n      \"fee\": \"\",\n      \"orderCreateTime\": \"2019-04-08T19:26:32.358Z\",\n      \"transactionTime\": \"2019-04-08T19:26:32.358Z\",\n      \"status\": \"Ack\",\n      \"timeInForce\": 1,\n      \"side\": 2,\n      \"type\": 2,\n      \"tradeId\": \"\",\n      \"lastExecutedPrice\": \"0.00000000\",\n      \"lastExecutedQuantity\": \"0.00000000\",\n      \"transactionHash\": \"B4558D9F97E2AC3A71B986DB8E0670DFD82577ED9ABD2248DBECAC2906E6AA26\"\n    },\n    ...\n  ]\n  \"total\":-1\n}\n```\n___\n### <a name=\"order\"></a>Order\n**Description**: Gets metadata for an individual order by its ID.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`id` | order id| Yes | string\n\n**Code**:\n```python\nclient.get_order(id=\"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42338\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"orderId\": \"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42338\",\n  \"symbol\": \"BNB_BTC.B-918\",\n  \"owner\": \"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\",\n  \"price\": \"0.00349570\",\n  \"quantity\": \"120.00000000\",\n  \"cumulateQuantity\": \"0.00000000\",\n  \"fee\": \"#Cxl:1;BNB:0.00020000;\",\n  \"orderCreateTime\": \"2019-04-08T19:00:38.036Z\",\n  \"transactionTime\": \"2019-04-08T19:00:41.679Z\",\n  \"status\": \"Canceled\",\n  \"timeInForce\": 1,\n  \"side\": 2,\n  \"type\": 2,\n  \"tradeId\": \"\",\n  \"lastExecutedPrice\": \"0.00000000\",\n  \"lastExecutedQuantity\": \"0.00000000\",\n  \"transactionHash\": \"F21A134FBE25AE06566CC48DF29D83C0BCC07DD653A69D7B9420EE1E0535C5EF\"\n}\n```\n___\n### <a name=\"ticker_24hr\"></a>Ticker 24hr\n**Description**: Gets 24 hour price change statistics for a market pair symbol.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`symbol` | Market pair symbol. For example: 000-0E1_BNB | No | string\n\n**Code**:\n```python\nclient.get_ticker_24hr()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  {\n    \"symbol\": \"GLC-0C7_BNB\",\n    \"priceChange\": \"0.00000000\",\n    \"priceChangePercent\": \"0.0000\",\n    \"prevClosePrice\": \"0.81000000\",\n    \"lastPrice\": \"0.81000000\",\n    \"lastQuantity\": \"1.00000000\",\n    \"openPrice\": \"0.81000000\",\n    \"highPrice\": \"0.81000000\",\n    \"lowPrice\": \"0.81000000\",\n    \"openTime\": 1554666000124,\n    \"closeTime\": 1554752400124,\n    \"firstId\": \"3033814-0\",\n    \"lastId\": \"3033814-0\",\n    \"bidPrice\": \"0\",\n    \"bidQuantity\": \"0\",\n    \"askPrice\": \"0\",\n    \"askQuantity\": \"0\",\n    \"weightedAvgPrice\": \"0.81000000\",\n    \"volume\": \"0\",\n    \"quoteVolume\": \"0\",\n    \"count\": 0\n  },\n  ...\n]\n```\n___\n### <a name=\"trades\"></a>Trades\n**Description**: Gets a list of historical trades. Default query window is latest 7 days; The maximum start - end query window is 3 months.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | No | string\n`buyerOrderId` | buyer order id | No | string\n`end` | end time in Milliseconds | No | integer\n`height` | block height | No | integer\n`limit` | The limit of results. default 500; max 1000 | No | integer\n`offset` | start with 0; default 0 | No | integer\n`quoteAsset` | quote asset | No | string\n`sellerOrderId` | seller order id | No | string\n`side` | order side (1 for buy and 2 for sell) | No | integer\n`start` | start time in Milliseconds | No | integer\n`status` | order status list. Allowed value: [Ack, PartialFill, IocNoFill, FullyFill, Canceled, Expired, FailedBlocking, FailedMatching] | No | string\n`symbol` | Market pair symbol. For example: 000-0E1_BNB | No | string\n`total` | total number required, 0 for not required and 1 for required; default not required, return total=-1 in response | No | int\n\n\n**Code**:\n```python\nclient.get_trades()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"trade\": [\n    {\n      \"tradeId\": \"7019396-0\",\n      \"blockHeight\": 7019396,\n      \"symbol\": \"BNB_USDT.B-B7C\",\n      \"price\": \"17.98820000\",\n      \"quantity\": \"53.43890000\",\n      \"buyerOrderId\": \"B781E5DCDE55CFF666C9A3F630DFEAA4FA940CBA-2256\",\n      \"sellerOrderId\": \"BF8AA0045CC95BB6F0E1485A1248096BE057A9BF-44689\",\n      \"buyerId\": \"tbnb1k7q7thx72h8lvekf50mrphl25nafgr964e628r\",\n      \"sellerId\": \"tbnb1h792qpzue9dmdu8pfpdpyjqfd0s902dljvs4jz\",\n      \"buyFee\": \"BNB:0.02137556;\",\n      \"sellFee\": \"BNB:0.02137556;\",\n      \"baseAsset\": \"BNB\",\n      \"quoteAsset\": \"USDT.B-B7C\",\n      \"time\": 1554750389496\n    },\n    ...\n  ]\n}\n```\n___\n### <a name=\"transactions\"></a>Transactions\n**Description**: Gets a list of transactions. Multisend transaction is not available in this API. Default query window is latest 24 hours; The maximum start - end query window is 3 months.<br>\n**Rate limit**: 60 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | Yes | string\n`blockHeight` | block height | No | integer\n`endTime` | end time in Milliseconds | No | integer\n`limit` | The limit of results. default 500; max 1000 | No | integer\n`offset` | start with 0; default 0 | No | integer\n`side` | transaction side. Allowed value: [ RECEIVE, SEND] | No | string\n`startTime` | start time in Milliseconds | No | integer\n`txAsset` | txAsset | No | string\n`txType` | transaction type. Allowed value: [ NEW_ORDER,ISSUE_TOKEN,BURN_TOKEN,LIST_TOKEN,CANCEL_ORDER,FREEZE_TOKEN,UN_FREEZE_TOKEN,TRANSFER,PROPOSAL,VOTE,MINT,DEPOSIT] | No | string\n\n\n**Code**:\n```python\nclient.get_transactions()\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n{\n  \"tx\": [\n    {\n      \"txHash\": \"B4558D9F97E2AC3A71B986DB8E0670DFD82577ED9ABD2248DBECAC2906E6AA26\",\n      \"blockHeight\": 7022392,\n      \"txType\": \"NEW_ORDER\",\n      \"timeStamp\": \"2019-04-08T19:26:32.358Z\",\n      \"fromAddr\": \"tbnb1p2emz2q590nyu52eja5uk839llrw06cgtx9knp\",\n      \"toAddr\": null,\n      \"value\": \"0.29796750\",\n      \"txAsset\": \"BNB\",\n      \"txFee\": \"0.00000000\",\n      \"txAge\": 1536,\n      \"orderId\": \"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42344\",\n      \"code\": 0,\n      \"data\": \"{\\\"orderData\\\":{\\\"symbol\\\":\\\"BNB_BTC.B-918\\\",\\\"orderType\\\":\\\"limit\\\",\\\"side\\\":\\\"sell\\\",\\\"price\\\":0.00350550,\\\"quantity\\\":85.00000000,\\\"timeInForce\\\":\\\"GTE\\\",\\\"orderId\\\":\\\"0AB3B128142BE64E51599769CB1E25FFC6E7EB08-42344\\\"}}\",\n      \"confirmBlocks\": 0\n    },\n    ...\n  ]\n}\n```\n___\n### <a name=\"balances\"></a>Balances\n**Description**: Gets balances for an address.<br>\n**Rate limit**: 5 requests per IP per second<br>\n**Parameters**:\n\nName | Description | Description | Type\n--- | --- | --- | ---\n`address` | The owner address | Yes | string\n\n**Code**:\n```python\nclient.get_account(address=\"tbnb1g86598zaptaqp0efe0qeylmh29jzuucdp8pyt6\")\n```\n**Return**:<br>\nThe structure of the return from this function.\n```\n[\n  {\n    \"symbol\": \"BNB\",\n    \"free\": \"84996.59717600\",\n    \"locked\": \"135.52000000\",\n    \"frozen\": \"0.00000000\"\n  },\n  ...\n]\n```\n\n## License\n**MIT** License\n\n",
        "description_content_type": "text/markdown",
        "docs_url": null,
        "download_url": "",
        "downloads": {
            "last_day": -1,
            "last_month": -1,
            "last_week": -1
        },
        "home_page": "https://github.com/kobej1/binance-chain-python",
        "keywords": "",
        "license": "MIT",
        "maintainer": "",
        "maintainer_email": "",
        "name": "binance-chain-python",
        "package_url": "https://pypi.org/project/binance-chain-python/",
        "platform": "",
        "project_url": "https://pypi.org/project/binance-chain-python/",
        "project_urls": {
            "Homepage": "https://github.com/kobej1/binance-chain-python"
        },
        "release_url": "https://pypi.org/project/binance-chain-python/0.0.2/",
        "requires_dist": [
            "requests"
        ],
        "requires_python": "",
        "summary": "A SDK to communicate with the Binance Chain Exchange API",
        "version": "0.0.2"
    },
    "last_serial": 5115385,
    "releases": {
        "0.0.1": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "130fdf27f5aa0384bc753163d2113956",
                    "sha256": "21cf11bdac65cf045e069a50a2a65f8f2a7ef795cf73b2b3fb6c7d14c75321e8"
                },
                "downloads": -1,
                "filename": "binance_chain_python-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "130fdf27f5aa0384bc753163d2113956",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7983,
                "upload_time": "2019-04-07T20:57:35",
                "url": "https://files.pythonhosted.org/packages/d5/81/69256ac167b992db83fed24719a2c2717921378ffd11d8495a8512aaa92d/binance_chain_python-0.0.1-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c353d547b341490a8af5f60f1a1037bf",
                    "sha256": "c9b196be93c515228ce723579b432c38049e0514e47df329e6754b60c4d81b6a"
                },
                "downloads": -1,
                "filename": "binance-chain-python-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c353d547b341490a8af5f60f1a1037bf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6068,
                "upload_time": "2019-04-07T20:57:37",
                "url": "https://files.pythonhosted.org/packages/e1/11/aeaaad051f0c68c04af8f85954be4adf5f573b0f99e6d9ca3b9a2ff74d4a/binance-chain-python-0.0.1.tar.gz"
            }
        ],
        "0.0.2": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5159e54122b13cd84818da6567522799",
                    "sha256": "e8ff059a3248df31ad16bfa3311543851d5a75ee327c4bc951ea6ae129a95fc3"
                },
                "downloads": -1,
                "filename": "binance_chain_python-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5159e54122b13cd84818da6567522799",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13505,
                "upload_time": "2019-04-08T20:14:31",
                "url": "https://files.pythonhosted.org/packages/dc/1b/d4746083302650a2f42fed8c20c337b64aa3a3437a1af91039ef8276a862/binance_chain_python-0.0.2-py3-none-any.whl"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d9b7a056808b3e77c84a0b72fd81708d",
                    "sha256": "02130934c31ee3448d4460b3562ab1f2a576c58e55f38648e668c9abaa176f92"
                },
                "downloads": -1,
                "filename": "binance-chain-python-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "d9b7a056808b3e77c84a0b72fd81708d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17973,
                "upload_time": "2019-04-08T20:14:35",
                "url": "https://files.pythonhosted.org/packages/46/0e/0ce881f973096af23ccf4ca403464ae9197dc42a4c5b12adef250bd865d8/binance-chain-python-0.0.2.tar.gz"
            }
        ]
    },
    "urls": [
        {
            "comment_text": "",
            "digests": {
                "md5": "5159e54122b13cd84818da6567522799",
                "sha256": "e8ff059a3248df31ad16bfa3311543851d5a75ee327c4bc951ea6ae129a95fc3"
            },
            "downloads": -1,
            "filename": "binance_chain_python-0.0.2-py3-none-any.whl",
            "has_sig": false,
            "md5_digest": "5159e54122b13cd84818da6567522799",
            "packagetype": "bdist_wheel",
            "python_version": "py3",
            "requires_python": null,
            "size": 13505,
            "upload_time": "2019-04-08T20:14:31",
            "url": "https://files.pythonhosted.org/packages/dc/1b/d4746083302650a2f42fed8c20c337b64aa3a3437a1af91039ef8276a862/binance_chain_python-0.0.2-py3-none-any.whl"
        },
        {
            "comment_text": "",
            "digests": {
                "md5": "d9b7a056808b3e77c84a0b72fd81708d",
                "sha256": "02130934c31ee3448d4460b3562ab1f2a576c58e55f38648e668c9abaa176f92"
            },
            "downloads": -1,
            "filename": "binance-chain-python-0.0.2.tar.gz",
            "has_sig": false,
            "md5_digest": "d9b7a056808b3e77c84a0b72fd81708d",
            "packagetype": "sdist",
            "python_version": "source",
            "requires_python": null,
            "size": 17973,
            "upload_time": "2019-04-08T20:14:35",
            "url": "https://files.pythonhosted.org/packages/46/0e/0ce881f973096af23ccf4ca403464ae9197dc42a4c5b12adef250bd865d8/binance-chain-python-0.0.2.tar.gz"
        }
    ]
}